@1000
21 40 // I_inst: load 0100000000100001 rs =  0, rt =  1, imm =   1 
@1002
4d 5e // I_inst: load 0101111001001101 rs = 15, rt =  2, imm =  13 
@1004
6e 52 // I_inst: load 0101001001101110 rs =  9, rt =  3, imm =  14 
@1006
8c 50 // I_inst: load 0101000010001100 rs =  8, rt =  4, imm =  12 
@1008
ac 48 // I_inst: load 0100100010101100 rs =  4, rt =  5, imm =  12 
@100a
c5 48 // I_inst: load 0100100011000101 rs =  4, rt =  6, imm =   5 
@100c
e8 4a // I_inst: load 0100101011101000 rs =  5, rt =  7, imm =   8 
@100e
05 5b // I_inst: load 0101101100000101 rs = 13, rt =  8, imm =   5 
@1010
3f 43 // I_inst: load 0100001100111111 rs =  1, rt =  9, imm =  -1 
@1012
4a 53 // I_inst: load 0101001101001010 rs =  9, rt = 10, imm =  10 
@1014
7b 43 // I_inst: load 0100001101111011 rs =  1, rt = 11, imm =  -5 
@1016
93 53 // I_inst: load 0101001110010011 rs =  9, rt = 12, imm = -13 
@1018
aa 51 // I_inst: load 0101000110101010 rs =  8, rt = 13, imm =  10 
@101a
ce 51 // I_inst: load 0101000111001110 rs =  8, rt = 14, imm =  14 
@101c
e8 41 // I_inst: load 0100000111101000 rs =  0, rt = 15, imm =   8 
@101e
45 23 // R_inst: sub 0010001101000101 rs =  1, rt = 10, imm =   4 
@1020
03 01 // R_inst: sub 0000000100000011 rs =  0, rt =  8, imm =   4 
@1022
e9 57 // I_inst: load 0101011111101001 rs = 11, rt = 15, imm =   9 
@1024
8d 6f // I_inst: store 0110111110001101 rs =  7, rt = 12, imm =  13 
@1026
ab 83 // I_inst: beq 1000001110101011 rs =  1, rt = 13, imm =  11 
@1028
a0 41 // I_inst: load 0100000110100000 rs =  0, rt = 13, imm =   0 
@102a
a5 41 // I_inst: load 0100000110100101 rs =  0, rt = 13, imm =   5 
@102c
25 40 // I_inst: load 0100000000100101 rs =  0, rt =  1, imm =   5 
@102e
26 b0 // J_inst: jump 1011000000100110 address = 01026 
@1030
df 27 // R_inst: sub 0010011111011111 rs =  3, rt = 14, imm =  14 
@1032
f9 10 // R_inst: sub 0001000011111001 rs =  8, rt =  7, imm =   3 
@1034
38 06 // R_inst: add 0000011000111000 rs =  3, rt =  1, imm =  10 
@1036
2b 30 // R_inst: sub 0011000000101011 rs =  8, rt =  1, imm =  10 
@1038
c3 3b // R_inst: sub 0011101111000011 rs = 13, rt = 14, imm =  -5 
@103a
29 01 // R_inst: sub 0000000100101001 rs =  0, rt =  9, imm =   9 
@103c
71 24 // R_inst: sub 0010010001110001 rs =  2, rt =  3, imm =  -7 
@103e
34 18 // R_inst: add 0001100000110100 rs = 12, rt =  1, imm =  12 
@1040
31 3d // R_inst: sub 0011110100110001 rs = 14, rt =  9, imm = -12 
@1042
e9 05 // R_inst: sub 0000010111101001 rs =  2, rt = 15, imm =  -9 
@1044
ba 53 // I_inst: load 0101001110111010 rs =  9, rt = 13, imm =  -6 
@1046
7a 53 // I_inst: load 0101001101111010 rs =  9, rt = 11, imm =  -6 
@1048
a7 97 // I_inst: beq 1001011110100111 rs = 11, rt = 13, imm =   7 
@104a
7c 07 // R_inst: add 0000011101111100 rs =  3, rt = 11, imm =   7 
@104c
9f 27 // R_inst: sub 0010011110011111 rs =  3, rt = 12, imm =  14 
@104e
85 13 // R_inst: sub 0001001110000101 rs =  9, rt = 12, imm =  -4 
@1050
0c 01 // R_inst: add 0000000100001100 rs =  0, rt =  8, imm =  -3 
@1052
a8 13 // R_inst: add 0001001110101000 rs =  9, rt = 13, imm =  -6 
@1054
02 06 // R_inst: add 0000011000000010 rs =  3, rt =  0, imm = -15 
@1056
8f 0b // R_inst: sub 0000101110001111 rs =  5, rt = 12, imm =  13 
@1058
04 24 // R_inst: set 0010010000000100 rs =  2, rt =  0, imm =  -7 
@105a
65 34 // R_inst: sub 0011010001100101 rs = 10, rt =  3, imm =  -5 
@105c
b5 10 // R_inst: sub 0001000010110101 rs =  8, rt =  5, imm =   9 
@105e
8c 86 // I_inst: beq 1000011010001100 rs =  3, rt =  4, imm =  12 
@1060
cf 40 // I_inst: load 0100000011001111 rs =  0, rt =  6, imm =  15 
@1062
ae 72 // I_inst: store 0111001010101110 rs =  9, rt =  5, imm =  14 
@1064
cf 4e // I_inst: load 0100111011001111 rs =  7, rt =  6, imm =  15 
@1066
14 02 // R_inst: add 0000001000010100 rs =  1, rt =  0, imm =   3 
@1068
8b 42 // I_inst: load 0100001010001011 rs =  1, rt =  4, imm =  11 
@106a
6b 42 // I_inst: load 0100001001101011 rs =  1, rt =  3, imm =  11 
@106c
5e b0 // J_inst: jump 1011000001011110 address = 0105e 
@106e
29 3a // R_inst: sub 0011101000101001 rs = 13, rt =  1, imm =   9 
@1070
a5 3e // R_inst: sub 0011111010100101 rs = 15, rt =  5, imm =  -4 
@1072
ff 00 // R_inst: sub 0000000011111111 rs =  0, rt =  7, imm =  -1 
@1074
59 0c // R_inst: sub 0000110001011001 rs =  6, rt =  2, imm = -12 
@1076
2d 17 // R_inst: sub 0001011100101101 rs = 11, rt =  9, imm =  -1 
@1078
86 b0 // J_inst: jump 1011000010000110 address = 01086 
@107a
8c b0 // J_inst: jump 1011000010001100 address = 0108c 
@107c
9d 34 // R_inst: sub 0011010010011101 rs = 10, rt =  4, imm =   7 
@107e
fd 1c // R_inst: sub 0001110011111101 rs = 14, rt =  7, imm =  11 
@1080
52 12 // R_inst: add 0001001001010010 rs =  9, rt =  2, imm =   0 
@1082
aa 15 // R_inst: add 0001010110101010 rs = 10, rt = 13, imm = -15 
@1084
a9 1a // R_inst: sub 0001101010101001 rs = 13, rt =  5, imm =   0 
@1086
c7 4b // I_inst: load 0100101111000111 rs =  5, rt = 14, imm =   7 
@1088
e7 4b // I_inst: load 0100101111100111 rs =  5, rt = 15, imm =   7 
@108a
d7 9f // I_inst: beq 1001111111010111 rs = 15, rt = 14, imm =  -9 
@108c
62 01 // R_inst: add 0000000101100010 rs =  0, rt = 11, imm = -12 
@108e
6e 4b // I_inst: load 0100101101101110 rs =  5, rt = 11, imm =  14 
@1090
0f 55 // I_inst: load 0101010100001111 rs = 10, rt =  8, imm =  15 
@1092
2f 55 // I_inst: load 0101010100101111 rs = 10, rt =  9, imm =  15 
@1094
01 93 // I_inst: beq 1001001100000001 rs =  9, rt =  8, imm =   1 
@1096
67 35 // R_inst: sub 0011010101100111 rs = 10, rt = 11, imm =  -3 
@1098
d1 1e // R_inst: sub 0001111011010001 rs = 15, rt =  6, imm =   4 
@109a
a9 40 // I_inst: load 0100000010101001 rs =  0, rt =  5, imm =   9 
@109c
b0 23 // R_inst: set 0010001110110000 rs =  1, rt = 13, imm =  -2 
@109e
9f 0d // R_inst: sub 0000110110011111 rs =  6, rt = 12, imm = -11 
@10a0
af 8e // I_inst: beq 1000111010101111 rs =  7, rt =  5, imm =  15 
@10a2
4c 3b // R_inst: set 0011101101001100 rs = 13, rt = 10, imm = -13 
@10a4
77 3e // R_inst: sub 0011111001110111 rs = 15, rt =  3, imm =   0 
@10a6
6a 8f // I_inst: beq 1000111101101010 rs =  7, rt = 11, imm =  10 
@10a8
6c 2a // R_inst: set 0010101001101100 rs =  5, rt =  3, imm =   7 
@10aa
b9 3f // R_inst: sub 0011111110111001 rs = 15, rt = 13, imm =  15 
@10ac
6e 51 // I_inst: load 0101000101101110 rs =  8, rt = 11, imm =  14 
@10ae
ee 50 // I_inst: load 0101000011101110 rs =  8, rt =  7, imm =  14 
@10b0
a6 b0 // J_inst: jump 1011000010100110 address = 010a6 
@10b2
ec 06 // R_inst: add 0000011011101100 rs =  3, rt =  7, imm =  13 
@10b4
6d 34 // R_inst: sub 0011010001101101 rs = 10, rt =  3, imm =   5 
@10b6
c8 06 // R_inst: add 0000011011001000 rs =  3, rt =  6, imm =  -3 
@10b8
15 25 // R_inst: sub 0010010100010101 rs =  2, rt =  8, imm = -15 
@10ba
13 35 // R_inst: sub 0011010100010011 rs = 10, rt =  8, imm =   9 
@10bc
ef 46 // I_inst: load 0100011011101111 rs =  3, rt =  7, imm =  15 
@10be
8f 47 // I_inst: load 0100011110001111 rs =  3, rt = 12, imm =  15 
@10c0
e2 98 // I_inst: beq 1001100011100010 rs = 12, rt =  7, imm =   2 
@10c2
15 0f // R_inst: sub 0000111100010101 rs =  7, rt =  8, imm = -13 
@10c4
fd 1c // R_inst: sub 0001110011111101 rs = 14, rt =  7, imm =  -3 
@10c6
97 5e // I_inst: load 0101111010010111 rs = 15, rt =  4, imm =  -9 
@10c8
d2 25 // R_inst: set 0010010111010010 rs =  2, rt = 14, imm =   3 
@10ca
cd 77 // I_inst: store 0111011111001101 rs = 11, rt = 14, imm =  13 
@10cc
de b0 // J_inst: jump 1011000011011110 address = 010de 
@10ce
e4 b0 // J_inst: jump 1011000011100100 address = 010e4 
@10d0
9b 1d // R_inst: sub 0001110110011011 rs = 14, rt = 12, imm =   9 
@10d2
3b 0c // R_inst: sub 0000110000111011 rs =  6, rt =  1, imm =  -9 
@10d4
88 0e // R_inst: add 0000111010001000 rs =  7, rt =  4, imm = -16 
@10d6
8d 26 // R_inst: sub 0010011010001101 rs =  3, rt =  4, imm =  15 
@10d8
ed 0e // R_inst: sub 0000111011101101 rs =  7, rt =  7, imm = -12 
@10da
4d 0d // R_inst: sub 0000110101001101 rs =  6, rt = 10, imm =   3 
@10dc
8d 39 // R_inst: sub 0011100110001101 rs = 12, rt = 12, imm =   4 
@10de
80 57 // I_inst: load 0101011110000000 rs = 11, rt = 12, imm =   0 
@10e0
20 57 // I_inst: load 0101011100100000 rs = 11, rt =  9, imm =   0 
@10e2
95 93 // I_inst: beq 1001001110010101 rs =  9, rt = 12, imm = -11 
@10e4
0a b1 // J_inst: jump 1011000100001010 address = 0110a 
@10e6
98 07 // R_inst: add 0000011110011000 rs =  3, rt = 12, imm = -12 
@10e8
b3 2a // R_inst: sub 0010101010110011 rs =  5, rt =  5, imm = -12 
@10ea
a7 24 // R_inst: sub 0010010010100111 rs =  2, rt =  5, imm =   5 
@10ec
6f 10 // R_inst: sub 0001000001101111 rs =  8, rt =  3, imm =  -2 
@10ee
be 02 // R_inst: add 0000001010111110 rs =  1, rt =  5, imm =   8 
@10f0
59 0f // R_inst: sub 0000111101011001 rs =  7, rt = 10, imm =   7 
@10f2
13 0d // R_inst: sub 0000110100010011 rs =  6, rt =  8, imm = -13 
@10f4
3b 12 // R_inst: sub 0001001000111011 rs =  9, rt =  1, imm =  12 
@10f6
89 12 // R_inst: sub 0001001010001001 rs =  9, rt =  4, imm =  11 
@10f8
86 12 // R_inst: add 0001001010000110 rs =  9, rt =  4, imm =  -3 
@10fa
db 32 // R_inst: sub 0011001011011011 rs =  9, rt =  6, imm =   3 
@10fc
68 0a // R_inst: add 0000101001101000 rs =  5, rt =  3, imm =   6 
@10fe
78 1e // R_inst: add 0001111001111000 rs = 15, rt =  3, imm =  14 
@1100
7f 39 // R_inst: sub 0011100101111111 rs = 12, rt = 11, imm = -14 
@1102
73 19 // R_inst: sub 0001100101110011 rs = 12, rt = 11, imm =   0 
@1104
35 38 // R_inst: sub 0011100000110101 rs = 12, rt =  1, imm = -15 
@1106
c4 08 // R_inst: add 0000100011000100 rs =  4, rt =  6, imm =   8 
@1108
3d 2e // R_inst: sub 0010111000111101 rs =  7, rt =  1, imm =   3 
@110a
bb 3f // R_inst: sub 0011111110111011 rs = 15, rt = 13, imm = -15 
@110c
92 19 // R_inst: add 0001100110010010 rs = 12, rt = 12, imm =   1 
@110e
2e 0b // R_inst: add 0000101100101110 rs =  5, rt =  9, imm =  -9 
@1110
f3 09 // R_inst: sub 0000100111110011 rs =  4, rt = 15, imm = -14 
@1112
a2 13 // R_inst: add 0001001110100010 rs =  9, rt = 13, imm =   8 
@1114
e6 9e // I_inst: beq 1001111011100110 rs = 15, rt =  7, imm =   6 
@1116
25 59 // I_inst: load 0101100100100101 rs = 12, rt =  9, imm =   5 
@1118
a5 58 // I_inst: load 0101100010100101 rs = 12, rt =  5, imm =   5 
@111a
2c 8b // I_inst: beq 1000101100101100 rs =  5, rt =  9, imm =  12 
@111c
cd 03 // R_inst: sub 0000001111001101 rs =  1, rt = 14, imm = -16 
@111e
02 0f // R_inst: add 0000111100000010 rs =  7, rt =  8, imm =   8 
@1120
4d 12 // R_inst: sub 0001001001001101 rs =  9, rt =  2, imm = -11 
@1122
5d 12 // R_inst: sub 0001001001011101 rs =  9, rt =  2, imm =  11 
@1124
fc 1b // R_inst: add 0001101111111100 rs = 13, rt = 15, imm =  12 
@1126
42 00 // R_inst: add 0000000001000010 rs =  0, rt =  2, imm = -10 
@1128
25 1b // R_inst: sub 0001101100100101 rs = 13, rt =  9, imm =  12 
@112a
a6 0f // R_inst: add 0000111110100110 rs =  7, rt = 13, imm =  10 
@112c
8d 3e // R_inst: sub 0011111010001101 rs = 15, rt =  4, imm =   5 
@112e
71 14 // R_inst: sub 0001010001110001 rs = 10, rt =  3, imm =   7 
@1130
ed 29 // R_inst: sub 0010100111101101 rs =  4, rt = 15, imm = -12 
@1132
ee 04 // R_inst: add 0000010011101110 rs =  2, rt =  7, imm =   6 
@1134
40 b1 // J_inst: jump 1011000101000000 address = 01140 
@1136
46 b1 // J_inst: jump 1011000101000110 address = 01146 
@1138
ed 23 // R_inst: sub 0010001111101101 rs =  1, rt = 15, imm =  -8 
@113a
75 1c // R_inst: sub 0001110001110101 rs = 14, rt =  3, imm =   4 
@113c
71 01 // R_inst: sub 0000000101110001 rs =  0, rt = 11, imm =   2 
@113e
91 0f // R_inst: sub 0000111110010001 rs =  7, rt = 12, imm =  -8 
@1140
46 58 // I_inst: load 0101100001000110 rs = 12, rt =  2, imm =   6 
@1142
66 58 // I_inst: load 0101100001100110 rs = 12, rt =  3, imm =   6 
@1144
58 86 // I_inst: beq 1000011001011000 rs =  3, rt =  2, imm =  -8 
@1146
25 8d // I_inst: beq 1000110100100101 rs =  6, rt =  9, imm =   5 
@1148
23 41 // I_inst: load 0100000100100011 rs =  0, rt =  9, imm =   3 
@114a
93 32 // R_inst: sub 0011001010010011 rs =  9, rt =  4, imm = -13 
@114c
8f 8a // I_inst: beq 1000101010001111 rs =  5, rt =  4, imm =  15 
@114e
d1 35 // R_inst: sub 0011010111010001 rs = 10, rt = 14, imm =  12 
@1150
9b 3c // R_inst: sub 0011110010011011 rs = 14, rt =  4, imm =   5 
@1152
c8 61 // I_inst: store 0110000111001000 rs =  0, rt = 14, imm =   8 
@1154
9b 56 // I_inst: load 0101011010011011 rs = 11, rt =  4, imm =  -5 
@1156
bb 56 // I_inst: load 0101011010111011 rs = 11, rt =  5, imm =  -5 
@1158
4c b1 // J_inst: jump 1011000101001100 address = 0114c 
@115a
74 09 // R_inst: add 0000100101110100 rs =  4, rt = 11, imm =  -6 
@115c
ef 2d // R_inst: sub 0010110111101111 rs =  6, rt = 15, imm =  12 
@115e
53 3b // R_inst: sub 0011101101010011 rs = 13, rt = 10, imm =  14 
@1160
8f 1b // R_inst: sub 0001101110001111 rs = 13, rt = 12, imm =  -7 
@1162
34 1a // R_inst: add 0001101000110100 rs = 13, rt =  1, imm = -13 
@1164
e6 0f // R_inst: add 0000111111100110 rs =  7, rt = 15, imm =   8 
@1166
22 09 // R_inst: add 0000100100100010 rs =  4, rt =  9, imm =   9 
@1168
3c 04 // R_inst: add 0000010000111100 rs =  2, rt =  1, imm =   9 
@116a
e7 06 // R_inst: sub 0000011011100111 rs =  3, rt =  7, imm =  -5 
@116c
2b 74 // I_inst: store 0111010000101011 rs = 10, rt =  1, imm =  11 
@116e
a2 b1 // J_inst: jump 1011000110100010 address = 011a2 
@1170
85 3e // R_inst: sub 0011111010000101 rs = 15, rt =  4, imm = -15 
@1172
39 18 // R_inst: sub 0001100000111001 rs = 12, rt =  1, imm =   3 
@1174
84 14 // R_inst: add 0001010010000100 rs = 10, rt =  4, imm =  -7 
@1176
89 35 // R_inst: sub 0011010110001001 rs = 10, rt = 12, imm =  15 
@1178
48 10 // R_inst: add 0001000001001000 rs =  8, rt =  2, imm =  11 
@117a
aa 08 // R_inst: add 0000100010101010 rs =  4, rt =  5, imm =  -8 
@117c
ee 02 // R_inst: add 0000001011101110 rs =  1, rt =  7, imm =  12 
@117e
5d 3f // R_inst: sub 0011111101011101 rs = 15, rt = 10, imm =  14 
@1180
cb 16 // R_inst: sub 0001011011001011 rs = 11, rt =  6, imm =   7 
@1182
c8 19 // R_inst: add 0001100111001000 rs = 12, rt = 14, imm =   5 
@1184
65 01 // R_inst: sub 0000000101100101 rs =  0, rt = 11, imm =  -7 
@1186
9b 1a // R_inst: sub 0001101010011011 rs = 13, rt =  4, imm =   0 
@1188
22 14 // R_inst: add 0001010000100010 rs = 10, rt =  1, imm = -11 
@118a
73 0d // R_inst: sub 0000110101110011 rs =  6, rt = 11, imm =  -3 
@118c
93 24 // R_inst: sub 0010010010010011 rs =  2, rt =  4, imm = -10 
@118e
ec 1c // R_inst: add 0001110011101100 rs = 14, rt =  7, imm = -15 
@1190
0b 06 // R_inst: sub 0000011000001011 rs =  3, rt =  0, imm =  -1 
@1192
3b 34 // R_inst: sub 0011010000111011 rs = 10, rt =  1, imm = -10 
@1194
ef 1f // R_inst: sub 0001111111101111 rs = 15, rt = 15, imm =  11 
@1196
6b 2c // R_inst: sub 0010110001101011 rs =  6, rt =  3, imm = -14 
@1198
a9 3e // R_inst: sub 0011111010101001 rs = 15, rt =  5, imm =  10 
@119a
cb 22 // R_inst: sub 0010001011001011 rs =  1, rt =  6, imm =   6 
@119c
78 18 // R_inst: add 0001100001111000 rs = 12, rt =  3, imm = -10 
@119e
6d 11 // R_inst: sub 0001000101101101 rs =  8, rt = 11, imm =   7 
@11a0
27 1f // R_inst: sub 0001111100100111 rs = 15, rt =  9, imm =  -7 
@11a2
26 8e // I_inst: beq 1000111000100110 rs =  7, rt =  1, imm =   6 
@11a4
b4 b1 // J_inst: jump 1011000110110100 address = 011b4 
@11a6
ba b1 // J_inst: jump 1011000110111010 address = 011ba 
@11a8
e2 08 // R_inst: add 0000100011100010 rs =  4, rt =  7, imm =   0 
@11aa
03 01 // R_inst: sub 0000000100000011 rs =  0, rt =  8, imm =  -5 
@11ac
fc 16 // R_inst: add 0001011011111100 rs = 11, rt =  7, imm = -12 
@11ae
43 0d // R_inst: sub 0000110101000011 rs =  6, rt = 10, imm =  12 
@11b0
25 14 // R_inst: sub 0001010000100101 rs = 10, rt =  1, imm =   1 
@11b2
3d 01 // R_inst: sub 0000000100111101 rs =  0, rt =  9, imm = -15 
@11b4
c1 5e // I_inst: load 0101111011000001 rs = 15, rt =  6, imm =   1 
@11b6
61 5e // I_inst: load 0101111001100001 rs = 15, rt =  3, imm =   1 
@11b8
d6 86 // I_inst: beq 1000011011010110 rs =  3, rt =  6, imm = -10 
@11ba
3e 4c // I_inst: load 0100110000111110 rs =  6, rt =  1, imm =  -2 
@11bc
ae 92 // I_inst: beq 1001001010101110 rs =  9, rt =  5, imm =  14 
@11be
78 76 // I_inst: store 0111011001111000 rs = 11, rt =  3, imm =  -8 
@11c0
af 29 // R_inst: sub 0010100110101111 rs =  4, rt = 13, imm =   2 
@11c2
d6 5f // I_inst: load 0101111111010110 rs = 15, rt = 14, imm = -10 
@11c4
cd 57 // I_inst: load 0101011111001101 rs = 11, rt = 14, imm =  13 
@11c6
aa 56 // I_inst: load 0101011010101010 rs = 11, rt =  5, imm =  10 
@11c8
2a 57 // I_inst: load 0101011100101010 rs = 11, rt =  9, imm =  10 
@11ca
bc b1 // J_inst: jump 1011000110111100 address = 011bc 
@11cc
9c 08 // R_inst: add 0000100010011100 rs =  4, rt =  4, imm = -15 
@11ce
6d 00 // R_inst: sub 0000000001101101 rs =  0, rt =  3, imm =   3 
@11d0
03 12 // R_inst: sub 0001001000000011 rs =  9, rt =  0, imm =   5 
@11d2
d5 09 // R_inst: sub 0000100111010101 rs =  4, rt = 14, imm = -16 
@11d4
e3 03 // R_inst: sub 0000001111100011 rs =  1, rt = 15, imm =  14 
@11d6
3e 14 // R_inst: add 0001010000111110 rs = 10, rt =  1, imm =  -2 
@11d8
83 2e // R_inst: sub 0010111010000011 rs =  7, rt =  4, imm = -13 
@11da
e9 9c // I_inst: beq 1001110011101001 rs = 14, rt =  7, imm =   9 
@11dc
6d 2c // R_inst: sub 0010110001101101 rs =  6, rt =  3, imm = -16 
@11de
e5 46 // I_inst: load 0100011011100101 rs =  3, rt =  7, imm =   5 
@11e0
c5 47 // I_inst: load 0100011111000101 rs =  3, rt = 14, imm =   5 
@11e2
da b1 // J_inst: jump 1011000111011010 address = 011da 
@11e4
48 08 // R_inst: add 0000100001001000 rs =  4, rt =  2, imm =  -2 
@11e6
3e 03 // R_inst: add 0000001100111110 rs =  1, rt =  9, imm =   0 
@11e8
8d 0f // R_inst: sub 0000111110001101 rs =  7, rt = 12, imm =  -9 
@11ea
77 36 // R_inst: sub 0011011001110111 rs = 11, rt =  3, imm =   2 
@11ec
5e 01 // R_inst: add 0000000101011110 rs =  0, rt = 10, imm =   9 
@11ee
4d 48 // I_inst: load 0100100001001101 rs =  4, rt =  2, imm =  13 
@11f0
cd 48 // I_inst: load 0100100011001101 rs =  4, rt =  6, imm =  13 
@11f2
4f 8c // I_inst: beq 1000110001001111 rs =  6, rt =  2, imm =  15 
@11f4
8d 2c // R_inst: sub 0010110010001101 rs =  6, rt =  4, imm =  10 
@11f6
5b 01 // R_inst: sub 0000000101011011 rs =  0, rt = 10, imm =  -1 
@11f8
97 3a // R_inst: sub 0011101010010111 rs = 13, rt =  4, imm =  -6 
@11fa
cb 38 // R_inst: sub 0011100011001011 rs = 12, rt =  6, imm =   4 
@11fc
84 01 // R_inst: add 0000000110000100 rs =  0, rt = 12, imm =  -4 
@11fe
99 0a // R_inst: sub 0000101010011001 rs =  5, rt =  4, imm =   4 
@1200
a5 3b // R_inst: sub 0011101110100101 rs = 13, rt = 13, imm = -10 
@1202
af 09 // R_inst: sub 0000100110101111 rs =  4, rt = 13, imm =   6 
@1204
23 3d // R_inst: sub 0011110100100011 rs = 14, rt =  9, imm = -15 
@1206
8b 2d // R_inst: sub 0010110110001011 rs =  6, rt = 12, imm =   9 
@1208
62 04 // R_inst: add 0000010001100010 rs =  2, rt =  3, imm = -15 
@120a
79 35 // R_inst: sub 0011010101111001 rs = 10, rt = 11, imm = -12 
@120c
8c 07 // R_inst: add 0000011110001100 rs =  3, rt = 12, imm =  13 
@120e
d5 02 // R_inst: sub 0000001011010101 rs =  1, rt =  6, imm =  -8 
@1210
8a 16 // R_inst: add 0001011010001010 rs = 11, rt =  4, imm = -10 
@1212
90 3e // R_inst: set 0011111010010000 rs = 15, rt =  4, imm =  -7 
@1214
4b 4a // I_inst: load 0100101001001011 rs =  5, rt =  2, imm =  11 
@1216
45 97 // I_inst: beq 1001011101000101 rs = 11, rt = 10, imm =   5 
@1218
94 01 // R_inst: add 0000000110010100 rs =  0, rt = 12, imm = -14 
@121a
8c 9e // I_inst: beq 1001111010001100 rs = 15, rt =  4, imm =  12 
@121c
7b 1c // R_inst: sub 0001110001111011 rs = 14, rt =  3, imm =  -5 
@121e
4f 7c // I_inst: store 0111110001001111 rs = 14, rt =  2, imm =  15 
@1220
80 40 // I_inst: load 0100000010000000 rs =  0, rt =  4, imm =   0 
@1222
e0 41 // I_inst: load 0100000111100000 rs =  0, rt = 15, imm =   0 
@1224
1a b2 // J_inst: jump 1011001000011010 address = 0121a 
@1226
6d 17 // R_inst: sub 0001011101101101 rs = 11, rt = 11, imm =  12 
@1228
ad 0b // R_inst: sub 0000101110101101 rs =  5, rt = 13, imm =  -2 
@122a
33 13 // R_inst: sub 0001001100110011 rs =  9, rt =  9, imm = -12 
@122c
ad 2b // R_inst: sub 0010101110101101 rs =  5, rt = 13, imm =  -3 
@122e
76 1e // R_inst: add 0001111001110110 rs = 15, rt =  3, imm =  -9 
@1230
f1 0c // R_inst: sub 0000110011110001 rs =  6, rt =  7, imm = -11 
@1232
e5 2b // R_inst: sub 0010101111100101 rs =  5, rt = 15, imm =  -1 
@1234
b1 0f // R_inst: sub 0000111110110001 rs =  7, rt = 13, imm =   9 
@1236
3c 34 // R_inst: set 0011010000111100 rs = 10, rt =  1, imm = -14 
@1238
76 b2 // J_inst: jump 1011001001110110 address = 01276 
@123a
1b 18 // R_inst: sub 0001100000011011 rs = 12, rt =  0, imm =  12 
@123c
1f 2d // R_inst: sub 0010110100011111 rs =  6, rt =  8, imm =  -4 
@123e
5d 01 // R_inst: sub 0000000101011101 rs =  0, rt = 10, imm =  -8 
@1240
bf 0d // R_inst: sub 0000110110111111 rs =  6, rt = 13, imm =   3 
@1242
27 22 // R_inst: sub 0010001000100111 rs =  1, rt =  1, imm =   6 
@1244
27 10 // R_inst: sub 0001000000100111 rs =  8, rt =  1, imm = -13 
@1246
c6 0e // R_inst: add 0000111011000110 rs =  7, rt =  6, imm =  -8 
@1248
ed 26 // R_inst: sub 0010011011101101 rs =  3, rt =  7, imm = -15 
@124a
c3 30 // R_inst: sub 0011000011000011 rs =  8, rt =  6, imm =  -7 
@124c
e8 0a // R_inst: add 0000101011101000 rs =  5, rt =  7, imm =  -2 
@124e
35 38 // R_inst: sub 0011100000110101 rs = 12, rt =  1, imm =   6 
@1250
90 19 // R_inst: add 0001100110010000 rs = 12, rt = 12, imm =  12 
@1252
f7 18 // R_inst: sub 0001100011110111 rs = 12, rt =  7, imm = -12 
@1254
09 1e // R_inst: sub 0001111000001001 rs = 15, rt =  0, imm = -15 
@1256
ee 00 // R_inst: add 0000000011101110 rs =  0, rt =  7, imm =   1 
@1258
c5 34 // R_inst: sub 0011010011000101 rs = 10, rt =  6, imm = -11 
@125a
5f 1e // R_inst: sub 0001111001011111 rs = 15, rt =  2, imm =  11 
@125c
49 30 // R_inst: sub 0011000001001001 rs =  8, rt =  2, imm =  -7 
@125e
8c 13 // R_inst: add 0001001110001100 rs =  9, rt = 12, imm = -16 
@1260
1d 3b // R_inst: sub 0011101100011101 rs = 13, rt =  8, imm =  13 
@1262
83 06 // R_inst: sub 0000011010000011 rs =  3, rt =  4, imm =  14 
@1264
09 33 // R_inst: sub 0011001100001001 rs =  9, rt =  8, imm =   3 
@1266
51 02 // R_inst: sub 0000001001010001 rs =  1, rt =  2, imm =   2 
@1268
77 2c // R_inst: sub 0010110001110111 rs =  6, rt =  3, imm =  15 
@126a
ed 27 // R_inst: sub 0010011111101101 rs =  3, rt = 15, imm =  -9 
@126c
63 3b // R_inst: sub 0011101101100011 rs = 13, rt = 11, imm =  10 
@126e
11 10 // R_inst: sub 0001000000010001 rs =  8, rt =  0, imm =  -3 
@1270
fd 1b // R_inst: sub 0001101111111101 rs = 13, rt = 15, imm = -12 
@1272
82 12 // R_inst: add 0001001010000010 rs =  9, rt =  4, imm =  15 
@1274
11 14 // R_inst: sub 0001010000010001 rs = 10, rt =  0, imm =  -4 
@1276
4f 5c // I_inst: load 0101110001001111 rs = 14, rt =  2, imm =  15 
@1278
6f 5c // I_inst: load 0101110001101111 rs = 14, rt =  3, imm =  15 
@127a
46 86 // I_inst: beq 1000011001000110 rs =  3, rt =  2, imm =   6 
@127c
b9 24 // R_inst: sub 0010010010111001 rs =  2, rt =  5, imm = -13 
@127e
0c 1a // R_inst: add 0001101000001100 rs = 13, rt =  0, imm =  11 
@1280
d3 03 // R_inst: sub 0000001111010011 rs =  1, rt = 14, imm =  -1 
@1282
3b 35 // R_inst: sub 0011010100111011 rs = 10, rt =  9, imm =   0 
@1284
7f 3a // R_inst: sub 0011101001111111 rs = 13, rt =  3, imm = -12 
@1286
87 07 // R_inst: sub 0000011110000111 rs =  3, rt = 12, imm =  15 
@1288
52 2d // R_inst: set 0010110101010010 rs =  6, rt = 10, imm = -16 
@128a
1a 30 // R_inst: set 0011000000011010 rs =  8, rt =  0, imm =   1 
@128c
ba b2 // J_inst: jump 1011001010111010 address = 012ba 
@128e
79 38 // R_inst: sub 0011100001111001 rs = 12, rt =  3, imm =  -3 
@1290
d1 3e // R_inst: sub 0011111011010001 rs = 15, rt =  6, imm =  -1 
@1292
39 02 // R_inst: sub 0000001000111001 rs =  1, rt =  1, imm =  13 
@1294
33 01 // R_inst: sub 0000000100110011 rs =  0, rt =  9, imm = -11 
@1296
3f 32 // R_inst: sub 0011001000111111 rs =  9, rt =  1, imm = -11 
@1298
3a 1b // R_inst: add 0001101100111010 rs = 13, rt =  9, imm =   6 
@129a
ac 0a // R_inst: add 0000101010101100 rs =  5, rt =  5, imm = -13 
@129c
04 1f // R_inst: add 0001111100000100 rs = 15, rt =  8, imm = -14 
@129e
99 0b // R_inst: sub 0000101110011001 rs =  5, rt = 12, imm =   6 
@12a0
f9 23 // R_inst: sub 0010001111111001 rs =  1, rt = 15, imm =  11 
@12a2
07 1b // R_inst: sub 0001101100000111 rs = 13, rt =  8, imm =   7 
@12a4
77 00 // R_inst: sub 0000000001110111 rs =  0, rt =  3, imm = -15 
@12a6
b1 30 // R_inst: sub 0011000010110001 rs =  8, rt =  5, imm = -14 
@12a8
59 14 // R_inst: sub 0001010001011001 rs = 10, rt =  2, imm =  -7 
@12aa
92 11 // R_inst: add 0001000110010010 rs =  8, rt = 12, imm = -14 
@12ac
0e 1d // R_inst: add 0001110100001110 rs = 14, rt =  8, imm =  -3 
@12ae
9e 11 // R_inst: add 0001000110011110 rs =  8, rt = 12, imm =  11 
@12b0
bb 3a // R_inst: sub 0011101010111011 rs = 13, rt =  5, imm =  -5 
@12b2
fa 15 // R_inst: add 0001010111111010 rs = 10, rt = 15, imm =  -1 
@12b4
8f 3f // R_inst: sub 0011111110001111 rs = 15, rt = 12, imm =   1 
@12b6
06 0e // R_inst: add 0000111000000110 rs =  7, rt =  0, imm =  10 
@12b8
a8 0c // R_inst: add 0000110010101000 rs =  6, rt =  5, imm =  -5 
@12ba
0e 77 // I_inst: store 0111011100001110 rs = 11, rt =  8, imm =  14 
@12bc
88 5b // I_inst: load 0101101110001000 rs = 13, rt = 12, imm =   8 
@12be
08 5b // I_inst: load 0101101100001000 rs = 13, rt =  8, imm =   8 
@12c0
86 91 // I_inst: beq 1001000110000110 rs =  8, rt = 12, imm =   6 
@12c2
04 0d // R_inst: add 0000110100000100 rs =  6, rt =  8, imm = -15 
@12c4
65 36 // R_inst: sub 0011011001100101 rs = 11, rt =  3, imm =   8 
@12c6
22 17 // R_inst: add 0001011100100010 rs = 11, rt =  9, imm =  11 
@12c8
f9 07 // R_inst: sub 0000011111111001 rs =  3, rt = 15, imm =   6 
@12ca
f3 09 // R_inst: sub 0000100111110011 rs =  4, rt = 15, imm = -13 
@12cc
c3 33 // R_inst: sub 0011001111000011 rs =  9, rt = 14, imm =  13 
@12ce
57 31 // R_inst: sub 0011000101010111 rs =  8, rt = 10, imm = -13 
@12d0
00 b3 // J_inst: jump 1011001100000000 address = 01300 
@12d2
8e 0d // R_inst: add 0000110110001110 rs =  6, rt = 12, imm =  -1 
@12d4
dd 1b // R_inst: sub 0001101111011101 rs = 13, rt = 14, imm =   5 
@12d6
55 37 // R_inst: sub 0011011101010101 rs = 11, rt = 10, imm = -16 
@12d8
82 17 // R_inst: add 0001011110000010 rs = 11, rt = 12, imm =   2 
@12da
d5 2d // R_inst: sub 0010110111010101 rs =  6, rt = 14, imm = -15 
@12dc
b7 1a // R_inst: sub 0001101010110111 rs = 13, rt =  5, imm = -13 
@12de
b9 2e // R_inst: sub 0010111010111001 rs =  7, rt =  5, imm =   1 
@12e0
c3 11 // R_inst: sub 0001000111000011 rs =  8, rt = 14, imm =   1 
@12e2
0a 07 // R_inst: add 0000011100001010 rs =  3, rt =  8, imm =  -7 
@12e4
ef 1b // R_inst: sub 0001101111101111 rs = 13, rt = 15, imm =  -2 
@12e6
75 2b // R_inst: sub 0010101101110101 rs =  5, rt = 11, imm =  -3 
@12e8
63 3c // R_inst: sub 0011110001100011 rs = 14, rt =  3, imm =   6 
@12ea
06 1d // R_inst: add 0001110100000110 rs = 14, rt =  8, imm =   4 
@12ec
30 05 // R_inst: add 0000010100110000 rs =  2, rt =  9, imm =  -7 
@12ee
65 01 // R_inst: sub 0000000101100101 rs =  0, rt = 11, imm = -13 
@12f0
89 11 // R_inst: sub 0001000110001001 rs =  8, rt = 12, imm =   7 
@12f2
6e 03 // R_inst: add 0000001101101110 rs =  1, rt = 11, imm = -16 
@12f4
96 0f // R_inst: add 0000111110010110 rs =  7, rt = 12, imm =   1 
@12f6
f9 04 // R_inst: sub 0000010011111001 rs =  2, rt =  7, imm =   3 
@12f8
f9 3c // R_inst: sub 0011110011111001 rs = 14, rt =  7, imm =  -5 
@12fa
02 05 // R_inst: add 0000010100000010 rs =  2, rt =  8, imm =   5 
@12fc
ee 14 // R_inst: add 0001010011101110 rs = 10, rt =  7, imm = -15 
@12fe
dd 17 // R_inst: sub 0001011111011101 rs = 11, rt = 14, imm =  -6 
@1300
25 93 // I_inst: beq 1001001100100101 rs =  9, rt =  9, imm =   5 
@1302
5f 1b // R_inst: sub 0001101101011111 rs = 13, rt = 10, imm =   4 
@1304
65 01 // R_inst: sub 0000000101100101 rs =  0, rt = 11, imm =   8 
@1306
c8 15 // R_inst: add 0001010111001000 rs = 10, rt = 14, imm = -11 
@1308
97 32 // R_inst: sub 0011001010010111 rs =  9, rt =  4, imm =   6 
@130a
f7 0f // R_inst: sub 0000111111110111 rs =  7, rt = 15, imm =   3 
@130c
8c 72 // I_inst: store 0111001010001100 rs =  9, rt =  4, imm =  12 
@130e
1a b3 // J_inst: jump 1011001100011010 address = 0131a 
@1310
20 b3 // J_inst: jump 1011001100100000 address = 01320 
@1312
29 0e // R_inst: sub 0000111000101001 rs =  7, rt =  1, imm =  -1 
@1314
e9 11 // R_inst: sub 0001000111101001 rs =  8, rt = 15, imm =  10 
@1316
e9 09 // R_inst: sub 0000100111101001 rs =  4, rt = 15, imm =  -3 
@1318
08 18 // R_inst: add 0001100000001000 rs = 12, rt =  0, imm =   1 
@131a
8b 5a // I_inst: load 0101101010001011 rs = 13, rt =  4, imm =  11 
@131c
8b 5a // I_inst: load 0101101010001011 rs = 13, rt =  4, imm =  11 
@131e
98 88 // I_inst: beq 1000100010011000 rs =  4, rt =  4, imm =  -8 
@1320
39 27 // R_inst: sub 0010011100111001 rs =  3, rt =  9, imm =  -2 
@1322
32 b3 // J_inst: jump 1011001100110010 address = 01332 
@1324
38 b3 // J_inst: jump 1011001100111000 address = 01338 
@1326
b9 1a // R_inst: sub 0001101010111001 rs = 13, rt =  5, imm =   9 
@1328
b9 0f // R_inst: sub 0000111110111001 rs =  7, rt = 13, imm =  -7 
@132a
af 1b // R_inst: sub 0001101110101111 rs = 13, rt = 13, imm =   2 
@132c
a6 09 // R_inst: add 0000100110100110 rs =  4, rt = 13, imm =  10 
@132e
47 01 // R_inst: sub 0000000101000111 rs =  0, rt = 10, imm =  14 
@1330
11 13 // R_inst: sub 0001001100010001 rs =  9, rt =  8, imm =   5 
@1332
e0 5b // I_inst: load 0101101111100000 rs = 13, rt = 15, imm =   0 
@1334
e0 5b // I_inst: load 0101101111100000 rs = 13, rt = 15, imm =   0 
@1336
f6 9f // I_inst: beq 1001111111110110 rs = 15, rt = 15, imm = -10 
@1338
2d 90 // I_inst: beq 1001000000101101 rs =  8, rt =  1, imm =  13 
@133a
99 04 // R_inst: sub 0000010010011001 rs =  2, rt =  4, imm =  -5 
@133c
ff 52 // I_inst: load 0101001011111111 rs =  9, rt =  7, imm =  -1 
@133e
c6 02 // R_inst: add 0000001011000110 rs =  1, rt =  6, imm = -14 
@1340
08 4b // I_inst: load 0100101100001000 rs =  5, rt =  8, imm =   8 
@1342
2f 40 // I_inst: load 0100000000101111 rs =  0, rt =  1, imm =  15 
@1344
0f 41 // I_inst: load 0100000100001111 rs =  0, rt =  8, imm =  15 
@1346
38 b3 // J_inst: jump 1011001100111000 address = 01338 
@1348
24 15 // R_inst: add 0001010100100100 rs = 10, rt =  9, imm =   9 
@134a
9d 2a // R_inst: sub 0010101010011101 rs =  5, rt =  4, imm =  -6 
@134c
3e 17 // R_inst: add 0001011100111110 rs = 11, rt =  9, imm =  -2 
@134e
85 32 // R_inst: sub 0011001010000101 rs =  9, rt =  4, imm =  13 
@1350
fb 3c // R_inst: sub 0011110011111011 rs = 14, rt =  7, imm =  -4 
@1352
9b 29 // R_inst: sub 0010100110011011 rs =  4, rt = 12, imm =  11 
@1354
a1 5c // I_inst: load 0101110010100001 rs = 14, rt =  5, imm =   1 
@1356
81 5d // I_inst: load 0101110110000001 rs = 14, rt = 12, imm =   1 
@1358
a1 98 // I_inst: beq 1001100010100001 rs = 12, rt =  5, imm =   1 
@135a
9e 07 // R_inst: add 0000011110011110 rs =  3, rt = 12, imm =  15 
@135c
ce 44 // I_inst: load 0100010011001110 rs =  2, rt =  6, imm =  14 
@135e
ae 44 // I_inst: load 0100010010101110 rs =  2, rt =  5, imm =  14 
@1360
cd 8a // I_inst: beq 1000101011001101 rs =  5, rt =  6, imm =  13 
@1362
5f 3c // R_inst: sub 0011110001011111 rs = 14, rt =  2, imm =   8 
@1364
42 1f // R_inst: add 0001111101000010 rs = 15, rt = 10, imm =   6 
@1366
dd 1d // R_inst: sub 0001110111011101 rs = 14, rt = 14, imm =   9 
@1368
63 2b // R_inst: sub 0010101101100011 rs =  5, rt = 11, imm = -16 
@136a
83 0b // R_inst: sub 0000101110000011 rs =  5, rt = 12, imm =   6 
@136c
b6 1c // R_inst: add 0001110010110110 rs = 14, rt =  5, imm =   9 
@136e
1c 1a // R_inst: add 0001101000011100 rs = 13, rt =  0, imm =  13 
@1370
7e 05 // R_inst: add 0000010101111110 rs =  2, rt = 11, imm = -15 
@1372
9b 26 // R_inst: sub 0010011010011011 rs =  3, rt =  4, imm =   7 
@1374
7d 05 // R_inst: sub 0000010101111101 rs =  2, rt = 11, imm =  -4 
@1376
c8 08 // R_inst: add 0000100011001000 rs =  4, rt =  6, imm = -10 
@1378
66 12 // R_inst: add 0001001001100110 rs =  9, rt =  3, imm =  -3 
@137a
29 3e // R_inst: sub 0011111000101001 rs = 15, rt =  1, imm =  12 
@137c
8b 9f // I_inst: beq 1001111110001011 rs = 15, rt = 12, imm =  11 
@137e
42 24 // R_inst: set 0010010001000010 rs =  2, rt =  2, imm =  11 
@1380
22 5d // I_inst: load 0101110100100010 rs = 14, rt =  9, imm =   2 
@1382
92 4b // I_inst: load 0100101110010010 rs =  5, rt = 12, imm = -14 
@1384
f2 4b // I_inst: load 0100101111110010 rs =  5, rt = 15, imm = -14 
@1386
7c b3 // J_inst: jump 1011001101111100 address = 0137c 
@1388
93 13 // R_inst: sub 0001001110010011 rs =  9, rt = 12, imm =   3 
@138a
cd 37 // R_inst: sub 0011011111001101 rs = 11, rt = 14, imm =  -1 
@138c
c4 00 // R_inst: add 0000000011000100 rs =  0, rt =  6, imm =  -5 
@138e
7f 19 // R_inst: sub 0001100101111111 rs = 12, rt = 11, imm =  -4 
@1390
30 1e // R_inst: add 0001111000110000 rs = 15, rt =  1, imm =  15 
@1392
69 1c // R_inst: sub 0001110001101001 rs = 14, rt =  3, imm = -12 
@1394
9e b3 // J_inst: jump 1011001110011110 address = 0139e 
@1396
73 33 // R_inst: sub 0011001101110011 rs =  9, rt = 11, imm =   6 
@1398
5a 1b // R_inst: add 0001101101011010 rs = 13, rt = 10, imm =  11 
@139a
d5 26 // R_inst: sub 0010011011010101 rs =  3, rt =  6, imm =  -7 
@139c
f6 1f // R_inst: add 0001111111110110 rs = 15, rt = 15, imm =   4 
@139e
18 07 // R_inst: add 0000011100011000 rs =  3, rt =  8, imm = -11 
@13a0
6f 34 // R_inst: sub 0011010001101111 rs = 10, rt =  3, imm =  11 
@13a2
8b 87 // I_inst: beq 1000011110001011 rs =  3, rt = 12, imm =  11 
@13a4
06 6b // I_inst: store 0110101100000110 rs =  5, rt =  8, imm =   6 
@13a6
86 5c // I_inst: load 0101110010000110 rs = 14, rt =  4, imm =   6 
@13a8
88 4b // I_inst: load 0100101110001000 rs =  5, rt = 12, imm =   8 
@13aa
68 4a // I_inst: load 0100101001101000 rs =  5, rt =  3, imm =   8 
@13ac
a2 b3 // J_inst: jump 1011001110100010 address = 013a2 
@13ae
43 31 // R_inst: sub 0011000101000011 rs =  8, rt = 10, imm =   2 
@13b0
05 33 // R_inst: sub 0011001100000101 rs =  9, rt =  8, imm = -11 
@13b2
a6 15 // R_inst: add 0001010110100110 rs = 10, rt = 13, imm =  12 
@13b4
f9 34 // R_inst: sub 0011010011111001 rs = 10, rt =  7, imm =   8 
@13b6
c8 04 // R_inst: add 0000010011001000 rs =  2, rt =  6, imm =  10 
@13b8
6e 06 // R_inst: add 0000011001101110 rs =  3, rt =  3, imm =  13 
@13ba
a2 9d // I_inst: beq 1001110110100010 rs = 14, rt = 13, imm =   2 
@13bc
27 37 // R_inst: sub 0011011100100111 rs = 11, rt =  9, imm = -11 
@13be
5b 2c // R_inst: sub 0010110001011011 rs =  6, rt =  2, imm = -16 
@13c0
ab 74 // I_inst: store 0111010010101011 rs = 10, rt =  5, imm =  11 
@13c2
b0 07 // R_inst: add 0000011110110000 rs =  3, rt = 13, imm = -10 
@13c4
d2 b3 // J_inst: jump 1011001111010010 address = 013d2 
@13c6
d8 b3 // J_inst: jump 1011001111011000 address = 013d8 
@13c8
7f 3c // R_inst: sub 0011110001111111 rs = 14, rt =  3, imm =   2 
@13ca
3f 11 // R_inst: sub 0001000100111111 rs =  8, rt =  9, imm =  -6 
@13cc
3f 39 // R_inst: sub 0011100100111111 rs = 12, rt =  9, imm =  -1 
@13ce
71 16 // R_inst: sub 0001011001110001 rs = 11, rt =  3, imm =   8 
@13d0
1b 03 // R_inst: sub 0000001100011011 rs =  1, rt =  8, imm =   4 
@13d2
02 41 // I_inst: load 0100000100000010 rs =  0, rt =  8, imm =   2 
@13d4
62 40 // I_inst: load 0100000001100010 rs =  0, rt =  3, imm =   2 
@13d6
17 87 // I_inst: beq 1000011100010111 rs =  3, rt =  8, imm =  -9 
@13d8
00 b4 // J_inst: jump 1011010000000000 address = 01400 
@13da
29 0a // R_inst: sub 0000101000101001 rs =  5, rt =  1, imm =   4 
@13dc
ab 2d // R_inst: sub 0010110110101011 rs =  6, rt = 13, imm =  -8 
@13de
de 02 // R_inst: add 0000001011011110 rs =  1, rt =  6, imm =  -6 
@13e0
3d 34 // R_inst: sub 0011010000111101 rs = 10, rt =  1, imm =  -1 
@13e2
8d 0a // R_inst: sub 0000101010001101 rs =  5, rt =  4, imm =  -4 
@13e4
4b 26 // R_inst: sub 0010011001001011 rs =  3, rt =  2, imm =   0 
@13e6
cd 16 // R_inst: sub 0001011011001101 rs = 11, rt =  6, imm =  14 
@13e8
a3 25 // R_inst: sub 0010010110100011 rs =  2, rt = 13, imm =   6 
@13ea
71 0a // R_inst: sub 0000101001110001 rs =  5, rt =  3, imm =  -7 
@13ec
1e 0e // R_inst: add 0000111000011110 rs =  7, rt =  0, imm =  13 
@13ee
72 0e // R_inst: add 0000111001110010 rs =  7, rt =  3, imm =   8 
@13f0
54 17 // R_inst: add 0001011101010100 rs = 11, rt = 10, imm = -11 
@13f2
f3 2b // R_inst: sub 0010101111110011 rs =  5, rt = 15, imm = -15 
@13f4
b2 13 // R_inst: add 0001001110110010 rs =  9, rt = 13, imm = -13 
@13f6
ff 2e // R_inst: sub 0010111011111111 rs =  7, rt =  7, imm =  -7 
@13f8
69 36 // R_inst: sub 0011011001101001 rs = 11, rt =  3, imm =  14 
@13fa
79 3c // R_inst: sub 0011110001111001 rs = 14, rt =  3, imm =  14 
@13fc
ab 29 // R_inst: sub 0010100110101011 rs =  4, rt = 13, imm =   1 
@13fe
fc 10 // R_inst: add 0001000011111100 rs =  8, rt =  7, imm =   2 
@1400
cd 5a // I_inst: load 0101101011001101 rs = 13, rt =  6, imm =  13 
@1402
ed 5a // I_inst: load 0101101011101101 rs = 13, rt =  7, imm =  13 
@1404
c3 8e // I_inst: beq 1000111011000011 rs =  7, rt =  6, imm =   3 
@1406
b9 05 // R_inst: sub 0000010110111001 rs =  2, rt = 13, imm = -12 
@1408
71 08 // R_inst: sub 0000100001110001 rs =  4, rt =  3, imm = -12 
@140a
4f 2c // R_inst: sub 0010110001001111 rs =  6, rt =  2, imm =  15 
@140c
aa 55 // I_inst: load 0101010110101010 rs = 10, rt = 13, imm =  10 
@140e
0a 55 // I_inst: load 0101010100001010 rs = 10, rt =  8, imm =  10 
@1410
a4 91 // I_inst: beq 1001000110100100 rs =  8, rt = 13, imm =   4 
@1412
69 34 // R_inst: sub 0011010001101001 rs = 10, rt =  3, imm =  -4 
@1414
7f 12 // R_inst: sub 0001001001111111 rs =  9, rt =  3, imm =  -6 
@1416
8d 2a // R_inst: sub 0010101010001101 rs =  5, rt =  4, imm =  -3 
@1418
79 00 // R_inst: sub 0000000001111001 rs =  0, rt =  3, imm =  14 
@141a
32 b4 // J_inst: jump 1011010000110010 address = 01432 
@141c
e7 1f // R_inst: sub 0001111111100111 rs = 15, rt = 15, imm =  -8 
@141e
0b 1e // R_inst: sub 0001111000001011 rs = 15, rt =  0, imm =  12 
@1420
f9 31 // R_inst: sub 0011000111111001 rs =  8, rt = 15, imm =  14 
@1422
3a 16 // R_inst: add 0001011000111010 rs = 11, rt =  1, imm =  13 
@1424
03 1a // R_inst: sub 0001101000000011 rs = 13, rt =  0, imm =  -7 
@1426
76 17 // R_inst: add 0001011101110110 rs = 11, rt = 11, imm =   5 
@1428
62 10 // R_inst: add 0001000001100010 rs =  8, rt =  3, imm =  14 
@142a
a5 00 // R_inst: sub 0000000010100101 rs =  0, rt =  5, imm =   2 
@142c
e7 0e // R_inst: sub 0000111011100111 rs =  7, rt =  7, imm =   5 
@142e
69 03 // R_inst: sub 0000001101101001 rs =  1, rt = 11, imm = -14 
@1430
59 0e // R_inst: sub 0000111001011001 rs =  7, rt =  2, imm = -11 
@1432
cb 2e // R_inst: sub 0010111011001011 rs =  7, rt =  6, imm =   8 
@1434
3e b4 // J_inst: jump 1011010000111110 address = 0143e 
@1436
44 b4 // J_inst: jump 1011010001000100 address = 01444 
@1438
fb 3e // R_inst: sub 0011111011111011 rs = 15, rt =  7, imm =   1 
@143a
d9 06 // R_inst: sub 0000011011011001 rs =  3, rt =  6, imm =   4 
@143c
0b 2d // R_inst: sub 0010110100001011 rs =  6, rt =  8, imm =   6 
@143e
e4 5d // I_inst: load 0101110111100100 rs = 14, rt = 15, imm =   4 
@1440
44 5c // I_inst: load 0101110001000100 rs = 14, rt =  2, imm =   4 
@1442
f9 85 // I_inst: beq 1000010111111001 rs =  2, rt = 15, imm =  -7 
@1444
cb 48 // I_inst: load 0100100011001011 rs =  4, rt =  6, imm =  11 
@1446
60 b4 // J_inst: jump 1011010001100000 address = 01460 
@1448
8d 2c // R_inst: sub 0010110010001101 rs =  6, rt =  4, imm =  -6 
@144a
8f 3e // R_inst: sub 0011111010001111 rs = 15, rt =  4, imm = -12 
@144c
8a 05 // R_inst: add 0000010110001010 rs =  2, rt = 12, imm = -15 
@144e
ad 1c // R_inst: sub 0001110010101101 rs = 14, rt =  5, imm =   1 
@1450
75 1d // R_inst: sub 0001110101110101 rs = 14, rt = 11, imm =  11 
@1452
d7 30 // R_inst: sub 0011000011010111 rs =  8, rt =  6, imm =   5 
@1454
f7 25 // R_inst: sub 0010010111110111 rs =  2, rt = 15, imm =  -3 
@1456
5c 14 // R_inst: add 0001010001011100 rs = 10, rt =  2, imm =   5 
@1458
a5 04 // R_inst: sub 0000010010100101 rs =  2, rt =  5, imm = -16 
@145a
bf 00 // R_inst: sub 0000000010111111 rs =  0, rt =  5, imm =  -7 
@145c
77 2f // R_inst: sub 0010111101110111 rs =  7, rt = 11, imm =  -8 
@145e
f5 0c // R_inst: sub 0000110011110101 rs =  6, rt =  7, imm = -14 
@1460
01 5d // I_inst: load 0101110100000001 rs = 14, rt =  8, imm =   1 
@1462
c1 5c // I_inst: load 0101110011000001 rs = 14, rt =  6, imm =   1 
@1464
0d 8d // I_inst: beq 1000110100001101 rs =  6, rt =  8, imm =  13 
@1466
79 33 // R_inst: sub 0011001101111001 rs =  9, rt = 11, imm =  -7 
@1468
4b 15 // R_inst: sub 0001010101001011 rs = 10, rt = 10, imm =   7 
@146a
9b 05 // R_inst: sub 0000010110011011 rs =  2, rt = 12, imm = -14 
@146c
12 0f // R_inst: add 0000111100010010 rs =  7, rt =  8, imm =   4 
@146e
b7 26 // R_inst: sub 0010011010110111 rs =  3, rt =  5, imm = -16 
@1470
63 3c // R_inst: sub 0011110001100011 rs = 14, rt =  3, imm =   7 
@1472
7e 05 // R_inst: add 0000010101111110 rs =  2, rt = 11, imm =  12 
@1474
bb 11 // R_inst: sub 0001000110111011 rs =  8, rt = 13, imm =   6 
@1476
db 39 // R_inst: sub 0011100111011011 rs = 12, rt = 14, imm = -15 
@1478
da 12 // R_inst: add 0001001011011010 rs =  9, rt =  6, imm =  15 
@147a
22 06 // R_inst: add 0000011000100010 rs =  3, rt =  1, imm = -13 
@147c
d9 05 // R_inst: sub 0000010111011001 rs =  2, rt = 14, imm =  -4 
@147e
ef 0b // R_inst: sub 0000101111101111 rs =  5, rt = 15, imm = -16 
@1480
b6 b4 // J_inst: jump 1011010010110110 address = 014b6 
@1482
49 22 // R_inst: sub 0010001001001001 rs =  1, rt =  2, imm =  -3 
@1484
59 07 // R_inst: sub 0000011101011001 rs =  3, rt = 10, imm =  -9 
@1486
8d 03 // R_inst: sub 0000001110001101 rs =  1, rt = 12, imm = -14 
@1488
d9 32 // R_inst: sub 0011001011011001 rs =  9, rt =  6, imm =  11 
@148a
45 04 // R_inst: sub 0000010001000101 rs =  2, rt =  2, imm =   6 
@148c
cc 08 // R_inst: add 0000100011001100 rs =  4, rt =  6, imm =   8 
@148e
91 25 // R_inst: sub 0010010110010001 rs =  2, rt = 12, imm =  10 
@1490
ea 05 // R_inst: add 0000010111101010 rs =  2, rt = 15, imm =   6 
@1492
85 30 // R_inst: sub 0011000010000101 rs =  8, rt =  4, imm =  -3 
@1494
d5 38 // R_inst: sub 0011100011010101 rs = 12, rt =  6, imm =   7 
@1496
ab 3a // R_inst: sub 0011101010101011 rs = 13, rt =  5, imm =  10 
@1498
12 1e // R_inst: add 0001111000010010 rs = 15, rt =  0, imm =  -3 
@149a
4a 08 // R_inst: add 0000100001001010 rs =  4, rt =  2, imm =  -5 
@149c
39 3c // R_inst: sub 0011110000111001 rs = 14, rt =  1, imm =  -5 
@149e
6d 16 // R_inst: sub 0001011001101101 rs = 11, rt =  3, imm =   2 
@14a0
99 0b // R_inst: sub 0000101110011001 rs =  5, rt = 12, imm =  -4 
@14a2
c6 1d // R_inst: add 0001110111000110 rs = 14, rt = 14, imm = -11 
@14a4
7b 15 // R_inst: sub 0001010101111011 rs = 10, rt = 11, imm =   5 
@14a6
b8 16 // R_inst: add 0001011010111000 rs = 11, rt =  5, imm = -13 
@14a8
2e 0c // R_inst: add 0000110000101110 rs =  6, rt =  1, imm =  -9 
@14aa
bb 2d // R_inst: sub 0010110110111011 rs =  6, rt = 13, imm =   8 
@14ac
e2 00 // R_inst: add 0000000011100010 rs =  0, rt =  7, imm =   3 
@14ae
c5 2b // R_inst: sub 0010101111000101 rs =  5, rt = 14, imm =   7 
@14b0
0f 39 // R_inst: sub 0011100100001111 rs = 12, rt =  8, imm =  -4 
@14b2
7f 32 // R_inst: sub 0011001001111111 rs =  9, rt =  3, imm =   2 
@14b4
eb 1c // R_inst: sub 0001110011101011 rs = 14, rt =  7, imm =  -5 
@14b6
51 2f // R_inst: sub 0010111101010001 rs =  7, rt = 10, imm =  15 
@14b8
6a 2f // R_inst: set 0010111101101010 rs =  7, rt = 11, imm =  -8 
@14ba
44 21 // R_inst: set 0010000101000100 rs =  0, rt = 10, imm =   2 
@14bc
58 01 // R_inst: add 0000000101011000 rs =  0, rt = 10, imm = -11 
@14be
42 43 // I_inst: load 0100001101000010 rs =  1, rt = 10, imm =   2 
@14c0
22 43 // I_inst: load 0100001100100010 rs =  1, rt =  9, imm =   2 
@14c2
4a 93 // I_inst: beq 1001001101001010 rs =  9, rt = 10, imm =  10 
@14c4
d0 03 // R_inst: add 0000001111010000 rs =  1, rt = 14, imm =  -1 
@14c6
c9 08 // R_inst: sub 0000100011001001 rs =  4, rt =  6, imm = -15 
@14c8
47 35 // R_inst: sub 0011010101000111 rs = 10, rt = 10, imm =  12 
@14ca
d3 03 // R_inst: sub 0000001111010011 rs =  1, rt = 14, imm =  -3 
@14cc
14 18 // R_inst: add 0001100000010100 rs = 12, rt =  0, imm =  13 
@14ce
3f 1f // R_inst: sub 0001111100111111 rs = 15, rt =  9, imm =   6 
@14d0
b1 39 // R_inst: sub 0011100110110001 rs = 12, rt = 13, imm =   9 
@14d2
bb 0f // R_inst: sub 0000111110111011 rs =  7, rt = 13, imm =  10 
@14d4
ad 0e // R_inst: sub 0000111010101101 rs =  7, rt =  5, imm =  -3 
@14d6
f9 0c // R_inst: sub 0000110011111001 rs =  6, rt =  7, imm =  -5 
@14d8
c7 7b // I_inst: store 0111101111000111 rs = 13, rt = 14, imm =   7 
@14da
ed 48 // I_inst: load 0100100011101101 rs =  4, rt =  7, imm =  13 
@14dc
ae 8d // I_inst: beq 1000110110101110 rs =  6, rt = 13, imm =  14 
@14de
38 3c // R_inst: set 0011110000111000 rs = 14, rt =  1, imm =  -1 
@14e0
e3 78 // I_inst: store 0111100011100011 rs = 12, rt =  7, imm =   3 
@14e2
2e 3e // R_inst: set 0011111000101110 rs = 15, rt =  1, imm =  11 
@14e4
ae 4e // I_inst: load 0100111010101110 rs =  7, rt =  5, imm =  14 
@14e6
77 28 // R_inst: sub 0010100001110111 rs =  4, rt =  3, imm =  -8 
@14e8
19 0d // R_inst: sub 0000110100011001 rs =  6, rt =  8, imm =   0 
@14ea
ad 4b // I_inst: load 0100101110101101 rs =  5, rt = 13, imm =  13 
@14ec
cd 4a // I_inst: load 0100101011001101 rs =  5, rt =  6, imm =  13 
@14ee
dc b4 // J_inst: jump 1011010011011100 address = 014dc 
@14f0
06 02 // R_inst: add 0000001000000110 rs =  1, rt =  0, imm =  -5 
@14f2
91 1a // R_inst: sub 0001101010010001 rs = 13, rt =  4, imm =   2 
@14f4
7c 0a // R_inst: add 0000101001111100 rs =  5, rt =  3, imm =  -1 
@14f6
77 13 // R_inst: sub 0001001101110111 rs =  9, rt = 11, imm =  -2 
@14f8
dd 1d // R_inst: sub 0001110111011101 rs = 14, rt = 14, imm =  -9 
@14fa
ec 86 // I_inst: beq 1000011011101100 rs =  3, rt =  7, imm =  12 
@14fc
0c 2f // R_inst: set 0010111100001100 rs =  7, rt =  8, imm =  11 
@14fe
3e 1b // R_inst: add 0001101100111110 rs = 13, rt =  9, imm =   2 
@1500
8f 69 // I_inst: store 0110100110001111 rs =  4, rt = 12, imm =  15 
@1502
e6 40 // I_inst: load 0100000011100110 rs =  0, rt =  7, imm =   6 
@1504
66 40 // I_inst: load 0100000001100110 rs =  0, rt =  3, imm =   6 
@1506
fa b4 // J_inst: jump 1011010011111010 address = 014fa 
@1508
5f 10 // R_inst: sub 0001000001011111 rs =  8, rt =  2, imm =  15 
@150a
72 12 // R_inst: add 0001001001110010 rs =  9, rt =  3, imm = -13 
@150c
c6 0f // R_inst: add 0000111111000110 rs =  7, rt = 14, imm =   6 
@150e
4d 33 // R_inst: sub 0011001101001101 rs =  9, rt = 10, imm =   0 
@1510
3b 05 // R_inst: sub 0000010100111011 rs =  2, rt =  9, imm =  -1 
@1512
af 3f // R_inst: sub 0011111110101111 rs = 15, rt = 13, imm =   1 
@1514
20 b5 // J_inst: jump 1011010100100000 address = 01520 
@1516
26 b5 // J_inst: jump 1011010100100110 address = 01526 
@1518
4d 0d // R_inst: sub 0000110101001101 rs =  6, rt = 10, imm =  -4 
@151a
8d 12 // R_inst: sub 0001001010001101 rs =  9, rt =  4, imm =  -1 
@151c
d6 1d // R_inst: add 0001110111010110 rs = 14, rt = 14, imm =   7 
@151e
ec 08 // R_inst: add 0000100011101100 rs =  4, rt =  7, imm =  -6 
@1520
62 4c // I_inst: load 0100110001100010 rs =  6, rt =  3, imm =   2 
@1522
e2 4d // I_inst: load 0100110111100010 rs =  6, rt = 15, imm =   2 
@1524
78 9e // I_inst: beq 1001111001111000 rs = 15, rt =  3, imm =  -8 
@1526
7a 27 // R_inst: set 0010011101111010 rs =  3, rt = 11, imm = -14 
@1528
e7 7b // I_inst: store 0111101111100111 rs = 13, rt = 15, imm =   7 
@152a
2d 9e // I_inst: beq 1001111000101101 rs = 15, rt =  1, imm =  13 
@152c
56 6e // I_inst: store 0110111001010110 rs =  7, rt =  2, imm = -10 
@152e
e5 7d // I_inst: store 0111110111100101 rs = 14, rt = 15, imm =   5 
@1530
20 5c // I_inst: load 0101110000100000 rs = 14, rt =  1, imm =   0 
@1532
e0 5d // I_inst: load 0101110111100000 rs = 14, rt = 15, imm =   0 
@1534
2a b5 // J_inst: jump 1011010100101010 address = 0152a 
@1536
8a 06 // R_inst: add 0000011010001010 rs =  3, rt =  4, imm =   7 
@1538
c3 10 // R_inst: sub 0001000011000011 rs =  8, rt =  6, imm =  13 
@153a
92 10 // R_inst: add 0001000010010010 rs =  8, rt =  4, imm =   7 
@153c
79 2a // R_inst: sub 0010101001111001 rs =  5, rt =  3, imm =   6 
@153e
a5 1b // R_inst: sub 0001101110100101 rs = 13, rt = 13, imm =  15 
@1540
6b 2e // R_inst: sub 0010111001101011 rs =  7, rt =  3, imm =  -7 
@1542
73 29 // R_inst: sub 0010100101110011 rs =  4, rt = 11, imm = -12 
@1544
19 31 // R_inst: sub 0011000100011001 rs =  8, rt =  8, imm =  13 
@1546
58 b5 // J_inst: jump 1011010101011000 address = 01558 
@1548
58 04 // R_inst: add 0000010001011000 rs =  2, rt =  2, imm = -11 
@154a
ad 12 // R_inst: sub 0001001010101101 rs =  9, rt =  5, imm =  15 
@154c
22 0e // R_inst: add 0000111000100010 rs =  7, rt =  1, imm = -10 
@154e
9e 0f // R_inst: add 0000111110011110 rs =  7, rt = 12, imm =  -1 
@1550
9f 2a // R_inst: sub 0010101010011111 rs =  5, rt =  4, imm =  -2 
@1552
07 29 // R_inst: sub 0010100100000111 rs =  4, rt =  8, imm =   0 
@1554
0c 11 // R_inst: add 0001000100001100 rs =  8, rt =  8, imm =  -8 
@1556
03 0b // R_inst: sub 0000101100000011 rs =  5, rt =  8, imm =  13 
@1558
a1 6f // I_inst: store 0110111110100001 rs =  7, rt = 13, imm =   1 
@155a
ec 40 // I_inst: load 0100000011101100 rs =  0, rt =  7, imm =  12 
@155c
53 12 // R_inst: sub 0001001001010011 rs =  9, rt =  2, imm =  -7 
@155e
6d 68 // I_inst: store 0110100001101101 rs =  4, rt =  3, imm =  13 
@1560
64 11 // R_inst: add 0001000101100100 rs =  8, rt = 11, imm =  -9 
@1562
ae 41 // I_inst: load 0100000110101110 rs =  0, rt = 13, imm =  14 
@1564
89 7e // I_inst: store 0111111010001001 rs = 15, rt =  4, imm =   9 
@1566
d0 37 // R_inst: set 0011011111010000 rs = 11, rt = 14, imm =  -2 
@1568
6a b5 // J_inst: jump 1011010101101010 address = 0156a 
@156a
25 33 // R_inst: sub 0011001100100101 rs =  9, rt =  9, imm =  -2 
@156c
36 5b // I_inst: load 0101101100110110 rs = 13, rt =  9, imm = -10 
@156e
cb 87 // I_inst: beq 1000011111001011 rs =  3, rt = 14, imm =  11 
@1570
8b 70 // I_inst: store 0111000010001011 rs =  8, rt =  4, imm =  11 
@1572
d9 5b // I_inst: load 0101101111011001 rs = 13, rt = 14, imm =  -7 
@1574
79 5a // I_inst: load 0101101001111001 rs = 13, rt =  3, imm =  -7 
@1576
6e b5 // J_inst: jump 1011010101101110 address = 0156e 
@1578
05 10 // R_inst: sub 0001000000000101 rs =  8, rt =  0, imm =  -6 
@157a
9f 3c // R_inst: sub 0011110010011111 rs = 14, rt =  4, imm =  14 
@157c
0c 04 // R_inst: add 0000010000001100 rs =  2, rt =  0, imm =  14 
@157e
b9 2b // R_inst: sub 0010101110111001 rs =  5, rt = 13, imm = -16 
@1580
b3 04 // R_inst: sub 0000010010110011 rs =  2, rt =  5, imm =   3 
@1582
34 1b // R_inst: add 0001101100110100 rs = 13, rt =  9, imm = -13 
@1584
53 2f // R_inst: sub 0010111101010011 rs =  7, rt = 10, imm = -10 
@1586
01 4d // I_inst: load 0100110100000001 rs =  6, rt =  8, imm =   1 
@1588
61 4d // I_inst: load 0100110101100001 rs =  6, rt = 11, imm =   1 
@158a
01 97 // I_inst: beq 1001011100000001 rs = 11, rt =  8, imm =   1 
@158c
ab 01 // R_inst: sub 0000000110101011 rs =  0, rt = 13, imm =  -3 
@158e
38 52 // I_inst: load 0101001000111000 rs =  9, rt =  1, imm =  -8 
@1590
78 53 // I_inst: load 0101001101111000 rs =  9, rt = 11, imm =  -8 
@1592
2d 96 // I_inst: beq 1001011000101101 rs = 11, rt =  1, imm =  13 
@1594
34 0f // R_inst: add 0000111100110100 rs =  7, rt =  9, imm =  -4 
@1596
07 12 // R_inst: sub 0001001000000111 rs =  9, rt =  0, imm =  10 
@1598
e5 22 // R_inst: sub 0010001011100101 rs =  1, rt =  7, imm =   6 
@159a
6b 0d // R_inst: sub 0000110101101011 rs =  6, rt = 11, imm = -15 
@159c
d8 0e // R_inst: add 0000111011011000 rs =  7, rt =  6, imm =  -6 
@159e
86 0f // R_inst: add 0000111110000110 rs =  7, rt = 12, imm =   5 
@15a0
af 33 // R_inst: sub 0011001110101111 rs =  9, rt = 13, imm =  -9 
@15a2
ed 37 // R_inst: sub 0011011111101101 rs = 11, rt = 15, imm =   2 
@15a4
db 00 // R_inst: sub 0000000011011011 rs =  0, rt =  6, imm =   4 
@15a6
dc 02 // R_inst: add 0000001011011100 rs =  1, rt =  6, imm =   9 
@15a8
ba 09 // R_inst: add 0000100110111010 rs =  4, rt = 13, imm = -11 
@15aa
49 33 // R_inst: sub 0011001101001001 rs =  9, rt = 10, imm =   6 
@15ac
45 23 // R_inst: sub 0010001101000101 rs =  1, rt = 10, imm =  10 
@15ae
6b 0b // R_inst: sub 0000101101101011 rs =  5, rt = 11, imm = -15 
@15b0
d6 b5 // J_inst: jump 1011010111010110 address = 015d6 
@15b2
5f 0a // R_inst: sub 0000101001011111 rs =  5, rt =  2, imm =  -5 
@15b4
95 0a // R_inst: sub 0000101010010101 rs =  5, rt =  4, imm = -11 
@15b6
df 04 // R_inst: sub 0000010011011111 rs =  2, rt =  6, imm =  -8 
@15b8
b1 2b // R_inst: sub 0010101110110001 rs =  5, rt = 13, imm = -16 
@15ba
ec 14 // R_inst: add 0001010011101100 rs = 10, rt =  7, imm =  -8 
@15bc
c9 05 // R_inst: sub 0000010111001001 rs =  2, rt = 14, imm =   7 
@15be
31 2b // R_inst: sub 0010101100110001 rs =  5, rt =  9, imm =  11 
@15c0
bf 19 // R_inst: sub 0001100110111111 rs = 12, rt = 13, imm =  -1 
@15c2
90 17 // R_inst: add 0001011110010000 rs = 11, rt = 12, imm =   0 
@15c4
05 2d // R_inst: sub 0010110100000101 rs =  6, rt =  8, imm =   8 
@15c6
65 00 // R_inst: sub 0000000001100101 rs =  0, rt =  3, imm = -12 
@15c8
bd 36 // R_inst: sub 0011011010111101 rs = 11, rt =  5, imm = -13 
@15ca
a6 08 // R_inst: add 0000100010100110 rs =  4, rt =  5, imm =   1 
@15cc
5d 27 // R_inst: sub 0010011101011101 rs =  3, rt = 10, imm =  13 
@15ce
ef 39 // R_inst: sub 0011100111101111 rs = 12, rt = 15, imm =   3 
@15d0
95 2b // R_inst: sub 0010101110010101 rs =  5, rt = 12, imm =   8 
@15d2
42 1e // R_inst: add 0001111001000010 rs = 15, rt =  2, imm =  -6 
@15d4
c3 31 // R_inst: sub 0011000111000011 rs =  8, rt = 14, imm =  -2 
@15d6
a6 43 // I_inst: load 0100001110100110 rs =  1, rt = 13, imm =   6 
@15d8
11 07 // R_inst: sub 0000011100010001 rs =  3, rt =  8, imm =   8 
@15da
12 b6 // J_inst: jump 1011011000010010 address = 01612 
@15dc
e5 30 // R_inst: sub 0011000011100101 rs =  8, rt =  7, imm =   2 
@15de
c9 04 // R_inst: sub 0000010011001001 rs =  2, rt =  6, imm = -13 
@15e0
7d 15 // R_inst: sub 0001010101111101 rs = 10, rt = 11, imm =  14 
@15e2
d7 37 // R_inst: sub 0011011111010111 rs = 11, rt = 14, imm =  -5 
@15e4
7d 0c // R_inst: sub 0000110001111101 rs =  6, rt =  3, imm =   9 
@15e6
ed 06 // R_inst: sub 0000011011101101 rs =  3, rt =  7, imm = -13 
@15e8
c8 1d // R_inst: add 0001110111001000 rs = 14, rt = 14, imm = -16 
@15ea
c6 14 // R_inst: add 0001010011000110 rs = 10, rt =  6, imm = -16 
@15ec
af 3e // R_inst: sub 0011111010101111 rs = 15, rt =  5, imm = -13 
@15ee
9f 3e // R_inst: sub 0011111010011111 rs = 15, rt =  4, imm =  -5 
@15f0
f3 3c // R_inst: sub 0011110011110011 rs = 14, rt =  7, imm =   4 
@15f2
07 35 // R_inst: sub 0011010100000111 rs = 10, rt =  8, imm =   6 
@15f4
b6 1a // R_inst: add 0001101010110110 rs = 13, rt =  5, imm =  -3 
@15f6
f5 14 // R_inst: sub 0001010011110101 rs = 10, rt =  7, imm =   6 
@15f8
ff 03 // R_inst: sub 0000001111111111 rs =  1, rt = 15, imm =  -8 
@15fa
79 3c // R_inst: sub 0011110001111001 rs = 14, rt =  3, imm =  -7 
@15fc
35 31 // R_inst: sub 0011000100110101 rs =  8, rt =  9, imm =   7 
@15fe
2e 03 // R_inst: add 0000001100101110 rs =  1, rt =  9, imm =  -8 
@1600
29 25 // R_inst: sub 0010010100101001 rs =  2, rt =  9, imm =   9 
@1602
2a 0e // R_inst: add 0000111000101010 rs =  7, rt =  1, imm = -12 
@1604
e9 32 // R_inst: sub 0011001011101001 rs =  9, rt =  7, imm = -11 
@1606
df 23 // R_inst: sub 0010001111011111 rs =  1, rt = 14, imm =  15 
@1608
a7 0f // R_inst: sub 0000111110100111 rs =  7, rt = 13, imm = -10 
@160a
08 11 // R_inst: add 0001000100001000 rs =  8, rt =  8, imm =  10 
@160c
cf 12 // R_inst: sub 0001001011001111 rs =  9, rt =  6, imm =   7 
@160e
50 1d // R_inst: add 0001110101010000 rs = 14, rt = 10, imm = -12 
@1610
0f 2b // R_inst: sub 0010101100001111 rs =  5, rt =  8, imm = -12 
@1612
cf 35 // R_inst: sub 0011010111001111 rs = 10, rt = 14, imm =   4 
@1614
cd 85 // I_inst: beq 1000010111001101 rs =  2, rt = 14, imm =  13 
@1616
98 2c // R_inst: set 0010110010011000 rs =  6, rt =  4, imm = -16 
@1618
45 05 // R_inst: sub 0000010101000101 rs =  2, rt = 10, imm =   0 
@161a
da 57 // I_inst: load 0101011111011010 rs = 11, rt = 14, imm =  -6 
@161c
5a 56 // I_inst: load 0101011001011010 rs = 11, rt =  2, imm =  -6 
@161e
14 b6 // J_inst: jump 1011011000010100 address = 01614 
@1620
5d 2f // R_inst: sub 0010111101011101 rs =  7, rt = 10, imm =   6 
@1622
6b 39 // R_inst: sub 0011100101101011 rs = 12, rt = 11, imm =  -6 
@1624
c3 17 // R_inst: sub 0001011111000011 rs = 11, rt = 14, imm =  -3 
@1626
09 1f // R_inst: sub 0001111100001001 rs = 15, rt =  8, imm =   6 
@1628
43 3c // R_inst: sub 0011110001000011 rs = 14, rt =  2, imm =  13 
@162a
68 18 // R_inst: add 0001100001101000 rs = 12, rt =  3, imm =  10 
@162c
c2 06 // R_inst: add 0000011011000010 rs =  3, rt =  6, imm =  -9 
@162e
79 0c // R_inst: sub 0000110001111001 rs =  6, rt =  3, imm =   4 
@1630
62 b6 // J_inst: jump 1011011001100010 address = 01662 
@1632
14 1a // R_inst: add 0001101000010100 rs = 13, rt =  0, imm =   3 
@1634
92 11 // R_inst: add 0001000110010010 rs =  8, rt = 12, imm =  -2 
@1636
ed 22 // R_inst: sub 0010001011101101 rs =  1, rt =  7, imm =  -8 
@1638
cb 08 // R_inst: sub 0000100011001011 rs =  4, rt =  6, imm =   3 
@163a
9f 13 // R_inst: sub 0001001110011111 rs =  9, rt = 12, imm =  11 
@163c
cd 11 // R_inst: sub 0001000111001101 rs =  8, rt = 14, imm =  -7 
@163e
8f 03 // R_inst: sub 0000001110001111 rs =  1, rt = 12, imm =  10 
@1640
68 0d // R_inst: add 0000110101101000 rs =  6, rt = 11, imm =  -6 
@1642
9c 17 // R_inst: add 0001011110011100 rs = 11, rt = 12, imm =   9 
@1644
1c 0a // R_inst: add 0000101000011100 rs =  5, rt =  0, imm =  -1 
@1646
b5 32 // R_inst: sub 0011001010110101 rs =  9, rt =  5, imm = -13 
@1648
49 0d // R_inst: sub 0000110101001001 rs =  6, rt = 10, imm =  -5 
@164a
9d 27 // R_inst: sub 0010011110011101 rs =  3, rt = 12, imm = -12 
@164c
19 31 // R_inst: sub 0011000100011001 rs =  8, rt =  8, imm =  14 
@164e
ea 0d // R_inst: add 0000110111101010 rs =  6, rt = 15, imm =  11 
@1650
af 12 // R_inst: sub 0001001010101111 rs =  9, rt =  5, imm =  10 
@1652
34 18 // R_inst: add 0001100000110100 rs = 12, rt =  1, imm =   6 
@1654
49 39 // R_inst: sub 0011100101001001 rs = 12, rt = 10, imm =  -6 
@1656
b8 16 // R_inst: add 0001011010111000 rs = 11, rt =  5, imm = -16 
@1658
19 16 // R_inst: sub 0001011000011001 rs = 11, rt =  0, imm =  -3 
@165a
ba 10 // R_inst: add 0001000010111010 rs =  8, rt =  5, imm = -14 
@165c
89 10 // R_inst: sub 0001000010001001 rs =  8, rt =  4, imm =  -4 
@165e
72 16 // R_inst: add 0001011001110010 rs = 11, rt =  3, imm =  -7 
@1660
5b 27 // R_inst: sub 0010011101011011 rs =  3, rt = 10, imm =   5 
@1662
e3 58 // I_inst: load 0101100011100011 rs = 12, rt =  7, imm =   3 
@1664
ad 8d // I_inst: beq 1000110110101101 rs =  6, rt = 13, imm =  13 
@1666
8a 2b // R_inst: set 0010101110001010 rs =  5, rt = 12, imm = -16 
@1668
b1 12 // R_inst: sub 0001001010110001 rs =  9, rt =  5, imm =   1 
@166a
37 45 // I_inst: load 0100010100110111 rs =  2, rt =  9, imm =  -9 
@166c
a7 41 // I_inst: load 0100000110100111 rs =  0, rt = 13, imm =   7 
@166e
c7 40 // I_inst: load 0100000011000111 rs =  0, rt =  6, imm =   7 
@1670
64 b6 // J_inst: jump 1011011001100100 address = 01664 
@1672
5d 0b // R_inst: sub 0000101101011101 rs =  5, rt = 10, imm =   7 
@1674
7f 10 // R_inst: sub 0001000001111111 rs =  8, rt =  3, imm =  10 
@1676
27 25 // R_inst: sub 0010010100100111 rs =  2, rt =  9, imm =  -7 
@1678
13 3f // R_inst: sub 0011111100010011 rs = 15, rt =  8, imm = -16 
@167a
76 05 // R_inst: add 0000010101110110 rs =  2, rt = 11, imm =  -8 
@167c
66 1f // R_inst: add 0001111101100110 rs = 15, rt = 11, imm =  15 
@167e
af 17 // R_inst: sub 0001011110101111 rs = 11, rt = 13, imm = -16 
@1680
37 65 // I_inst: store 0110010100110111 rs =  2, rt =  9, imm =  -9 
@1682
ec 9b // I_inst: beq 1001101111101100 rs = 13, rt = 15, imm =  12 
@1684
62 34 // R_inst: set 0011010001100010 rs = 10, rt =  3, imm =   3 
@1686
23 2f // R_inst: sub 0010111100100011 rs =  7, rt =  9, imm =  -1 
@1688
ee 71 // I_inst: store 0111000111101110 rs =  8, rt = 15, imm =  14 
@168a
37 2f // R_inst: sub 0010111100110111 rs =  7, rt =  9, imm =  10 
@168c
f0 5d // I_inst: load 0101110111110000 rs = 14, rt = 15, imm = -16 
@168e
b0 5d // I_inst: load 0101110110110000 rs = 14, rt = 13, imm = -16 
@1690
82 b6 // J_inst: jump 1011011010000010 address = 01682 
@1692
ca 04 // R_inst: add 0000010011001010 rs =  2, rt =  6, imm =  -1 
@1694
e6 00 // R_inst: add 0000000011100110 rs =  0, rt =  7, imm =   0 
@1696
b7 0e // R_inst: sub 0000111010110111 rs =  7, rt =  5, imm =   9 
@1698
e2 01 // R_inst: add 0000000111100010 rs =  0, rt = 15, imm = -13 
@169a
57 25 // R_inst: sub 0010010101010111 rs =  2, rt = 10, imm = -12 
@169c
4d 29 // R_inst: sub 0010100101001101 rs =  4, rt = 10, imm =  14 
@169e
85 53 // I_inst: load 0101001110000101 rs =  9, rt = 12, imm =   5 
@16a0
d8 b6 // J_inst: jump 1011011011011000 address = 016d8 
@16a2
a3 2d // R_inst: sub 0010110110100011 rs =  6, rt = 13, imm =   2 
@16a4
8b 1b // R_inst: sub 0001101110001011 rs = 13, rt = 12, imm = -16 
@16a6
68 10 // R_inst: add 0001000001101000 rs =  8, rt =  3, imm =   5 
@16a8
55 23 // R_inst: sub 0010001101010101 rs =  1, rt = 10, imm =  -7 
@16aa
75 3d // R_inst: sub 0011110101110101 rs = 14, rt = 11, imm =  -2 
@16ac
0b 0e // R_inst: sub 0000111000001011 rs =  7, rt =  0, imm =  -2 
@16ae
62 1c // R_inst: add 0001110001100010 rs = 14, rt =  3, imm =   5 
@16b0
ac 1b // R_inst: add 0001101110101100 rs = 13, rt = 13, imm = -11 
@16b2
86 1d // R_inst: add 0001110110000110 rs = 14, rt = 12, imm =  14 
@16b4
fc 1a // R_inst: add 0001101011111100 rs = 13, rt =  7, imm = -13 
@16b6
ee 12 // R_inst: add 0001001011101110 rs =  9, rt =  7, imm = -15 
@16b8
2c 1a // R_inst: add 0001101000101100 rs = 13, rt =  1, imm = -15 
@16ba
dd 29 // R_inst: sub 0010100111011101 rs =  4, rt = 14, imm =   8 
@16bc
a4 09 // R_inst: add 0000100110100100 rs =  4, rt = 13, imm = -12 
@16be
cd 1d // R_inst: sub 0001110111001101 rs = 14, rt = 14, imm =  10 
@16c0
b4 0b // R_inst: add 0000101110110100 rs =  5, rt = 13, imm =  -2 
@16c2
d8 1b // R_inst: add 0001101111011000 rs = 13, rt = 14, imm =   9 
@16c4
c8 14 // R_inst: add 0001010011001000 rs = 10, rt =  6, imm = -12 
@16c6
49 28 // R_inst: sub 0010100001001001 rs =  4, rt =  2, imm =   8 
@16c8
0c 16 // R_inst: add 0001011000001100 rs = 11, rt =  0, imm =   3 
@16ca
dc 02 // R_inst: add 0000001011011100 rs =  1, rt =  6, imm =   2 
@16cc
b7 31 // R_inst: sub 0011000110110111 rs =  8, rt = 13, imm =   0 
@16ce
09 12 // R_inst: sub 0001001000001001 rs =  9, rt =  0, imm = -10 
@16d0
91 06 // R_inst: sub 0000011010010001 rs =  3, rt =  4, imm =  -5 
@16d2
31 04 // R_inst: sub 0000010000110001 rs =  2, rt =  1, imm =   9 
@16d4
df 1d // R_inst: sub 0001110111011111 rs = 14, rt = 14, imm = -14 
@16d6
b5 0a // R_inst: sub 0000101010110101 rs =  5, rt =  5, imm = -14 
@16d8
e2 72 // I_inst: store 0111001011100010 rs =  9, rt =  7, imm =   2 
@16da
fc b6 // J_inst: jump 1011011011111100 address = 016fc 
@16dc
ef 32 // R_inst: sub 0011001011101111 rs =  9, rt =  7, imm =  11 
@16de
34 03 // R_inst: add 0000001100110100 rs =  1, rt =  9, imm =  -2 
@16e0
5d 2a // R_inst: sub 0010101001011101 rs =  5, rt =  2, imm =  -6 
@16e2
82 15 // R_inst: add 0001010110000010 rs = 10, rt = 12, imm = -13 
@16e4
ac 1a // R_inst: add 0001101010101100 rs = 13, rt =  5, imm =  10 
@16e6
9c 00 // R_inst: add 0000000010011100 rs =  0, rt =  4, imm =   0 
@16e8
bf 18 // R_inst: sub 0001100010111111 rs = 12, rt =  5, imm =   3 
@16ea
d5 0c // R_inst: sub 0000110011010101 rs =  6, rt =  6, imm =  -7 
@16ec
5d 3c // R_inst: sub 0011110001011101 rs = 14, rt =  2, imm =  -5 
@16ee
a6 08 // R_inst: add 0000100010100110 rs =  4, rt =  5, imm =  -7 
@16f0
a3 1c // R_inst: sub 0001110010100011 rs = 14, rt =  5, imm = -16 
@16f2
cb 30 // R_inst: sub 0011000011001011 rs =  8, rt =  6, imm =  -3 
@16f4
2c 09 // R_inst: add 0000100100101100 rs =  4, rt =  9, imm =   1 
@16f6
f6 06 // R_inst: add 0000011011110110 rs =  3, rt =  7, imm =   6 
@16f8
c7 1a // R_inst: sub 0001101011000111 rs = 13, rt =  6, imm =   3 
@16fa
c6 1c // R_inst: add 0001110011000110 rs = 14, rt =  6, imm =  -5 
@16fc
45 5d // I_inst: load 0101110101000101 rs = 14, rt = 10, imm =   5 
@16fe
08 b7 // J_inst: jump 1011011100001000 address = 01708 
@1700
0e b7 // J_inst: jump 1011011100001110 address = 0170e 
@1702
bf 14 // R_inst: sub 0001010010111111 rs = 10, rt =  5, imm = -10 
@1704
5f 1d // R_inst: sub 0001110101011111 rs = 14, rt = 10, imm =  13 
@1706
b3 0b // R_inst: sub 0000101110110011 rs =  5, rt = 13, imm =   5 
@1708
ff 50 // I_inst: load 0101000011111111 rs =  8, rt =  7, imm =  -1 
@170a
bf 50 // I_inst: load 0101000010111111 rs =  8, rt =  5, imm =  -1 
@170c
f9 8a // I_inst: beq 1000101011111001 rs =  5, rt =  7, imm =  -7 
@170e
1e b7 // J_inst: jump 1011011100011110 address = 0171e 
@1710
24 b7 // J_inst: jump 1011011100100100 address = 01724 
@1712
23 09 // R_inst: sub 0000100100100011 rs =  4, rt =  9, imm =   2 
@1714
7d 2d // R_inst: sub 0010110101111101 rs =  6, rt = 11, imm = -12 
@1716
94 1e // R_inst: add 0001111010010100 rs = 15, rt =  4, imm = -14 
@1718
f5 19 // R_inst: sub 0001100111110101 rs = 12, rt = 15, imm =  -9 
@171a
3b 1c // R_inst: sub 0001110000111011 rs = 14, rt =  1, imm =   2 
@171c
d8 12 // R_inst: add 0001001011011000 rs =  9, rt =  6, imm =  -2 
@171e
fc 5c // I_inst: load 0101110011111100 rs = 14, rt =  7, imm =  -4 
@1720
7c 5c // I_inst: load 0101110001111100 rs = 14, rt =  3, imm =  -4 
@1722
f6 86 // I_inst: beq 1000011011110110 rs =  3, rt =  7, imm = -10 
@1724
3a b7 // J_inst: jump 1011011100111010 address = 0173a 
@1726
bf 39 // R_inst: sub 0011100110111111 rs = 12, rt = 13, imm =  -6 
@1728
a9 1d // R_inst: sub 0001110110101001 rs = 14, rt = 13, imm =   8 
@172a
3a 0d // R_inst: add 0000110100111010 rs =  6, rt =  9, imm =  14 
@172c
b5 25 // R_inst: sub 0010010110110101 rs =  2, rt = 13, imm =   4 
@172e
c2 0b // R_inst: add 0000101111000010 rs =  5, rt = 14, imm = -11 
@1730
b7 2d // R_inst: sub 0010110110110111 rs =  6, rt = 13, imm = -10 
@1732
1b 31 // R_inst: sub 0011000100011011 rs =  8, rt =  8, imm = -10 
@1734
c5 38 // R_inst: sub 0011100011000101 rs = 12, rt =  6, imm =  -6 
@1736
8d 11 // R_inst: sub 0001000110001101 rs =  8, rt = 12, imm =  12 
@1738
90 16 // R_inst: add 0001011010010000 rs = 11, rt =  4, imm =  14 
@173a
46 b7 // J_inst: jump 1011011101000110 address = 01746 
@173c
4c b7 // J_inst: jump 1011011101001100 address = 0174c 
@173e
eb 1e // R_inst: sub 0001111011101011 rs = 15, rt =  7, imm =  -3 
@1740
1f 07 // R_inst: sub 0000011100011111 rs =  3, rt =  8, imm =  12 
@1742
5f 13 // R_inst: sub 0001001101011111 rs =  9, rt = 10, imm =  -6 
@1744
45 0a // R_inst: sub 0000101001000101 rs =  5, rt =  2, imm = -16 
@1746
99 50 // I_inst: load 0101000010011001 rs =  8, rt =  4, imm =  -7 
@1748
39 51 // I_inst: load 0101000100111001 rs =  8, rt =  9, imm =  -7 
@174a
98 92 // I_inst: beq 1001001010011000 rs =  9, rt =  4, imm =  -8 
@174c
74 20 // R_inst: set 0010000001110100 rs =  0, rt =  3, imm = -14 
@174e
8d 04 // R_inst: sub 0000010010001101 rs =  2, rt =  4, imm = -10 
@1750
17 01 // R_inst: sub 0000000100010111 rs =  0, rt =  8, imm =   0 
@1752
ca 96 // I_inst: beq 1001011011001010 rs = 11, rt =  6, imm =  10 
@1754
1d 08 // R_inst: sub 0000100000011101 rs =  4, rt =  0, imm =  10 
@1756
89 2a // R_inst: sub 0010101010001001 rs =  5, rt =  4, imm = -13 
@1758
8d 4c // I_inst: load 0100110010001101 rs =  6, rt =  4, imm =  13 
@175a
80 b7 // J_inst: jump 1011011110000000 address = 01780 
@175c
77 3b // R_inst: sub 0011101101110111 rs = 13, rt = 11, imm =  13 
@175e
5a 0a // R_inst: add 0000101001011010 rs =  5, rt =  2, imm = -13 
@1760
8f 1c // R_inst: sub 0001110010001111 rs = 14, rt =  4, imm =  -9 
@1762
b3 1e // R_inst: sub 0001111010110011 rs = 15, rt =  5, imm =   7 
@1764
7b 0a // R_inst: sub 0000101001111011 rs =  5, rt =  3, imm = -10 
@1766
fc 0c // R_inst: add 0000110011111100 rs =  6, rt =  7, imm =  10 
@1768
69 07 // R_inst: sub 0000011101101001 rs =  3, rt = 11, imm =  10 
@176a
53 27 // R_inst: sub 0010011101010011 rs =  3, rt = 10, imm =   7 
@176c
33 26 // R_inst: sub 0010011000110011 rs =  3, rt =  1, imm =   3 
@176e
cb 3e // R_inst: sub 0011111011001011 rs = 15, rt =  6, imm =  10 
@1770
c8 1f // R_inst: add 0001111111001000 rs = 15, rt = 14, imm =   5 
@1772
af 27 // R_inst: sub 0010011110101111 rs =  3, rt = 13, imm =  14 
@1774
55 3f // R_inst: sub 0011111101010101 rs = 15, rt = 10, imm =  -8 
@1776
19 33 // R_inst: sub 0011001100011001 rs =  9, rt =  8, imm =  -2 
@1778
d9 32 // R_inst: sub 0011001011011001 rs =  9, rt =  6, imm =   3 
@177a
e7 00 // R_inst: sub 0000000011100111 rs =  0, rt =  7, imm =   2 
@177c
c7 39 // R_inst: sub 0011100111000111 rs = 12, rt = 14, imm =   9 
@177e
e4 0a // R_inst: add 0000101011100100 rs =  5, rt =  7, imm =  12 
@1780
2f 3d // R_inst: sub 0011110100101111 rs = 14, rt =  9, imm = -16 
@1782
14 13 // R_inst: add 0001001100010100 rs =  9, rt =  8, imm =  11 
@1784
ae 75 // I_inst: store 0111010110101110 rs = 10, rt = 13, imm =  14 
@1786
a4 85 // I_inst: beq 1000010110100100 rs =  2, rt = 13, imm =   4 
@1788
e0 4c // I_inst: load 0100110011100000 rs =  6, rt =  7, imm =   0 
@178a
a7 2e // R_inst: sub 0010111010100111 rs =  7, rt =  5, imm = -15 
@178c
83 93 // I_inst: beq 1001001110000011 rs =  9, rt = 12, imm =   3 
@178e
1a 65 // I_inst: store 0110010100011010 rs =  2, rt =  8, imm =  -6 
@1790
8e 90 // I_inst: beq 1001000010001110 rs =  8, rt =  4, imm =  14 
@1792
83 33 // R_inst: sub 0011001110000011 rs =  9, rt = 12, imm =  -7 
@1794
2c 8a // I_inst: beq 1000101000101100 rs =  5, rt =  1, imm =  12 
@1796
c0 b7 // J_inst: jump 1011011111000000 address = 017c0 
@1798
9b 15 // R_inst: sub 0001010110011011 rs = 10, rt = 12, imm =  -3 
@179a
4e 0d // R_inst: add 0000110101001110 rs =  6, rt = 10, imm =   5 
@179c
2d 04 // R_inst: sub 0000010000101101 rs =  2, rt =  1, imm =  10 
@179e
89 28 // R_inst: sub 0010100010001001 rs =  4, rt =  4, imm =  -9 
@17a0
b2 0b // R_inst: add 0000101110110010 rs =  5, rt = 13, imm =  15 
@17a2
66 0e // R_inst: add 0000111001100110 rs =  7, rt =  3, imm =  14 
@17a4
c3 02 // R_inst: sub 0000001011000011 rs =  1, rt =  6, imm =   6 
@17a6
3c 11 // R_inst: add 0001000100111100 rs =  8, rt =  9, imm =   5 
@17a8
96 16 // R_inst: add 0001011010010110 rs = 11, rt =  4, imm =  -2 
@17aa
f4 0e // R_inst: add 0000111011110100 rs =  7, rt =  7, imm =  -4 
@17ac
9b 2f // R_inst: sub 0010111110011011 rs =  7, rt = 12, imm = -11 
@17ae
2d 36 // R_inst: sub 0011011000101101 rs = 11, rt =  1, imm = -10 
@17b0
4d 2c // R_inst: sub 0010110001001101 rs =  6, rt =  2, imm =  -2 
@17b2
37 0c // R_inst: sub 0000110000110111 rs =  6, rt =  1, imm = -10 
@17b4
35 19 // R_inst: sub 0001100100110101 rs = 12, rt =  9, imm =   0 
@17b6
f1 11 // R_inst: sub 0001000111110001 rs =  8, rt = 15, imm =  -5 
@17b8
4d 07 // R_inst: sub 0000011101001101 rs =  3, rt = 10, imm =   3 
@17ba
83 17 // R_inst: sub 0001011110000011 rs = 11, rt = 12, imm = -11 
@17bc
4c 0a // R_inst: add 0000101001001100 rs =  5, rt =  2, imm =  15 
@17be
ff 0d // R_inst: sub 0000110111111111 rs =  6, rt = 15, imm =   3 
@17c0
83 52 // I_inst: load 0101001010000011 rs =  9, rt =  4, imm =   3 
@17c2
03 53 // I_inst: load 0101001100000011 rs =  9, rt =  8, imm =   3 
@17c4
8a 90 // I_inst: beq 1001000010001010 rs =  8, rt =  4, imm =  10 
@17c6
5e 15 // R_inst: add 0001010101011110 rs = 10, rt = 10, imm = -15 
@17c8
91 27 // R_inst: sub 0010011110010001 rs =  3, rt = 12, imm =   8 
@17ca
4f 01 // R_inst: sub 0000000101001111 rs =  0, rt = 10, imm =  -2 
@17cc
f6 0d // R_inst: add 0000110111110110 rs =  6, rt = 15, imm = -12 
@17ce
da 1a // R_inst: add 0001101011011010 rs = 13, rt =  6, imm =  15 
@17d0
e2 0c // R_inst: add 0000110011100010 rs =  6, rt =  7, imm =  10 
@17d2
9a 12 // R_inst: add 0001001010011010 rs =  9, rt =  4, imm =   1 
@17d4
51 0c // R_inst: sub 0000110001010001 rs =  6, rt =  2, imm = -15 
@17d6
f8 1e // R_inst: add 0001111011111000 rs = 15, rt =  7, imm =  13 
@17d8
3e 19 // R_inst: add 0001100100111110 rs = 12, rt =  9, imm =   8 
@17da
02 b8 // J_inst: jump 1011100000000010 address = 01802 
@17dc
ba 05 // R_inst: add 0000010110111010 rs =  2, rt = 13, imm =  13 
@17de
3d 2f // R_inst: sub 0010111100111101 rs =  7, rt =  9, imm =   0 
@17e0
bd 3d // R_inst: sub 0011110110111101 rs = 14, rt = 13, imm =  -6 
@17e2
71 1e // R_inst: sub 0001111001110001 rs = 15, rt =  3, imm =  13 
@17e4
98 1e // R_inst: add 0001111010011000 rs = 15, rt =  4, imm = -11 
@17e6
83 25 // R_inst: sub 0010010110000011 rs =  2, rt = 12, imm = -13 
@17e8
b4 0c // R_inst: add 0000110010110100 rs =  6, rt =  5, imm = -10 
@17ea
fb 3c // R_inst: sub 0011110011111011 rs = 14, rt =  7, imm =  -8 
@17ec
e6 06 // R_inst: add 0000011011100110 rs =  3, rt =  7, imm =   6 
@17ee
46 07 // R_inst: add 0000011101000110 rs =  3, rt = 10, imm = -12 
@17f0
55 3e // R_inst: sub 0011111001010101 rs = 15, rt =  2, imm =  15 
@17f2
8f 39 // R_inst: sub 0011100110001111 rs = 12, rt = 12, imm =   2 
@17f4
f5 25 // R_inst: sub 0010010111110101 rs =  2, rt = 15, imm =   6 
@17f6
7b 06 // R_inst: sub 0000011001111011 rs =  3, rt =  3, imm =   5 
@17f8
d9 2d // R_inst: sub 0010110111011001 rs =  6, rt = 14, imm = -12 
@17fa
25 3f // R_inst: sub 0011111100100101 rs = 15, rt =  9, imm = -13 
@17fc
0b 04 // R_inst: sub 0000010000001011 rs =  2, rt =  0, imm =  -3 
@17fe
9f 08 // R_inst: sub 0000100010011111 rs =  4, rt =  4, imm =   0 
@1800
f8 14 // R_inst: add 0001010011111000 rs = 10, rt =  7, imm =   2 
@1802
ab 16 // R_inst: sub 0001011010101011 rs = 11, rt =  5, imm = -16 
@1804
4f 8e // I_inst: beq 1000111001001111 rs =  7, rt =  2, imm =  15 
@1806
aa 0b // R_inst: add 0000101110101010 rs =  5, rt = 13, imm =  13 
@1808
4c 58 // I_inst: load 0101100001001100 rs = 12, rt =  2, imm =  12 
@180a
ec 58 // I_inst: load 0101100011101100 rs = 12, rt =  7, imm =  12 
@180c
04 b8 // J_inst: jump 1011100000000100 address = 01804 
@180e
eb 12 // R_inst: sub 0001001011101011 rs =  9, rt =  7, imm = -14 
@1810
54 0e // R_inst: add 0000111001010100 rs =  7, rt =  2, imm =   3 
@1812
05 11 // R_inst: sub 0001000100000101 rs =  8, rt =  8, imm = -11 
@1814
cf 0e // R_inst: sub 0000111011001111 rs =  7, rt =  6, imm =   2 
@1816
e9 37 // R_inst: sub 0011011111101001 rs = 11, rt = 15, imm =   6 
@1818
83 11 // R_inst: sub 0001000110000011 rs =  8, rt = 12, imm =  -4 
@181a
6b 3c // R_inst: sub 0011110001101011 rs = 14, rt =  3, imm =  13 
@181c
03 1e // R_inst: sub 0001111000000011 rs = 15, rt =  0, imm = -12 
@181e
b1 06 // R_inst: sub 0000011010110001 rs =  3, rt =  5, imm =   3 
@1820
f3 0c // R_inst: sub 0000110011110011 rs =  6, rt =  7, imm = -12 
@1822
e9 1b // R_inst: sub 0001101111101001 rs = 13, rt = 15, imm = -15 
@1824
22 69 // I_inst: store 0110100100100010 rs =  4, rt =  9, imm =   2 
@1826
d5 6d // I_inst: store 0110110111010101 rs =  6, rt = 14, imm = -11 
@1828
6e 97 // I_inst: beq 1001011101101110 rs = 11, rt = 11, imm =  14 
@182a
3a 18 // R_inst: add 0001100000111010 rs = 12, rt =  1, imm =   5 
@182c
e3 0b // R_inst: sub 0000101111100011 rs =  5, rt = 15, imm =   7 
@182e
5c 02 // R_inst: add 0000001001011100 rs =  1, rt =  2, imm =  -4 
@1830
e2 08 // R_inst: add 0000100011100010 rs =  4, rt =  7, imm =  -5 
@1832
93 3f // R_inst: sub 0011111110010011 rs = 15, rt = 12, imm = -11 
@1834
e8 07 // R_inst: add 0000011111101000 rs =  3, rt = 15, imm = -14 
@1836
ab 0c // R_inst: sub 0000110010101011 rs =  6, rt =  5, imm =  -8 
@1838
a6 03 // R_inst: add 0000001110100110 rs =  1, rt = 13, imm =   3 
@183a
05 1e // R_inst: sub 0001111000000101 rs = 15, rt =  0, imm =  12 
@183c
26 18 // R_inst: add 0001100000100110 rs = 12, rt =  1, imm =  -6 
@183e
aa 09 // R_inst: add 0000100110101010 rs =  4, rt = 13, imm =  -2 
@1840
e7 1d // R_inst: sub 0001110111100111 rs = 14, rt = 15, imm = -12 
@1842
c5 23 // R_inst: sub 0010001111000101 rs =  1, rt = 14, imm =  10 
@1844
eb 11 // R_inst: sub 0001000111101011 rs =  8, rt = 15, imm = -11 
@1846
80 75 // I_inst: store 0111010110000000 rs = 10, rt = 12, imm =   0 
@1848
c3 00 // R_inst: sub 0000000011000011 rs =  0, rt =  6, imm =   6 
@184a
a6 96 // I_inst: beq 1001011010100110 rs = 11, rt =  5, imm =   6 
@184c
de 10 // R_inst: add 0001000011011110 rs =  8, rt =  6, imm =  -8 
@184e
69 1b // R_inst: sub 0001101101101001 rs = 13, rt = 11, imm =  -8 
@1850
d2 0e // R_inst: add 0000111011010010 rs =  7, rt =  6, imm =  -6 
@1852
f2 0f // R_inst: add 0000111111110010 rs =  7, rt = 15, imm = -12 
@1854
f7 1b // R_inst: sub 0001101111110111 rs = 13, rt = 15, imm =  -1 
@1856
e5 1a // R_inst: sub 0001101011100101 rs = 13, rt =  7, imm =   6 
@1858
60 b8 // J_inst: jump 1011100001100000 address = 01860 
@185a
4d 30 // R_inst: sub 0011000001001101 rs =  8, rt =  2, imm = -11 
@185c
ab 1c // R_inst: sub 0001110010101011 rs = 14, rt =  5, imm = -14 
@185e
1d 0a // R_inst: sub 0000101000011101 rs =  5, rt =  0, imm =   5 
@1860
b1 34 // R_inst: sub 0011010010110001 rs = 10, rt =  5, imm =   9 
@1862
49 40 // I_inst: load 0100000001001001 rs =  0, rt =  2, imm =   9 
@1864
c3 8c // I_inst: beq 1000110011000011 rs =  6, rt =  6, imm =   3 
@1866
3b 0e // R_inst: sub 0000111000111011 rs =  7, rt =  1, imm = -11 
@1868
47 10 // R_inst: sub 0001000001000111 rs =  8, rt =  2, imm =  -2 
@186a
4f 15 // R_inst: sub 0001010101001111 rs = 10, rt = 10, imm =   7 
@186c
7e b8 // J_inst: jump 1011100001111110 address = 0187e 
@186e
84 b8 // J_inst: jump 1011100010000100 address = 01884 
@1870
3f 05 // R_inst: sub 0000010100111111 rs =  2, rt =  9, imm =  13 
@1872
ad 30 // R_inst: sub 0011000010101101 rs =  8, rt =  5, imm = -10 
@1874
af 3e // R_inst: sub 0011111010101111 rs = 15, rt =  5, imm = -16 
@1876
bd 0c // R_inst: sub 0000110010111101 rs =  6, rt =  5, imm =  -4 
@1878
dd 12 // R_inst: sub 0001001011011101 rs =  9, rt =  6, imm = -13 
@187a
eb 0b // R_inst: sub 0000101111101011 rs =  5, rt = 15, imm =  -9 
@187c
4b 0b // R_inst: sub 0000101101001011 rs =  5, rt = 10, imm =   6 
@187e
f2 48 // I_inst: load 0100100011110010 rs =  4, rt =  7, imm = -14 
@1880
72 49 // I_inst: load 0100100101110010 rs =  4, rt = 11, imm = -14 
@1882
f5 96 // I_inst: beq 1001011011110101 rs = 11, rt =  7, imm = -11 
@1884
c8 61 // I_inst: store 0110000111001000 rs =  0, rt = 14, imm =   8 
@1886
2d 2f // R_inst: sub 0010111100101101 rs =  7, rt =  9, imm = -11 
@1888
9f 0f // R_inst: sub 0000111110011111 rs =  7, rt = 12, imm =   3 
@188a
62 02 // R_inst: add 0000001001100010 rs =  1, rt =  3, imm =   5 
@188c
44 24 // R_inst: set 0010010001000100 rs =  2, rt =  2, imm = -13 
@188e
38 03 // R_inst: add 0000001100111000 rs =  1, rt =  9, imm =   5 
@1890
9a b8 // J_inst: jump 1011100010011010 address = 0189a 
@1892
a0 b8 // J_inst: jump 1011100010100000 address = 018a0 
@1894
59 33 // R_inst: sub 0011001101011001 rs =  9, rt = 10, imm = -11 
@1896
39 12 // R_inst: sub 0001001000111001 rs =  9, rt =  1, imm = -15 
@1898
7d 2f // R_inst: sub 0010111101111101 rs =  7, rt = 11, imm =  -4 
@189a
85 53 // I_inst: load 0101001110000101 rs =  9, rt = 12, imm =   5 
@189c
45 53 // I_inst: load 0101001101000101 rs =  9, rt = 10, imm =   5 
@189e
99 95 // I_inst: beq 1001010110011001 rs = 10, rt = 12, imm =  -7 
@18a0
6c 9e // I_inst: beq 1001111001101100 rs = 15, rt =  3, imm =  12 
@18a2
ba 34 // R_inst: set 0011010010111010 rs = 10, rt =  5, imm = -16 
@18a4
63 54 // I_inst: load 0101010001100011 rs = 10, rt =  3, imm =   3 
@18a6
e3 55 // I_inst: load 0101010111100011 rs = 10, rt = 15, imm =   3 
@18a8
a0 b8 // J_inst: jump 1011100010100000 address = 018a0 
@18aa
e7 1a // R_inst: sub 0001101011100111 rs = 13, rt =  7, imm =   5 
@18ac
59 30 // R_inst: sub 0011000001011001 rs =  8, rt =  2, imm =  12 
@18ae
d9 32 // R_inst: sub 0011001011011001 rs =  9, rt =  6, imm =  -8 
@18b0
fd 06 // R_inst: sub 0000011011111101 rs =  3, rt =  7, imm =  -7 
@18b2
3c 01 // R_inst: add 0000000100111100 rs =  0, rt =  9, imm =   7 
@18b4
db 32 // R_inst: sub 0011001011011011 rs =  9, rt =  6, imm =  -3 
@18b6
ba 1c // R_inst: add 0001110010111010 rs = 14, rt =  5, imm = -12 
@18b8
99 28 // R_inst: sub 0010100010011001 rs =  4, rt =  4, imm =  -5 
@18ba
6d 55 // I_inst: load 0101010101101101 rs = 10, rt = 11, imm =  13 
@18bc
87 40 // I_inst: load 0100000010000111 rs =  0, rt =  4, imm =   7 
@18be
e8 b8 // J_inst: jump 1011100011101000 address = 018e8 
@18c0
69 2f // R_inst: sub 0010111101101001 rs =  7, rt = 11, imm =  -7 
@18c2
fe 0d // R_inst: add 0000110111111110 rs =  6, rt = 15, imm =   2 
@18c4
86 13 // R_inst: add 0001001110000110 rs =  9, rt = 12, imm =  -3 
@18c6
8d 05 // R_inst: sub 0000010110001101 rs =  2, rt = 12, imm =   8 
@18c8
a6 0e // R_inst: add 0000111010100110 rs =  7, rt =  5, imm =  -8 
@18ca
49 18 // R_inst: sub 0001100001001001 rs = 12, rt =  2, imm = -16 
@18cc
f6 1c // R_inst: add 0001110011110110 rs = 14, rt =  7, imm =  -2 
@18ce
49 22 // R_inst: sub 0010001001001001 rs =  1, rt =  2, imm = -13 
@18d0
79 34 // R_inst: sub 0011010001111001 rs = 10, rt =  3, imm =  -9 
@18d2
af 28 // R_inst: sub 0010100010101111 rs =  4, rt =  5, imm =  12 
@18d4
c3 03 // R_inst: sub 0000001111000011 rs =  1, rt = 14, imm =  -9 
@18d6
17 2f // R_inst: sub 0010111100010111 rs =  7, rt =  8, imm =   6 
@18d8
3b 3b // R_inst: sub 0011101100111011 rs = 13, rt =  9, imm =   7 
@18da
bb 30 // R_inst: sub 0011000010111011 rs =  8, rt =  5, imm =   0 
@18dc
73 2f // R_inst: sub 0010111101110011 rs =  7, rt = 11, imm =  15 
@18de
53 0f // R_inst: sub 0000111101010011 rs =  7, rt = 10, imm =  13 
@18e0
39 29 // R_inst: sub 0010100100111001 rs =  4, rt =  9, imm =  -2 
@18e2
c3 35 // R_inst: sub 0011010111000011 rs = 10, rt = 14, imm =  14 
@18e4
6a 1b // R_inst: add 0001101101101010 rs = 13, rt = 11, imm =  -5 
@18e6
59 32 // R_inst: sub 0011001001011001 rs =  9, rt =  2, imm =  10 
@18e8
99 01 // R_inst: sub 0000000110011001 rs =  0, rt = 12, imm =  -1 
@18ea
cb 61 // I_inst: store 0110000111001011 rs =  0, rt = 14, imm =  11 
@18ec
26 54 // I_inst: load 0101010000100110 rs = 10, rt =  1, imm =   6 
@18ee
27 65 // I_inst: store 0110010100100111 rs =  2, rt =  9, imm =   7 
@18f0
80 61 // I_inst: store 0110000110000000 rs =  0, rt = 12, imm =   0 
@18f2
4e 8f // I_inst: beq 1000111101001110 rs =  7, rt = 10, imm =  14 
@18f4
4b 13 // R_inst: sub 0001001101001011 rs =  9, rt = 10, imm =  -3 
@18f6
42 5d // I_inst: load 0101110101000010 rs = 14, rt = 10, imm =   2 
@18f8
e2 5c // I_inst: load 0101110011100010 rs = 14, rt =  7, imm =   2 
@18fa
f2 b8 // J_inst: jump 1011100011110010 address = 018f2 
@18fc
a4 0c // R_inst: add 0000110010100100 rs =  6, rt =  5, imm =   7 
@18fe
eb 26 // R_inst: sub 0010011011101011 rs =  3, rt =  7, imm =  10 
@1900
33 03 // R_inst: sub 0000001100110011 rs =  1, rt =  9, imm =  -4 
@1902
13 35 // R_inst: sub 0011010100010011 rs = 10, rt =  8, imm = -10 
@1904
1f 14 // R_inst: sub 0001010000011111 rs = 10, rt =  0, imm =  -3 
@1906
1f 0b // R_inst: sub 0000101100011111 rs =  5, rt =  8, imm =  11 
@1908
31 0f // R_inst: sub 0000111100110001 rs =  7, rt =  9, imm = -10 
@190a
2b 01 // R_inst: sub 0000000100101011 rs =  0, rt =  9, imm =   4 
@190c
1f 17 // R_inst: sub 0001011100011111 rs = 11, rt =  8, imm =  -7 
@190e
ba 06 // R_inst: add 0000011010111010 rs =  3, rt =  5, imm = -11 
@1910
ed 64 // I_inst: store 0110010011101101 rs =  2, rt =  7, imm =  13 
@1912
2a 5a // I_inst: load 0101101000101010 rs = 13, rt =  1, imm =  10 
@1914
b7 07 // R_inst: sub 0000011110110111 rs =  3, rt = 13, imm =  -5 
@1916
9c 2a // R_inst: set 0010101010011100 rs =  5, rt =  4, imm =   2 
@1918
22 83 // I_inst: beq 1000001100100010 rs =  1, rt =  9, imm =   2 
@191a
72 28 // R_inst: set 0010100001110010 rs =  4, rt =  3, imm = -14 
@191c
0d 55 // I_inst: load 0101010100001101 rs = 10, rt =  8, imm =  13 
@191e
8d 55 // I_inst: load 0101010110001101 rs = 10, rt = 12, imm =  13 
@1920
05 99 // I_inst: beq 1001100100000101 rs = 12, rt =  8, imm =   5 
@1922
f7 27 // R_inst: sub 0010011111110111 rs =  3, rt = 15, imm =  14 
@1924
f7 35 // R_inst: sub 0011010111110111 rs = 10, rt = 15, imm = -10 
@1926
3b 33 // R_inst: sub 0011001100111011 rs =  9, rt =  9, imm =  12 
@1928
a7 1d // R_inst: sub 0001110110100111 rs = 14, rt = 13, imm =  15 
@192a
c2 09 // R_inst: add 0000100111000010 rs =  4, rt = 14, imm = -11 
@192c
56 31 // R_inst: set 0011000101010110 rs =  8, rt = 10, imm = -16 
@192e
3a b9 // J_inst: jump 1011100100111010 address = 0193a 
@1930
40 b9 // J_inst: jump 1011100101000000 address = 01940 
@1932
7d 05 // R_inst: sub 0000010101111101 rs =  2, rt = 11, imm =  -7 
@1934
9d 06 // R_inst: sub 0000011010011101 rs =  3, rt =  4, imm =  -5 
@1936
bd 0d // R_inst: sub 0000110110111101 rs =  6, rt = 13, imm = -13 
@1938
fd 0c // R_inst: sub 0000110011111101 rs =  6, rt =  7, imm =   6 
@193a
26 45 // I_inst: load 0100010100100110 rs =  2, rt =  9, imm =   6 
@193c
c6 44 // I_inst: load 0100010011000110 rs =  2, rt =  6, imm =   6 
@193e
38 8d // I_inst: beq 1000110100111000 rs =  6, rt =  9, imm =  -8 
@1940
4a b9 // J_inst: jump 1011100101001010 address = 0194a 
@1942
c3 16 // R_inst: sub 0001011011000011 rs = 11, rt =  6, imm =  -9 
@1944
1e 10 // R_inst: add 0001000000011110 rs =  8, rt =  0, imm =  -3 
@1946
f1 0e // R_inst: sub 0000111011110001 rs =  7, rt =  7, imm = -16 
@1948
27 01 // R_inst: sub 0000000100100111 rs =  0, rt =  9, imm =   9 
@194a
2e 40 // I_inst: load 0100000000101110 rs =  0, rt =  1, imm =  14 
@194c
ee 41 // I_inst: load 0100000111101110 rs =  0, rt = 15, imm =  14 
@194e
24 9e // I_inst: beq 1001111000100100 rs = 15, rt =  1, imm =   4 
@1950
af 30 // R_inst: sub 0011000010101111 rs =  8, rt =  5, imm =  -3 
@1952
b9 00 // R_inst: sub 0000000010111001 rs =  0, rt =  5, imm = -11 
@1954
b6 16 // R_inst: add 0001011010110110 rs = 11, rt =  5, imm =  14 
@1956
a4 1f // R_inst: add 0001111110100100 rs = 15, rt = 13, imm =  -4 
@1958
6c b9 // J_inst: jump 1011100101101100 address = 0196c 
@195a
72 b9 // J_inst: jump 1011100101110010 address = 01972 
@195c
bb 39 // R_inst: sub 0011100110111011 rs = 12, rt = 13, imm =  -7 
@195e
fb 19 // R_inst: sub 0001100111111011 rs = 12, rt = 15, imm =   3 
@1960
5f 37 // R_inst: sub 0011011101011111 rs = 11, rt = 10, imm = -11 
@1962
7d 0c // R_inst: sub 0000110001111101 rs =  6, rt =  3, imm = -14 
@1964
90 0c // R_inst: add 0000110010010000 rs =  6, rt =  4, imm = -14 
@1966
7f 0a // R_inst: sub 0000101001111111 rs =  5, rt =  3, imm = -12 
@1968
45 22 // R_inst: sub 0010001001000101 rs =  1, rt =  2, imm =  -2 
@196a
4f 09 // R_inst: sub 0000100101001111 rs =  4, rt = 10, imm =  13 
@196c
85 40 // I_inst: load 0100000010000101 rs =  0, rt =  4, imm =   5 
@196e
e5 41 // I_inst: load 0100000111100101 rs =  0, rt = 15, imm =   5 
@1970
94 9e // I_inst: beq 1001111010010100 rs = 15, rt =  4, imm = -12 
@1972
e6 90 // I_inst: beq 1001000011100110 rs =  8, rt =  7, imm =   6 
@1974
83 90 // I_inst: beq 1001000010000011 rs =  8, rt =  4, imm =   3 
@1976
70 08 // R_inst: add 0000100001110000 rs =  4, rt =  3, imm =  -5 
@1978
2d 2a // R_inst: sub 0010101000101101 rs =  5, rt =  1, imm =  14 
@197a
3d 07 // R_inst: sub 0000011100111101 rs =  3, rt =  9, imm = -12 
@197c
a1 92 // I_inst: beq 1001001010100001 rs =  9, rt =  5, imm =   1 
@197e
25 56 // I_inst: load 0101011000100101 rs = 11, rt =  1, imm =   5 
@1980
0d 2b // R_inst: sub 0010101100001101 rs =  5, rt =  8, imm =  -9 
@1982
7c 73 // I_inst: store 0111001101111100 rs =  9, rt = 11, imm =  -4 
@1984
5e 13 // R_inst: add 0001001101011110 rs =  9, rt = 10, imm =   1 
@1986
75 52 // I_inst: load 0101001001110101 rs =  9, rt =  3, imm = -11 
@1988
75 52 // I_inst: load 0101001001110101 rs =  9, rt =  3, imm = -11 
@198a
68 86 // I_inst: beq 1000011001101000 rs =  3, rt =  3, imm =   8 
@198c
aa 08 // R_inst: add 0000100010101010 rs =  4, rt =  5, imm =  13 
@198e
4a 0c // R_inst: add 0000110001001010 rs =  6, rt =  2, imm = -14 
@1990
f1 3d // R_inst: sub 0011110111110001 rs = 14, rt = 15, imm = -11 
@1992
7d 3e // R_inst: sub 0011111001111101 rs = 15, rt =  3, imm = -11 
@1994
c7 37 // R_inst: sub 0011011111000111 rs = 11, rt = 14, imm =   4 
@1996
2c 1a // R_inst: add 0001101000101100 rs = 13, rt =  1, imm =   5 
@1998
dd 15 // R_inst: sub 0001010111011101 rs = 10, rt = 14, imm = -12 
@199a
49 1e // R_inst: sub 0001111001001001 rs = 15, rt =  2, imm =  -8 
@199c
aa b9 // J_inst: jump 1011100110101010 address = 019aa 
@199e
b0 b9 // J_inst: jump 1011100110110000 address = 019b0 
@19a0
99 3a // R_inst: sub 0011101010011001 rs = 13, rt =  4, imm =  -2 
@19a2
9c 02 // R_inst: add 0000001010011100 rs =  1, rt =  4, imm =  -9 
@19a4
19 15 // R_inst: sub 0001010100011001 rs = 10, rt =  8, imm =  14 
@19a6
39 1b // R_inst: sub 0001101100111001 rs = 13, rt =  9, imm =  -2 
@19a8
b9 04 // R_inst: sub 0000010010111001 rs =  2, rt =  5, imm = -11 
@19aa
94 5f // I_inst: load 0101111110010100 rs = 15, rt = 12, imm = -12 
@19ac
d4 5f // I_inst: load 0101111111010100 rs = 15, rt = 14, imm = -12 
@19ae
97 9d // I_inst: beq 1001110110010111 rs = 14, rt = 12, imm =  -9 
@19b0
88 91 // I_inst: beq 1001000110001000 rs =  8, rt = 12, imm =   8 
@19b2
c0 b9 // J_inst: jump 1011100111000000 address = 019c0 
@19b4
c6 b9 // J_inst: jump 1011100111000110 address = 019c6 
@19b6
ab 0e // R_inst: sub 0000111010101011 rs =  7, rt =  5, imm =  -2 
@19b8
39 02 // R_inst: sub 0000001000111001 rs =  1, rt =  1, imm =  -7 
@19ba
46 1c // R_inst: add 0001110001000110 rs = 14, rt =  2, imm =  11 
@19bc
8e 15 // R_inst: add 0001010110001110 rs = 10, rt = 12, imm =  -7 
@19be
57 07 // R_inst: sub 0000011101010111 rs =  3, rt = 10, imm =   4 
@19c0
cf 4f // I_inst: load 0100111111001111 rs =  7, rt = 14, imm =  15 
@19c2
2f 4f // I_inst: load 0100111100101111 rs =  7, rt =  9, imm =  15 
@19c4
d7 93 // I_inst: beq 1001001111010111 rs =  9, rt = 14, imm =  -9 
@19c6
d5 58 // I_inst: load 0101100011010101 rs = 12, rt =  6, imm = -11 
@19c8
9a 17 // R_inst: add 0001011110011010 rs = 11, rt = 12, imm =  14 
@19ca
65 9f // I_inst: beq 1001111101100101 rs = 15, rt = 11, imm =   5 
@19cc
08 ba // J_inst: jump 1011101000001000 address = 01a08 
@19ce
43 29 // R_inst: sub 0010100101000011 rs =  4, rt = 10, imm =   0 
@19d0
49 2c // R_inst: sub 0010110001001001 rs =  6, rt =  2, imm =  -8 
@19d2
ff 0c // R_inst: sub 0000110011111111 rs =  6, rt =  7, imm =   7 
@19d4
0d 0a // R_inst: sub 0000101000001101 rs =  5, rt =  0, imm =   1 
@19d6
b2 17 // R_inst: add 0001011110110010 rs = 11, rt = 13, imm =   2 
@19d8
a8 17 // R_inst: add 0001011110101000 rs = 11, rt = 13, imm =  11 
@19da
1d 14 // R_inst: sub 0001010000011101 rs = 10, rt =  0, imm = -14 
@19dc
66 16 // R_inst: add 0001011001100110 rs = 11, rt =  3, imm =  -8 
@19de
e9 1d // R_inst: sub 0001110111101001 rs = 14, rt = 15, imm =  -2 
@19e0
d2 15 // R_inst: add 0001010111010010 rs = 10, rt = 14, imm =   1 
@19e2
da 16 // R_inst: add 0001011011011010 rs = 11, rt =  6, imm =  -8 
@19e4
fd 3b // R_inst: sub 0011101111111101 rs = 13, rt = 15, imm =  12 
@19e6
62 00 // R_inst: add 0000000001100010 rs =  0, rt =  3, imm = -15 
@19e8
68 19 // R_inst: add 0001100101101000 rs = 12, rt = 11, imm =  -5 
@19ea
e8 12 // R_inst: add 0001001011101000 rs =  9, rt =  7, imm =  -1 
@19ec
7d 32 // R_inst: sub 0011001001111101 rs =  9, rt =  3, imm =   3 
@19ee
6b 29 // R_inst: sub 0010100101101011 rs =  4, rt = 11, imm = -11 
@19f0
05 1c // R_inst: sub 0001110000000101 rs = 14, rt =  0, imm =   7 
@19f2
a8 03 // R_inst: add 0000001110101000 rs =  1, rt = 13, imm =  -5 
@19f4
0d 23 // R_inst: sub 0010001100001101 rs =  1, rt =  8, imm =   7 
@19f6
83 11 // R_inst: sub 0001000110000011 rs =  8, rt = 12, imm =   6 
@19f8
f3 22 // R_inst: sub 0010001011110011 rs =  1, rt =  7, imm = -12 
@19fa
5a 00 // R_inst: add 0000000001011010 rs =  0, rt =  2, imm =  -1 
@19fc
eb 0a // R_inst: sub 0000101011101011 rs =  5, rt =  7, imm =  11 
@19fe
95 12 // R_inst: sub 0001001010010101 rs =  9, rt =  4, imm = -12 
@1a00
9d 2f // R_inst: sub 0010111110011101 rs =  7, rt = 12, imm =   7 
@1a02
0f 1d // R_inst: sub 0001110100001111 rs = 14, rt =  8, imm =   2 
@1a04
22 01 // R_inst: add 0000000100100010 rs =  0, rt =  9, imm =  -3 
@1a06
90 1c // R_inst: add 0001110010010000 rs = 14, rt =  4, imm =   8 
@1a08
1a ba // J_inst: jump 1011101000011010 address = 01a1a 
@1a0a
20 ba // J_inst: jump 1011101000100000 address = 01a20 
@1a0c
8d 0c // R_inst: sub 0000110010001101 rs =  6, rt =  4, imm =  14 
@1a0e
4d 19 // R_inst: sub 0001100101001101 rs = 12, rt = 10, imm =   1 
@1a10
5d 02 // R_inst: sub 0000001001011101 rs =  1, rt =  2, imm = -15 
@1a12
dd 0b // R_inst: sub 0000101111011101 rs =  5, rt = 14, imm =  -2 
@1a14
70 17 // R_inst: add 0001011101110000 rs = 11, rt = 11, imm = -11 
@1a16
72 05 // R_inst: add 0000010101110010 rs =  2, rt = 11, imm =  -8 
@1a18
f1 2f // R_inst: sub 0010111111110001 rs =  7, rt = 15, imm = -12 
@1a1a
42 42 // I_inst: load 0100001001000010 rs =  1, rt =  2, imm =   2 
@1a1c
e2 42 // I_inst: load 0100001011100010 rs =  1, rt =  7, imm =   2 
@1a1e
55 8e // I_inst: beq 1000111001010101 rs =  7, rt =  2, imm = -11 
@1a20
ba 26 // R_inst: set 0010011010111010 rs =  3, rt =  5, imm =   0 
@1a22
47 4d // I_inst: load 0100110101000111 rs =  6, rt = 10, imm =   7 
@1a24
1d 33 // R_inst: sub 0011001100011101 rs =  9, rt =  8, imm = -12 
@1a26
79 0b // R_inst: sub 0000101101111001 rs =  5, rt = 11, imm = -10 
@1a28
cc 45 // I_inst: load 0100010111001100 rs =  2, rt = 14, imm =  12 
@1a2a
ec 44 // I_inst: load 0100010011101100 rs =  2, rt =  7, imm =  12 
@1a2c
c1 8f // I_inst: beq 1000111111000001 rs =  7, rt = 14, imm =   1 
@1a2e
5b 02 // R_inst: sub 0000001001011011 rs =  1, rt =  2, imm =  -7 
@1a30
eb 41 // I_inst: load 0100000111101011 rs =  0, rt = 15, imm =  11 
@1a32
74 34 // R_inst: set 0011010001110100 rs = 10, rt =  3, imm =  -9 
@1a34
6a ba // J_inst: jump 1011101001101010 address = 01a6a 
@1a36
32 13 // R_inst: add 0001001100110010 rs =  9, rt =  9, imm =   9 
@1a38
0b 15 // R_inst: sub 0001010100001011 rs = 10, rt =  8, imm =  -1 
@1a3a
85 2e // R_inst: sub 0010111010000101 rs =  7, rt =  4, imm =  13 
@1a3c
33 05 // R_inst: sub 0000010100110011 rs =  2, rt =  9, imm =  -4 
@1a3e
0a 09 // R_inst: add 0000100100001010 rs =  4, rt =  8, imm = -11 
@1a40
37 3e // R_inst: sub 0011111000110111 rs = 15, rt =  1, imm =  -7 
@1a42
fd 18 // R_inst: sub 0001100011111101 rs = 12, rt =  7, imm =  12 
@1a44
59 2e // R_inst: sub 0010111001011001 rs =  7, rt =  2, imm =  -6 
@1a46
91 07 // R_inst: sub 0000011110010001 rs =  3, rt = 12, imm =  -6 
@1a48
9f 3f // R_inst: sub 0011111110011111 rs = 15, rt = 12, imm =  -5 
@1a4a
13 18 // R_inst: sub 0001100000010011 rs = 12, rt =  0, imm = -16 
@1a4c
25 04 // R_inst: sub 0000010000100101 rs =  2, rt =  1, imm =  -5 
@1a4e
dc 15 // R_inst: add 0001010111011100 rs = 10, rt = 14, imm =   6 
@1a50
7e 04 // R_inst: add 0000010001111110 rs =  2, rt =  3, imm =  -9 
@1a52
15 2d // R_inst: sub 0010110100010101 rs =  6, rt =  8, imm =   2 
@1a54
a5 09 // R_inst: sub 0000100110100101 rs =  4, rt = 13, imm =  11 
@1a56
8c 1a // R_inst: add 0001101010001100 rs = 13, rt =  4, imm =   7 
@1a58
2b 06 // R_inst: sub 0000011000101011 rs =  3, rt =  1, imm = -11 
@1a5a
f7 0e // R_inst: sub 0000111011110111 rs =  7, rt =  7, imm =  12 
@1a5c
39 24 // R_inst: sub 0010010000111001 rs =  2, rt =  1, imm =   0 
@1a5e
3b 18 // R_inst: sub 0001100000111011 rs = 12, rt =  1, imm =   8 
@1a60
05 13 // R_inst: sub 0001001100000101 rs =  9, rt =  8, imm =  -3 
@1a62
8d 1e // R_inst: sub 0001111010001101 rs = 15, rt =  4, imm =   8 
@1a64
57 0b // R_inst: sub 0000101101010111 rs =  5, rt = 10, imm = -10 
@1a66
a7 34 // R_inst: sub 0011010010100111 rs = 10, rt =  5, imm =   2 
@1a68
bc 1d // R_inst: add 0001110110111100 rs = 14, rt = 13, imm =  -7 
@1a6a
06 5d // I_inst: load 0101110100000110 rs = 14, rt =  8, imm =   6 
@1a6c
66 1f // R_inst: add 0001111101100110 rs = 15, rt = 11, imm = -12 
@1a6e
8b 56 // I_inst: load 0101011010001011 rs = 11, rt =  4, imm =  11 
@1a70
af 9a // I_inst: beq 1001101010101111 rs = 13, rt =  5, imm =  15 
@1a72
61 5e // I_inst: load 0101111001100001 rs = 15, rt =  3, imm =   1 
@1a74
7b 2a // R_inst: sub 0010101001111011 rs =  5, rt =  3, imm =  -7 
@1a76
d6 0f // R_inst: add 0000111111010110 rs =  7, rt = 14, imm =  12 
@1a78
8f 0a // R_inst: sub 0000101010001111 rs =  5, rt =  4, imm =  11 
@1a7a
ab 4e // I_inst: load 0100111010101011 rs =  7, rt =  5, imm =  11 
@1a7c
ab 4f // I_inst: load 0100111110101011 rs =  7, rt = 13, imm =  11 
@1a7e
70 ba // J_inst: jump 1011101001110000 address = 01a70 
@1a80
5d 2b // R_inst: sub 0010101101011101 rs =  5, rt = 10, imm =   4 
@1a82
df 09 // R_inst: sub 0000100111011111 rs =  4, rt = 14, imm = -13 
@1a84
c7 07 // R_inst: sub 0000011111000111 rs =  3, rt = 14, imm = -14 
@1a86
cb 1d // R_inst: sub 0001110111001011 rs = 14, rt = 14, imm =  -7 
@1a88
b0 1a // R_inst: add 0001101010110000 rs = 13, rt =  5, imm =   3 
@1a8a
d9 24 // R_inst: sub 0010010011011001 rs =  2, rt =  6, imm =  -1 
@1a8c
5d 2d // R_inst: sub 0010110101011101 rs =  6, rt = 10, imm =   4 
@1a8e
3a 05 // R_inst: add 0000010100111010 rs =  2, rt =  9, imm =  -8 
@1a90
6a 9a // I_inst: beq 1001101001101010 rs = 13, rt =  3, imm =  10 
@1a92
a3 32 // R_inst: sub 0011001010100011 rs =  9, rt =  5, imm = -10 
@1a94
d9 32 // R_inst: sub 0011001011011001 rs =  9, rt =  6, imm =  13 
@1a96
7a 5e // I_inst: load 0101111001111010 rs = 15, rt =  3, imm =  -6 
@1a98
ba 5f // I_inst: load 0101111110111010 rs = 15, rt = 13, imm =  -6 
@1a9a
90 ba // J_inst: jump 1011101010010000 address = 01a90 
@1a9c
73 09 // R_inst: sub 0000100101110011 rs =  4, rt = 11, imm =  14 
@1a9e
1b 17 // R_inst: sub 0001011100011011 rs = 11, rt =  8, imm =  12 
@1aa0
d3 09 // R_inst: sub 0000100111010011 rs =  4, rt = 14, imm = -13 
@1aa2
8f 2a // R_inst: sub 0010101010001111 rs =  5, rt =  4, imm = -13 
@1aa4
e3 07 // R_inst: sub 0000011111100011 rs =  3, rt = 15, imm =   4 
@1aa6
b0 ba // J_inst: jump 1011101010110000 address = 01ab0 
@1aa8
b6 ba // J_inst: jump 1011101010110110 address = 01ab6 
@1aaa
a3 17 // R_inst: sub 0001011110100011 rs = 11, rt = 13, imm =  12 
@1aac
8a 12 // R_inst: add 0001001010001010 rs =  9, rt =  4, imm =  -2 
@1aae
39 3d // R_inst: sub 0011110100111001 rs = 14, rt =  9, imm =   7 
@1ab0
81 5b // I_inst: load 0101101110000001 rs = 13, rt = 12, imm =   1 
@1ab2
81 5a // I_inst: load 0101101010000001 rs = 13, rt =  4, imm =   1 
@1ab4
99 89 // I_inst: beq 1000100110011001 rs =  4, rt = 12, imm =  -7 
@1ab6
4b 13 // R_inst: sub 0001001101001011 rs =  9, rt = 10, imm =  -8 
@1ab8
e2 76 // I_inst: store 0111011011100010 rs = 11, rt =  7, imm =   2 
@1aba
4e 9d // I_inst: beq 1001110101001110 rs = 14, rt = 10, imm =  14 
@1abc
af 41 // I_inst: load 0100000110101111 rs =  0, rt = 13, imm =  15 
@1abe
86 49 // I_inst: load 0100100110000110 rs =  4, rt = 12, imm =   6 
@1ac0
9f 05 // R_inst: sub 0000010110011111 rs =  2, rt = 12, imm =  -9 
@1ac2
0e 16 // R_inst: add 0001011000001110 rs = 11, rt =  0, imm =  11 
@1ac4
8b 29 // R_inst: sub 0010100110001011 rs =  4, rt = 12, imm =  -3 
@1ac6
0c 36 // R_inst: set 0011011000001100 rs = 11, rt =  0, imm = -13 
@1ac8
58 47 // I_inst: load 0100011101011000 rs =  3, rt = 10, imm =  -8 
@1aca
d8 47 // I_inst: load 0100011111011000 rs =  3, rt = 14, imm =  -8 
@1acc
ba ba // J_inst: jump 1011101010111010 address = 01aba 
@1ace
0e 11 // R_inst: add 0001000100001110 rs =  8, rt =  8, imm =   7 
@1ad0
65 31 // R_inst: sub 0011000101100101 rs =  8, rt = 11, imm =  -4 
@1ad2
5e 1b // R_inst: add 0001101101011110 rs = 13, rt = 10, imm =   7 
@1ad4
e3 34 // R_inst: sub 0011010011100011 rs = 10, rt =  7, imm = -15 
@1ad6
f4 1b // R_inst: add 0001101111110100 rs = 13, rt = 15, imm =  10 
@1ad8
f6 4f // I_inst: load 0100111111110110 rs =  7, rt = 15, imm = -10 
@1ada
27 6d // I_inst: store 0110110100100111 rs =  6, rt =  9, imm =   7 
@1adc
a6 5d // I_inst: load 0101110110100110 rs = 14, rt = 13, imm =   6 
@1ade
26 5d // I_inst: load 0101110100100110 rs = 14, rt =  9, imm =   6 
@1ae0
a7 93 // I_inst: beq 1001001110100111 rs =  9, rt = 13, imm =   7 
@1ae2
be 18 // R_inst: add 0001100010111110 rs = 12, rt =  5, imm = -13 
@1ae4
87 3c // R_inst: sub 0011110010000111 rs = 14, rt =  4, imm =  -5 
@1ae6
d6 08 // R_inst: add 0000100011010110 rs =  4, rt =  6, imm =  13 
@1ae8
2a 06 // R_inst: add 0000011000101010 rs =  3, rt =  1, imm =  10 
@1aea
51 3b // R_inst: sub 0011101101010001 rs = 13, rt = 10, imm =  10 
@1aec
8e 19 // R_inst: add 0001100110001110 rs = 12, rt = 12, imm =  -5 
@1aee
e3 0f // R_inst: sub 0000111111100011 rs =  7, rt = 15, imm =   8 
@1af0
94 3b // R_inst: set 0011101110010100 rs = 13, rt = 12, imm =   7 
@1af2
a7 29 // R_inst: sub 0010100110100111 rs =  4, rt = 13, imm =  12 
@1af4
44 4a // I_inst: load 0100101001000100 rs =  5, rt =  2, imm =   4 
@1af6
c4 4b // I_inst: load 0100101111000100 rs =  5, rt = 14, imm =   4 
@1af8
4f 9c // I_inst: beq 1001110001001111 rs = 14, rt =  2, imm =  15 
@1afa
cc 00 // R_inst: add 0000000011001100 rs =  0, rt =  6, imm =  13 
@1afc
da 17 // R_inst: add 0001011111011010 rs = 11, rt = 14, imm =  15 
@1afe
99 36 // R_inst: sub 0011011010011001 rs = 11, rt =  4, imm = -11 
@1b00
52 09 // R_inst: add 0000100101010010 rs =  4, rt = 10, imm = -12 
@1b02
1b 08 // R_inst: sub 0000100000011011 rs =  4, rt =  0, imm =  12 
@1b04
c3 19 // R_inst: sub 0001100111000011 rs = 12, rt = 14, imm =   8 
@1b06
04 13 // R_inst: add 0001001100000100 rs =  9, rt =  8, imm =  -7 
@1b08
d3 2a // R_inst: sub 0010101011010011 rs =  5, rt =  6, imm =  -3 
@1b0a
53 0e // R_inst: sub 0000111001010011 rs =  7, rt =  2, imm = -11 
@1b0c
03 18 // R_inst: sub 0001100000000011 rs = 12, rt =  0, imm =  13 
@1b0e
14 18 // R_inst: add 0001100000010100 rs = 12, rt =  0, imm =  -3 
@1b10
df 02 // R_inst: sub 0000001011011111 rs =  1, rt =  6, imm = -16 
@1b12
f8 1c // R_inst: add 0001110011111000 rs = 14, rt =  7, imm =   4 
@1b14
fc 0e // R_inst: add 0000111011111100 rs =  7, rt =  7, imm =   2 
@1b16
8f 33 // R_inst: sub 0011001110001111 rs =  9, rt = 12, imm =  -6 
@1b18
c9 86 // I_inst: beq 1000011011001001 rs =  3, rt =  6, imm =   9 
@1b1a
de 4e // I_inst: load 0100111011011110 rs =  7, rt =  6, imm =  -2 
@1b1c
d8 56 // I_inst: load 0101011011011000 rs = 11, rt =  6, imm =  -8 
@1b1e
78 56 // I_inst: load 0101011001111000 rs = 11, rt =  3, imm =  -8 
@1b20
18 bb // J_inst: jump 1011101100011000 address = 01b18 
@1b22
15 35 // R_inst: sub 0011010100010101 rs = 10, rt =  8, imm = -10 
@1b24
2c 1e // R_inst: add 0001111000101100 rs = 15, rt =  1, imm = -10 
@1b26
eb 2a // R_inst: sub 0010101011101011 rs =  5, rt =  7, imm =   3 
@1b28
8a 01 // R_inst: add 0000000110001010 rs =  0, rt = 12, imm =   9 
@1b2a
4d 19 // R_inst: sub 0001100101001101 rs = 12, rt = 10, imm = -12 
@1b2c
40 bb // J_inst: jump 1011101101000000 address = 01b40 
@1b2e
46 bb // J_inst: jump 1011101101000110 address = 01b46 
@1b30
85 16 // R_inst: sub 0001011010000101 rs = 11, rt =  4, imm =  -1 
@1b32
25 05 // R_inst: sub 0000010100100101 rs =  2, rt =  9, imm = -16 
@1b34
9f 09 // R_inst: sub 0000100110011111 rs =  4, rt = 12, imm =   3 
@1b36
e5 03 // R_inst: sub 0000001111100101 rs =  1, rt = 15, imm =   8 
@1b38
af 36 // R_inst: sub 0011011010101111 rs = 11, rt =  5, imm = -14 
@1b3a
cf 0b // R_inst: sub 0000101111001111 rs =  5, rt = 14, imm =  -2 
@1b3c
9f 11 // R_inst: sub 0001000110011111 rs =  8, rt = 12, imm = -13 
@1b3e
df 10 // R_inst: sub 0001000011011111 rs =  8, rt =  6, imm =  10 
@1b40
5c 5d // I_inst: load 0101110101011100 rs = 14, rt = 10, imm =  -4 
@1b42
7c 5d // I_inst: load 0101110101111100 rs = 14, rt = 11, imm =  -4 
@1b44
54 97 // I_inst: beq 1001011101010100 rs = 11, rt = 10, imm = -12 
@1b46
d7 14 // R_inst: sub 0001010011010111 rs = 10, rt =  6, imm =  -9 
@1b48
39 0d // R_inst: sub 0000110100111001 rs =  6, rt =  9, imm =  10 
@1b4a
6c 5b // I_inst: load 0101101101101100 rs = 13, rt = 11, imm =  12 
@1b4c
5c 1d // R_inst: add 0001110101011100 rs = 14, rt = 10, imm = -16 
@1b4e
51 59 // I_inst: load 0101100101010001 rs = 12, rt = 10, imm = -15 
@1b50
d1 59 // I_inst: load 0101100111010001 rs = 12, rt = 14, imm = -15 
@1b52
4a 9d // I_inst: beq 1001110101001010 rs = 14, rt = 10, imm =  10 
@1b54
cd 18 // R_inst: sub 0001100011001101 rs = 12, rt =  6, imm =   9 
@1b56
8b 34 // R_inst: sub 0011010010001011 rs = 10, rt =  4, imm = -15 
@1b58
e8 11 // R_inst: add 0001000111101000 rs =  8, rt = 15, imm =  13 
@1b5a
c5 3f // R_inst: sub 0011111111000101 rs = 15, rt = 14, imm =   1 
@1b5c
3f 29 // R_inst: sub 0010100100111111 rs =  4, rt =  9, imm = -12 
@1b5e
11 1d // R_inst: sub 0001110100010001 rs = 14, rt =  8, imm =   5 
@1b60
2f 08 // R_inst: sub 0000100000101111 rs =  4, rt =  1, imm =   3 
@1b62
df 38 // R_inst: sub 0011100011011111 rs = 12, rt =  6, imm = -15 
@1b64
ba 1e // R_inst: add 0001111010111010 rs = 15, rt =  5, imm =  15 
@1b66
a9 30 // R_inst: sub 0011000010101001 rs =  8, rt =  5, imm = -10 
@1b68
cb 57 // I_inst: load 0101011111001011 rs = 11, rt = 14, imm =  11 
@1b6a
2a 3b // R_inst: set 0011101100101010 rs = 13, rt =  9, imm =  -4 
@1b6c
eb 6b // I_inst: store 0110101111101011 rs =  5, rt = 15, imm =  11 
@1b6e
28 66 // I_inst: store 0110011000101000 rs =  3, rt =  1, imm =   8 
@1b70
de 19 // R_inst: add 0001100111011110 rs = 12, rt = 14, imm =   4 
@1b72
2f 01 // R_inst: sub 0000000100101111 rs =  0, rt =  9, imm =  15 
@1b74
42 4e // I_inst: load 0100111001000010 rs =  7, rt =  2, imm =   2 
@1b76
c2 4f // I_inst: load 0100111111000010 rs =  7, rt = 14, imm =   2 
@1b78
43 9c // I_inst: beq 1001110001000011 rs = 14, rt =  2, imm =   3 
@1b7a
3f 09 // R_inst: sub 0000100100111111 rs =  4, rt =  9, imm =  -1 
@1b7c
87 18 // R_inst: sub 0001100010000111 rs = 12, rt =  4, imm =   9 
@1b7e
eb 0f // R_inst: sub 0000111111101011 rs =  7, rt = 15, imm =  -3 
@1b80
c9 9d // I_inst: beq 1001110111001001 rs = 14, rt = 14, imm =   9 
@1b82
a5 0d // R_inst: sub 0000110110100101 rs =  6, rt = 13, imm =   0 
@1b84
aa 0d // R_inst: add 0000110110101010 rs =  6, rt = 13, imm = -12 
@1b86
9c 0d // R_inst: add 0000110110011100 rs =  6, rt = 12, imm =  12 
@1b88
52 05 // R_inst: add 0000010101010010 rs =  2, rt = 10, imm =  -6 
@1b8a
0c 17 // R_inst: add 0001011100001100 rs = 11, rt =  8, imm =  -6 
@1b8c
63 14 // R_inst: sub 0001010001100011 rs = 10, rt =  3, imm = -16 
@1b8e
29 15 // R_inst: sub 0001010100101001 rs = 10, rt =  9, imm =   2 
@1b90
c4 0d // R_inst: add 0000110111000100 rs =  6, rt = 14, imm =  11 
@1b92
77 24 // R_inst: sub 0010010001110111 rs =  2, rt =  3, imm =  15 
@1b94
e8 87 // I_inst: beq 1000011111101000 rs =  3, rt = 15, imm =   8 
@1b96
aa bb // J_inst: jump 1011101110101010 address = 01baa 
@1b98
b0 bb // J_inst: jump 1011101110110000 address = 01bb0 
@1b9a
19 0d // R_inst: sub 0000110100011001 rs =  6, rt =  8, imm =   4 
@1b9c
e3 25 // R_inst: sub 0010010111100011 rs =  2, rt = 15, imm =  -5 
@1b9e
a3 0c // R_inst: sub 0000110010100011 rs =  6, rt =  5, imm = -15 
@1ba0
03 05 // R_inst: sub 0000010100000011 rs =  2, rt =  8, imm = -14 
@1ba2
86 1c // R_inst: add 0001110010000110 rs = 14, rt =  4, imm =   7 
@1ba4
cd 17 // R_inst: sub 0001011111001101 rs = 11, rt = 14, imm =  -7 
@1ba6
83 0c // R_inst: sub 0000110010000011 rs =  6, rt =  4, imm =   9 
@1ba8
ab 26 // R_inst: sub 0010011010101011 rs =  3, rt =  5, imm =  14 
@1baa
8d 4f // I_inst: load 0100111110001101 rs =  7, rt = 12, imm =  13 
@1bac
ad 4e // I_inst: load 0100111010101101 rs =  7, rt =  5, imm =  13 
@1bae
94 8b // I_inst: beq 1000101110010100 rs =  5, rt = 12, imm = -12 
@1bb0
a2 60 // I_inst: store 0110000010100010 rs =  0, rt =  5, imm =   2 
@1bb2
1a 24 // R_inst: set 0010010000011010 rs =  2, rt =  0, imm =  -2 
@1bb4
ed 71 // I_inst: store 0111000111101101 rs =  8, rt = 15, imm =  13 
@1bb6
15 35 // R_inst: sub 0011010100010101 rs = 10, rt =  8, imm =  -1 
@1bb8
0a 7f // I_inst: store 0111111100001010 rs = 15, rt =  8, imm =  10 
@1bba
a2 57 // I_inst: load 0101011110100010 rs = 11, rt = 13, imm =   2 
@1bbc
c2 57 // I_inst: load 0101011111000010 rs = 11, rt = 14, imm =   2 
@1bbe
a7 9d // I_inst: beq 1001110110100111 rs = 14, rt = 13, imm =   7 
@1bc0
9b 02 // R_inst: sub 0000001010011011 rs =  1, rt =  4, imm =  13 
@1bc2
51 0e // R_inst: sub 0000111001010001 rs =  7, rt =  2, imm =  -4 
@1bc4
da 09 // R_inst: add 0000100111011010 rs =  4, rt = 14, imm =   4 
@1bc6
f3 0f // R_inst: sub 0000111111110011 rs =  7, rt = 15, imm = -11 
@1bc8
82 19 // R_inst: add 0001100110000010 rs = 12, rt = 12, imm =  -9 
@1bca
e9 1e // R_inst: sub 0001111011101001 rs = 15, rt =  7, imm =   3 
@1bcc
fd 2c // R_inst: sub 0010110011111101 rs =  6, rt =  7, imm =   1 
@1bce
e6 8e // I_inst: beq 1000111011100110 rs =  7, rt =  7, imm =   6 
@1bd0
8d 39 // R_inst: sub 0011100110001101 rs = 12, rt = 12, imm = -10 
@1bd2
25 1c // R_inst: sub 0001110000100101 rs = 14, rt =  1, imm =  -2 
@1bd4
49 3d // R_inst: sub 0011110101001001 rs = 14, rt = 10, imm =  -5 
@1bd6
c3 1d // R_inst: sub 0001110111000011 rs = 14, rt = 14, imm = -11 
@1bd8
ca 1a // R_inst: add 0001101011001010 rs = 13, rt =  6, imm =   9 
@1bda
6a 0f // R_inst: add 0000111101101010 rs =  7, rt = 11, imm =  15 
@1bdc
69 0f // R_inst: sub 0000111101101001 rs =  7, rt = 11, imm = -14 
@1bde
ee bb // J_inst: jump 1011101111101110 address = 01bee 
@1be0
f4 bb // J_inst: jump 1011101111110100 address = 01bf4 
@1be2
cb 10 // R_inst: sub 0001000011001011 rs =  8, rt =  6, imm = -16 
@1be4
dd 28 // R_inst: sub 0010100011011101 rs =  4, rt =  6, imm = -15 
@1be6
5d 1b // R_inst: sub 0001101101011101 rs = 13, rt = 10, imm =  -8 
@1be8
83 3e // R_inst: sub 0011111010000011 rs = 15, rt =  4, imm =   0 
@1bea
03 03 // R_inst: sub 0000001100000011 rs =  1, rt =  8, imm =  13 
@1bec
47 3b // R_inst: sub 0011101101000111 rs = 13, rt = 10, imm =  -8 
@1bee
40 4e // I_inst: load 0100111001000000 rs =  7, rt =  2, imm =   0 
@1bf0
a0 4e // I_inst: load 0100111010100000 rs =  7, rt =  5, imm =   0 
@1bf2
56 8a // I_inst: beq 1000101001010110 rs =  5, rt =  2, imm = -10 
@1bf4
e6 2d // R_inst: set 0010110111100110 rs =  6, rt = 15, imm = -14 
@1bf6
06 bc // J_inst: jump 1011110000000110 address = 01c06 
@1bf8
0c bc // J_inst: jump 1011110000001100 address = 01c0c 
@1bfa
e3 1a // R_inst: sub 0001101011100011 rs = 13, rt =  7, imm =  -8 
@1bfc
e3 12 // R_inst: sub 0001001011100011 rs =  9, rt =  7, imm =  -1 
@1bfe
11 23 // R_inst: sub 0010001100010001 rs =  1, rt =  8, imm =  12 
@1c00
c9 3c // R_inst: sub 0011110011001001 rs = 14, rt =  6, imm =   5 
@1c02
37 17 // R_inst: sub 0001011100110111 rs = 11, rt =  9, imm =  10 
@1c04
ac 13 // R_inst: add 0001001110101100 rs =  9, rt = 13, imm =   5 
@1c06
ea 46 // I_inst: load 0100011011101010 rs =  3, rt =  7, imm =  10 
@1c08
4a 47 // I_inst: load 0100011101001010 rs =  3, rt = 10, imm =  10 
@1c0a
f6 94 // I_inst: beq 1001010011110110 rs = 10, rt =  7, imm = -10 
@1c0c
5f 07 // R_inst: sub 0000011101011111 rs =  3, rt = 10, imm =  10 
@1c0e
77 0c // R_inst: sub 0000110001110111 rs =  6, rt =  3, imm =  -3 
@1c10
eb 94 // I_inst: beq 1001010011101011 rs = 10, rt =  7, imm =  11 
@1c12
8f 0d // R_inst: sub 0000110110001111 rs =  6, rt = 12, imm =   2 
@1c14
f0 03 // R_inst: add 0000001111110000 rs =  1, rt = 15, imm =  10 
@1c16
6d 16 // R_inst: sub 0001011001101101 rs = 11, rt =  3, imm =   8 
@1c18
df 30 // R_inst: sub 0011000011011111 rs =  8, rt =  6, imm =   6 
@1c1a
36 14 // R_inst: add 0001010000110110 rs = 10, rt =  1, imm =   8 
@1c1c
03 0a // R_inst: sub 0000101000000011 rs =  5, rt =  0, imm =   8 
@1c1e
ed 2f // R_inst: sub 0010111111101101 rs =  7, rt = 15, imm = -12 
@1c20
6c 08 // R_inst: add 0000100001101100 rs =  4, rt =  3, imm =   0 
@1c22
ab 2c // R_inst: sub 0010110010101011 rs =  6, rt =  5, imm =  12 
@1c24
d3 2a // R_inst: sub 0010101011010011 rs =  5, rt =  6, imm = -11 
@1c26
c5 10 // R_inst: sub 0001000011000101 rs =  8, rt =  6, imm =  -5 
@1c28
29 1c // R_inst: sub 0001110000101001 rs = 14, rt =  1, imm =   7 
@1c2a
2c bc // J_inst: jump 1011110000101100 address = 01c2c 
@1c2c
8f 9f // I_inst: beq 1001111110001111 rs = 15, rt = 12, imm =  15 
@1c2e
f2 28 // R_inst: set 0010100011110010 rs =  4, rt =  7, imm =   3 
@1c30
50 2a // R_inst: set 0010101001010000 rs =  5, rt =  2, imm =  -4 
@1c32
cb 2d // R_inst: sub 0010110111001011 rs =  6, rt = 14, imm =   0 
@1c34
99 2d // R_inst: sub 0010110110011001 rs =  6, rt = 12, imm =   1 
@1c36
95 75 // I_inst: store 0111010110010101 rs = 10, rt = 12, imm = -11 
@1c38
76 3a // R_inst: set 0011101001110110 rs = 13, rt =  3, imm =  14 
@1c3a
80 47 // I_inst: load 0100011110000000 rs =  3, rt = 12, imm =   0 
@1c3c
e0 47 // I_inst: load 0100011111100000 rs =  3, rt = 15, imm =   0 
@1c3e
2c bc // J_inst: jump 1011110000101100 address = 01c2c 
@1c40
bd 1d // R_inst: sub 0001110110111101 rs = 14, rt = 13, imm =   1 
@1c42
b9 0c // R_inst: sub 0000110010111001 rs =  6, rt =  5, imm =  -4 
@1c44
93 2a // R_inst: sub 0010101010010011 rs =  5, rt =  4, imm =  13 
@1c46
11 25 // R_inst: sub 0010010100010001 rs =  2, rt =  8, imm =   7 
@1c48
d1 1c // R_inst: sub 0001110011010001 rs = 14, rt =  6, imm =  -5 
@1c4a
db 2b // R_inst: sub 0010101111011011 rs =  5, rt = 14, imm =  -4 
@1c4c
a9 84 // I_inst: beq 1000010010101001 rs =  2, rt =  5, imm =   9 
@1c4e
a4 50 // I_inst: load 0101000010100100 rs =  8, rt =  5, imm =   4 
@1c50
a0 54 // I_inst: load 0101010010100000 rs = 10, rt =  5, imm =   0 
@1c52
40 54 // I_inst: load 0101010001000000 rs = 10, rt =  2, imm =   0 
@1c54
4c bc // J_inst: jump 1011110001001100 address = 01c4c 
@1c56
59 3b // R_inst: sub 0011101101011001 rs = 13, rt = 10, imm =   6 
@1c58
24 0e // R_inst: add 0000111000100100 rs =  7, rt =  1, imm =  -6 
@1c5a
27 29 // R_inst: sub 0010100100100111 rs =  4, rt =  9, imm =  10 
@1c5c
e3 0d // R_inst: sub 0000110111100011 rs =  6, rt = 15, imm = -14 
@1c5e
84 07 // R_inst: add 0000011110000100 rs =  3, rt = 12, imm = -12 
@1c60
2d 54 // I_inst: load 0101010000101101 rs = 10, rt =  1, imm =  13 
@1c62
e9 96 // I_inst: beq 1001011011101001 rs = 11, rt =  7, imm =   9 
@1c64
53 22 // R_inst: sub 0010001001010011 rs =  1, rt =  2, imm =  14 
@1c66
cd 90 // I_inst: beq 1001000011001101 rs =  8, rt =  6, imm =  13 
@1c68
4a 2c // R_inst: set 0010110001001010 rs =  6, rt =  2, imm = -15 
@1c6a
88 21 // R_inst: set 0010000110001000 rs =  0, rt = 12, imm =   0 
@1c6c
6e bc // J_inst: jump 1011110001101110 address = 01c6e 
@1c6e
ea 21 // R_inst: set 0010000111101010 rs =  0, rt = 15, imm =   6 
@1c70
80 bc // J_inst: jump 1011110010000000 address = 01c80 
@1c72
86 bc // J_inst: jump 1011110010000110 address = 01c86 
@1c74
ce 04 // R_inst: add 0000010011001110 rs =  2, rt =  6, imm =  11 
@1c76
f1 27 // R_inst: sub 0010011111110001 rs =  3, rt = 15, imm =  -7 
@1c78
19 1e // R_inst: sub 0001111000011001 rs = 15, rt =  0, imm =   1 
@1c7a
d9 00 // R_inst: sub 0000000011011001 rs =  0, rt =  6, imm =  13 
@1c7c
39 1e // R_inst: sub 0001111000111001 rs = 15, rt =  1, imm = -15 
@1c7e
7f 05 // R_inst: sub 0000010101111111 rs =  2, rt = 11, imm =  10 
@1c80
c9 57 // I_inst: load 0101011111001001 rs = 11, rt = 14, imm =   9 
@1c82
c9 57 // I_inst: load 0101011111001001 rs = 11, rt = 14, imm =   9 
@1c84
d6 9d // I_inst: beq 1001110111010110 rs = 14, rt = 14, imm = -10 
@1c86
9a bc // J_inst: jump 1011110010011010 address = 01c9a 
@1c88
a0 bc // J_inst: jump 1011110010100000 address = 01ca0 
@1c8a
2f 31 // R_inst: sub 0011000100101111 rs =  8, rt =  9, imm =  -3 
@1c8c
4f 16 // R_inst: sub 0001011001001111 rs = 11, rt =  2, imm =  14 
@1c8e
af 19 // R_inst: sub 0001100110101111 rs = 12, rt = 13, imm = -12 
@1c90
99 29 // R_inst: sub 0010100110011001 rs =  4, rt = 12, imm = -12 
@1c92
15 03 // R_inst: sub 0000001100010101 rs =  1, rt =  8, imm =  -6 
@1c94
0f 19 // R_inst: sub 0001100100001111 rs = 12, rt =  8, imm =  11 
@1c96
71 00 // R_inst: sub 0000000001110001 rs =  0, rt =  3, imm =  -3 
@1c98
eb 06 // R_inst: sub 0000011011101011 rs =  3, rt =  7, imm =  -1 
@1c9a
4f 5c // I_inst: load 0101110001001111 rs = 14, rt =  2, imm =  15 
@1c9c
ef 5c // I_inst: load 0101110011101111 rs = 14, rt =  7, imm =  15 
@1c9e
54 8e // I_inst: beq 1000111001010100 rs =  7, rt =  2, imm = -12 
@1ca0
6a 3b // R_inst: set 0011101101101010 rs = 13, rt = 11, imm =  -7 
@1ca2
f4 2c // R_inst: set 0010110011110100 rs =  6, rt =  7, imm =  -1 
@1ca4
ae bc // J_inst: jump 1011110010101110 address = 01cae 
@1ca6
02 16 // R_inst: add 0001011000000010 rs = 11, rt =  0, imm =  14 
@1ca8
e4 1e // R_inst: add 0001111011100100 rs = 15, rt =  7, imm =  -8 
@1caa
90 16 // R_inst: add 0001011010010000 rs = 11, rt =  4, imm =   0 
@1cac
0b 10 // R_inst: sub 0001000000001011 rs =  8, rt =  0, imm = -10 
@1cae
47 03 // R_inst: sub 0000001101000111 rs =  1, rt = 10, imm = -10 
@1cb0
0c 8b // I_inst: beq 1000101100001100 rs =  5, rt =  8, imm =  12 
@1cb2
1a 0b // R_inst: add 0000101100011010 rs =  5, rt =  8, imm =  -2 
@1cb4
b3 5d // I_inst: load 0101110110110011 rs = 14, rt = 13, imm = -13 
@1cb6
6a 58 // I_inst: load 0101100001101010 rs = 12, rt =  3, imm =  10 
@1cb8
0a 5f // I_inst: load 0101111100001010 rs = 15, rt =  8, imm =  10 
@1cba
aa 5e // I_inst: load 0101111010101010 rs = 15, rt =  5, imm =  10 
@1cbc
b0 bc // J_inst: jump 1011110010110000 address = 01cb0 
@1cbe
dc 1c // R_inst: add 0001110011011100 rs = 14, rt =  6, imm =  -9 
@1cc0
a2 04 // R_inst: add 0000010010100010 rs =  2, rt =  5, imm =  10 
@1cc2
a9 25 // R_inst: sub 0010010110101001 rs =  2, rt = 13, imm =  -1 
@1cc4
2f 18 // R_inst: sub 0001100000101111 rs = 12, rt =  1, imm =   5 
@1cc6
5b 09 // R_inst: sub 0000100101011011 rs =  4, rt = 10, imm =  -2 
@1cc8
ec 14 // R_inst: add 0001010011101100 rs = 10, rt =  7, imm =  -1 
@1cca
48 43 // I_inst: load 0100001101001000 rs =  1, rt = 10, imm =   8 
@1ccc
ce 79 // I_inst: store 0111100111001110 rs = 12, rt = 14, imm =  14 
@1cce
f0 34 // R_inst: set 0011010011110000 rs = 10, rt =  7, imm =   4 
@1cd0
0c bd // J_inst: jump 1011110100001100 address = 01d0c 
@1cd2
69 14 // R_inst: sub 0001010001101001 rs = 10, rt =  3, imm =  -5 
@1cd4
6d 11 // R_inst: sub 0001000101101101 rs =  8, rt = 11, imm =   1 
@1cd6
71 02 // R_inst: sub 0000001001110001 rs =  1, rt =  3, imm =  -1 
@1cd8
af 17 // R_inst: sub 0001011110101111 rs = 11, rt = 13, imm =  13 
@1cda
32 08 // R_inst: add 0000100000110010 rs =  4, rt =  1, imm =   7 
@1cdc
8c 12 // R_inst: add 0001001010001100 rs =  9, rt =  4, imm =  -6 
@1cde
7f 11 // R_inst: sub 0001000101111111 rs =  8, rt = 11, imm =  10 
@1ce0
a3 25 // R_inst: sub 0010010110100011 rs =  2, rt = 13, imm =  -3 
@1ce2
9c 13 // R_inst: add 0001001110011100 rs =  9, rt = 12, imm =  15 
@1ce4
33 25 // R_inst: sub 0010010100110011 rs =  2, rt =  9, imm =   9 
@1ce6
af 2c // R_inst: sub 0010110010101111 rs =  6, rt =  5, imm =  14 
@1ce8
92 05 // R_inst: add 0000010110010010 rs =  2, rt = 12, imm = -16 
@1cea
b6 1b // R_inst: add 0001101110110110 rs = 13, rt = 13, imm =  -2 
@1cec
e7 1e // R_inst: sub 0001111011100111 rs = 15, rt =  7, imm =   5 
@1cee
e2 0c // R_inst: add 0000110011100010 rs =  6, rt =  7, imm = -10 
@1cf0
70 04 // R_inst: add 0000010001110000 rs =  2, rt =  3, imm =  -2 
@1cf2
68 1a // R_inst: add 0001101001101000 rs = 13, rt =  3, imm =  13 
@1cf4
50 01 // R_inst: add 0000000101010000 rs =  0, rt = 10, imm = -11 
@1cf6
53 3a // R_inst: sub 0011101001010011 rs = 13, rt =  2, imm =   6 
@1cf8
ed 22 // R_inst: sub 0010001011101101 rs =  1, rt =  7, imm = -10 
@1cfa
69 18 // R_inst: sub 0001100001101001 rs = 12, rt =  3, imm =  -1 
@1cfc
bc 13 // R_inst: add 0001001110111100 rs =  9, rt = 13, imm =  -8 
@1cfe
2c 07 // R_inst: add 0000011100101100 rs =  3, rt =  9, imm =  11 
@1d00
f3 3f // R_inst: sub 0011111111110011 rs = 15, rt = 15, imm =  -7 
@1d02
c8 18 // R_inst: add 0001100011001000 rs = 12, rt =  6, imm =  -6 
@1d04
d3 19 // R_inst: sub 0001100111010011 rs = 12, rt = 14, imm =  15 
@1d06
cb 3e // R_inst: sub 0011111011001011 rs = 15, rt =  6, imm = -13 
@1d08
94 00 // R_inst: add 0000000010010100 rs =  0, rt =  4, imm = -15 
@1d0a
89 01 // R_inst: sub 0000000110001001 rs =  0, rt = 12, imm =  -7 
@1d0c
cc 84 // I_inst: beq 1000010011001100 rs =  2, rt =  6, imm =  12 
@1d0e
69 60 // I_inst: store 0110000001101001 rs =  0, rt =  3, imm =   9 
@1d10
38 20 // R_inst: set 0010000000111000 rs =  0, rt =  1, imm =  14 
@1d12
cb 48 // I_inst: load 0100100011001011 rs =  4, rt =  6, imm =  11 
@1d14
4b 48 // I_inst: load 0100100001001011 rs =  4, rt =  2, imm =  11 
@1d16
0c bd // J_inst: jump 1011110100001100 address = 01d0c 
@1d18
fe 12 // R_inst: add 0001001011111110 rs =  9, rt =  7, imm = -13 
@1d1a
47 12 // R_inst: sub 0001001001000111 rs =  9, rt =  2, imm = -13 
@1d1c
91 3b // R_inst: sub 0011101110010001 rs = 13, rt = 12, imm =  -8 
@1d1e
67 26 // R_inst: sub 0010011001100111 rs =  3, rt =  3, imm =  13 
@1d20
58 01 // R_inst: add 0000000101011000 rs =  0, rt = 10, imm =   0 
@1d22
46 03 // R_inst: add 0000001101000110 rs =  1, rt = 10, imm = -10 
@1d24
59 2a // R_inst: sub 0010101001011001 rs =  5, rt =  2, imm =  -4 
@1d26
0a 15 // R_inst: add 0001010100001010 rs = 10, rt =  8, imm =  -3 
@1d28
9a 1b // R_inst: add 0001101110011010 rs = 13, rt = 12, imm =   0 
@1d2a
4d 91 // I_inst: beq 1001000101001101 rs =  8, rt = 10, imm =  13 
@1d2c
a6 14 // R_inst: add 0001010010100110 rs = 10, rt =  5, imm =  12 
@1d2e
32 3e // R_inst: set 0011111000110010 rs = 15, rt =  1, imm =  13 
@1d30
44 57 // I_inst: load 0101011101000100 rs = 11, rt = 10, imm =   4 
@1d32
04 57 // I_inst: load 0101011100000100 rs = 11, rt =  8, imm =   4 
@1d34
2a bd // J_inst: jump 1011110100101010 address = 01d2a 
@1d36
90 1d // R_inst: add 0001110110010000 rs = 14, rt = 12, imm =   0 
@1d38
3b 32 // R_inst: sub 0011001000111011 rs =  9, rt =  1, imm = -11 
@1d3a
83 2b // R_inst: sub 0010101110000011 rs =  5, rt = 12, imm =  11 
@1d3c
2e 07 // R_inst: add 0000011100101110 rs =  3, rt =  9, imm =  -7 
@1d3e
65 19 // R_inst: sub 0001100101100101 rs = 12, rt = 11, imm =   7 
@1d40
05 1c // R_inst: sub 0001110000000101 rs = 14, rt =  0, imm = -13 
@1d42
70 14 // R_inst: add 0001010001110000 rs = 10, rt =  3, imm =  12 
@1d44
b9 02 // R_inst: sub 0000001010111001 rs =  1, rt =  5, imm =   6 
@1d46
4f 90 // I_inst: beq 1001000001001111 rs =  8, rt =  2, imm =  15 
@1d48
9f 76 // I_inst: store 0111011010011111 rs = 11, rt =  4, imm =  -1 
@1d4a
94 39 // R_inst: set 0011100110010100 rs = 12, rt = 12, imm = -15 
@1d4c
2f 4c // I_inst: load 0100110000101111 rs =  6, rt =  1, imm =  15 
@1d4e
95 1a // R_inst: sub 0001101010010101 rs = 13, rt =  4, imm =  -2 
@1d50
d3 27 // R_inst: sub 0010011111010011 rs =  3, rt = 14, imm = -14 
@1d52
16 35 // R_inst: set 0011010100010110 rs = 10, rt =  8, imm =   6 
@1d54
4b 56 // I_inst: load 0101011001001011 rs = 11, rt =  2, imm =  11 
@1d56
0b 57 // I_inst: load 0101011100001011 rs = 11, rt =  8, imm =  11 
@1d58
46 bd // J_inst: jump 1011110101000110 address = 01d46 
@1d5a
ee 05 // R_inst: add 0000010111101110 rs =  2, rt = 15, imm =  -5 
@1d5c
69 23 // R_inst: sub 0010001101101001 rs =  1, rt = 11, imm =   8 
@1d5e
6d 2e // R_inst: sub 0010111001101101 rs =  7, rt =  3, imm =  13 
@1d60
69 23 // R_inst: sub 0010001101101001 rs =  1, rt = 11, imm =   0 
@1d62
9d 22 // R_inst: sub 0010001010011101 rs =  1, rt =  4, imm =  -8 
@1d64
ec 1c // R_inst: add 0001110011101100 rs = 14, rt =  7, imm =  -6 
@1d66
92 2c // R_inst: set 0010110010010010 rs =  6, rt =  4, imm = -15 
@1d68
76 bd // J_inst: jump 1011110101110110 address = 01d76 
@1d6a
7c bd // J_inst: jump 1011110101111100 address = 01d7c 
@1d6c
51 0d // R_inst: sub 0000110101010001 rs =  6, rt = 10, imm =   9 
@1d6e
51 0a // R_inst: sub 0000101001010001 rs =  5, rt =  2, imm =   2 
@1d70
51 0b // R_inst: sub 0000101101010001 rs =  5, rt = 10, imm =   4 
@1d72
31 0f // R_inst: sub 0000111100110001 rs =  7, rt =  9, imm =   9 
@1d74
c9 0b // R_inst: sub 0000101111001001 rs =  5, rt = 14, imm =  12 
@1d76
ef 41 // I_inst: load 0100000111101111 rs =  0, rt = 15, imm =  15 
@1d78
6f 41 // I_inst: load 0100000101101111 rs =  0, rt = 11, imm =  15 
@1d7a
f7 97 // I_inst: beq 1001011111110111 rs = 11, rt = 15, imm =  -9 
@1d7c
87 6e // I_inst: store 0110111010000111 rs =  7, rt =  4, imm =   7 
@1d7e
ae 86 // I_inst: beq 1000011010101110 rs =  3, rt =  5, imm =  14 
@1d80
8c 58 // I_inst: load 0101100010001100 rs = 12, rt =  4, imm =  12 
@1d82
0a 29 // R_inst: set 0010100100001010 rs =  4, rt =  8, imm = -13 
@1d84
63 09 // R_inst: sub 0000100101100011 rs =  4, rt = 11, imm =  -1 
@1d86
0e 61 // I_inst: store 0110000100001110 rs =  0, rt =  8, imm =  14 
@1d88
22 61 // I_inst: store 0110000100100010 rs =  0, rt =  9, imm =   2 
@1d8a
af 5c // I_inst: load 0101110010101111 rs = 14, rt =  5, imm =  15 
@1d8c
6f 5c // I_inst: load 0101110001101111 rs = 14, rt =  3, imm =  15 
@1d8e
7e bd // J_inst: jump 1011110101111110 address = 01d7e 
@1d90
39 1d // R_inst: sub 0001110100111001 rs = 14, rt =  9, imm =  -8 
@1d92
3a 0b // R_inst: add 0000101100111010 rs =  5, rt =  9, imm =  -3 
@1d94
44 01 // R_inst: add 0000000101000100 rs =  0, rt = 10, imm =   7 
@1d96
8a 04 // R_inst: add 0000010010001010 rs =  2, rt =  4, imm =  10 
@1d98
55 08 // R_inst: sub 0000100001010101 rs =  4, rt =  2, imm =  15 
@1d9a
79 1d // R_inst: sub 0001110101111001 rs = 14, rt = 11, imm =   4 
@1d9c
46 5c // I_inst: load 0101110001000110 rs = 14, rt =  2, imm =   6 
@1d9e
d2 05 // R_inst: add 0000010111010010 rs =  2, rt = 14, imm =  10 
@1da0
24 2d // R_inst: set 0010110100100100 rs =  6, rt =  9, imm =   2 
@1da2
2e 3d // R_inst: set 0011110100101110 rs = 14, rt =  9, imm =  -3 
@1da4
f0 15 // R_inst: add 0001010111110000 rs = 10, rt = 15, imm =  10 
@1da6
09 3f // R_inst: sub 0011111100001001 rs = 15, rt =  8, imm = -16 
@1da8
8f 04 // R_inst: sub 0000010010001111 rs =  2, rt =  4, imm =   8 
@1daa
6d 8d // I_inst: beq 1000110101101101 rs =  6, rt = 11, imm =  13 
@1dac
f2 09 // R_inst: add 0000100111110010 rs =  4, rt = 15, imm =  -1 
@1dae
b6 24 // R_inst: set 0010010010110110 rs =  2, rt =  5, imm =   4 
@1db0
23 09 // R_inst: sub 0000100100100011 rs =  4, rt =  9, imm =  -9 
@1db2
9a 23 // R_inst: set 0010001110011010 rs =  1, rt = 12, imm =   2 
@1db4
64 41 // I_inst: load 0100000101100100 rs =  0, rt = 11, imm =   4 
@1db6
c4 40 // I_inst: load 0100000011000100 rs =  0, rt =  6, imm =   4 
@1db8
aa bd // J_inst: jump 1011110110101010 address = 01daa 
@1dba
9f 01 // R_inst: sub 0000000110011111 rs =  0, rt = 12, imm =  15 
@1dbc
69 12 // R_inst: sub 0001001001101001 rs =  9, rt =  3, imm =   3 
@1dbe
32 1c // R_inst: add 0001110000110010 rs = 14, rt =  1, imm = -15 
@1dc0
c6 06 // R_inst: add 0000011011000110 rs =  3, rt =  6, imm =   7 
@1dc2
1f 14 // R_inst: sub 0001010000011111 rs = 10, rt =  0, imm =  -9 
@1dc4
a6 17 // R_inst: add 0001011110100110 rs = 11, rt = 13, imm =  -6 
@1dc6
a2 03 // R_inst: add 0000001110100010 rs =  1, rt = 13, imm =  12 
@1dc8
a6 3c // R_inst: set 0011110010100110 rs = 14, rt =  5, imm =  -1 
@1dca
a8 31 // R_inst: set 0011000110101000 rs =  8, rt = 13, imm =   6 
@1dcc
f2 bd // J_inst: jump 1011110111110010 address = 01df2 
@1dce
28 19 // R_inst: add 0001100100101000 rs = 12, rt =  9, imm =  14 
@1dd0
59 1e // R_inst: sub 0001111001011001 rs = 15, rt =  2, imm =  -4 
@1dd2
fc 18 // R_inst: add 0001100011111100 rs = 12, rt =  7, imm =   0 
@1dd4
63 07 // R_inst: sub 0000011101100011 rs =  3, rt = 11, imm = -11 
@1dd6
e9 31 // R_inst: sub 0011000111101001 rs =  8, rt = 15, imm =  -5 
@1dd8
ee 04 // R_inst: add 0000010011101110 rs =  2, rt =  7, imm =   2 
@1dda
3f 2f // R_inst: sub 0010111100111111 rs =  7, rt =  9, imm = -11 
@1ddc
f7 3a // R_inst: sub 0011101011110111 rs = 13, rt =  7, imm =   6 
@1dde
ad 18 // R_inst: sub 0001100010101101 rs = 12, rt =  5, imm =  10 
@1de0
df 39 // R_inst: sub 0011100111011111 rs = 12, rt = 14, imm =   7 
@1de2
af 06 // R_inst: sub 0000011010101111 rs =  3, rt =  5, imm =  -2 
@1de4
2b 1f // R_inst: sub 0001111100101011 rs = 15, rt =  9, imm =  -1 
@1de6
43 33 // R_inst: sub 0011001101000011 rs =  9, rt = 10, imm =   0 
@1de8
f9 29 // R_inst: sub 0010100111111001 rs =  4, rt = 15, imm =   2 
@1dea
e5 0c // R_inst: sub 0000110011100101 rs =  6, rt =  7, imm =   2 
@1dec
6e 04 // R_inst: add 0000010001101110 rs =  2, rt =  3, imm =  12 
@1dee
7c 1f // R_inst: add 0001111101111100 rs = 15, rt = 11, imm =  14 
@1df0
82 15 // R_inst: add 0001010110000010 rs = 10, rt = 12, imm = -15 
@1df2
fe bd // J_inst: jump 1011110111111110 address = 01dfe 
@1df4
04 be // J_inst: jump 1011111000000100 address = 01e04 
@1df6
33 12 // R_inst: sub 0001001000110011 rs =  9, rt =  1, imm = -10 
@1df8
53 08 // R_inst: sub 0000100001010011 rs =  4, rt =  2, imm =  -6 
@1dfa
33 1a // R_inst: sub 0001101000110011 rs = 13, rt =  1, imm =   1 
@1dfc
53 0e // R_inst: sub 0000111001010011 rs =  7, rt =  2, imm =  -1 
@1dfe
eb 4b // I_inst: load 0100101111101011 rs =  5, rt = 15, imm =  11 
@1e00
6b 4a // I_inst: load 0100101001101011 rs =  5, rt =  3, imm =  11 
@1e02
f8 87 // I_inst: beq 1000011111111000 rs =  3, rt = 15, imm =  -8 
@1e04
87 5e // I_inst: load 0101111010000111 rs = 15, rt =  4, imm =   7 
@1e06
d5 09 // R_inst: sub 0000100111010101 rs =  4, rt = 14, imm = -10 
@1e08
6f 40 // I_inst: load 0100000001101111 rs =  0, rt =  3, imm =  15 
@1e0a
f9 2b // R_inst: sub 0010101111111001 rs =  5, rt = 15, imm =  -2 
@1e0c
14 be // J_inst: jump 1011111000010100 address = 01e14 
@1e0e
57 12 // R_inst: sub 0001001001010111 rs =  9, rt =  2, imm =  -4 
@1e10
8f 28 // R_inst: sub 0010100010001111 rs =  4, rt =  4, imm = -13 
@1e12
56 12 // R_inst: add 0001001001010110 rs =  9, rt =  2, imm =   6 
@1e14
20 be // J_inst: jump 1011111000100000 address = 01e20 
@1e16
26 be // J_inst: jump 1011111000100110 address = 01e26 
@1e18
c3 1b // R_inst: sub 0001101111000011 rs = 13, rt = 14, imm =   8 
@1e1a
bd 11 // R_inst: sub 0001000110111101 rs =  8, rt = 13, imm =   5 
@1e1c
dd 1f // R_inst: sub 0001111111011101 rs = 15, rt = 14, imm =  -7 
@1e1e
5d 12 // R_inst: sub 0001001001011101 rs =  9, rt =  2, imm = -14 
@1e20
a2 44 // I_inst: load 0100010010100010 rs =  2, rt =  5, imm =   2 
@1e22
c2 44 // I_inst: load 0100010011000010 rs =  2, rt =  6, imm =   2 
@1e24
b8 8c // I_inst: beq 1000110010111000 rs =  6, rt =  5, imm =  -8 
@1e26
3a be // J_inst: jump 1011111000111010 address = 01e3a 
@1e28
40 be // J_inst: jump 1011111001000000 address = 01e40 
@1e2a
07 02 // R_inst: sub 0000001000000111 rs =  1, rt =  0, imm =   7 
@1e2c
ac 08 // R_inst: add 0000100010101100 rs =  4, rt =  5, imm =  -2 
@1e2e
6d 11 // R_inst: sub 0001000101101101 rs =  8, rt = 11, imm =  -7 
@1e30
13 1b // R_inst: sub 0001101100010011 rs = 13, rt =  8, imm =  -8 
@1e32
87 2c // R_inst: sub 0010110010000111 rs =  6, rt =  4, imm = -14 
@1e34
54 1e // R_inst: add 0001111001010100 rs = 15, rt =  2, imm =  13 
@1e36
75 1c // R_inst: sub 0001110001110101 rs = 14, rt =  3, imm =   7 
@1e38
15 05 // R_inst: sub 0000010100010101 rs =  2, rt =  8, imm =   7 
@1e3a
a3 5c // I_inst: load 0101110010100011 rs = 14, rt =  5, imm =   3 
@1e3c
83 5c // I_inst: load 0101110010000011 rs = 14, rt =  4, imm =   3 
@1e3e
b4 88 // I_inst: beq 1000100010110100 rs =  4, rt =  5, imm = -12 
@1e40
6b 1b // R_inst: sub 0001101101101011 rs = 13, rt = 11, imm =  15 
@1e42
ee 90 // I_inst: beq 1001000011101110 rs =  8, rt =  7, imm =  14 
@1e44
30 46 // I_inst: load 0100011000110000 rs =  3, rt =  1, imm = -16 
@1e46
e7 46 // I_inst: load 0100011011100111 rs =  3, rt =  7, imm =   7 
@1e48
07 47 // I_inst: load 0100011100000111 rs =  3, rt =  8, imm =   7 
@1e4a
42 be // J_inst: jump 1011111001000010 address = 01e42 
@1e4c
f9 22 // R_inst: sub 0010001011111001 rs =  1, rt =  7, imm = -14 
@1e4e
5c 0a // R_inst: add 0000101001011100 rs =  5, rt =  2, imm =  15 
@1e50
8a 1f // R_inst: add 0001111110001010 rs = 15, rt = 12, imm = -11 
@1e52
93 06 // R_inst: sub 0000011010010011 rs =  3, rt =  4, imm =  15 
@1e54
9a 1f // R_inst: add 0001111110011010 rs = 15, rt = 12, imm =  -3 
@1e56
a3 0f // R_inst: sub 0000111110100011 rs =  7, rt = 13, imm = -10 
@1e58
8d 12 // R_inst: sub 0001001010001101 rs =  9, rt =  4, imm =   8 
@1e5a
7f 1a // R_inst: sub 0001101001111111 rs = 13, rt =  3, imm = -10 
@1e5c
11 2b // R_inst: sub 0010101100010001 rs =  5, rt =  8, imm = -12 
@1e5e
3e 1c // R_inst: add 0001110000111110 rs = 14, rt =  1, imm =  -9 
@1e60
22 3d // R_inst: set 0011110100100010 rs = 14, rt =  9, imm =  14 
@1e62
8e 93 // I_inst: beq 1001001110001110 rs =  9, rt = 12, imm =  14 
@1e64
38 31 // R_inst: set 0011000100111000 rs =  8, rt =  9, imm =  -9 
@1e66
ed 0b // R_inst: sub 0000101111101101 rs =  5, rt = 15, imm =  -4 
@1e68
25 19 // R_inst: sub 0001100100100101 rs = 12, rt =  9, imm =  -7 
@1e6a
8f 51 // I_inst: load 0101000110001111 rs =  8, rt = 12, imm =  15 
@1e6c
2f 51 // I_inst: load 0101000100101111 rs =  8, rt =  9, imm =  15 
@1e6e
62 be // J_inst: jump 1011111001100010 address = 01e62 
@1e70
be 1d // R_inst: add 0001110110111110 rs = 14, rt = 13, imm =  13 
@1e72
36 19 // R_inst: add 0001100100110110 rs = 12, rt =  9, imm =  12 
@1e74
b7 0e // R_inst: sub 0000111010110111 rs =  7, rt =  5, imm =   3 
@1e76
75 3d // R_inst: sub 0011110101110101 rs = 14, rt = 11, imm =  14 
@1e78
aa 04 // R_inst: add 0000010010101010 rs =  2, rt =  5, imm = -15 
@1e7a
6b 12 // R_inst: sub 0001001001101011 rs =  9, rt =  3, imm =  -1 
@1e7c
dc 12 // R_inst: add 0001001011011100 rs =  9, rt =  6, imm =   1 
@1e7e
87 07 // R_inst: sub 0000011110000111 rs =  3, rt = 12, imm =  -9 
@1e80
56 08 // R_inst: add 0000100001010110 rs =  4, rt =  2, imm =  14 
@1e82
47 05 // R_inst: sub 0000010101000111 rs =  2, rt = 10, imm =  -2 
@1e84
c2 be // J_inst: jump 1011111011000010 address = 01ec2 
@1e86
6a 1a // R_inst: add 0001101001101010 rs = 13, rt =  3, imm =  -4 
@1e88
7d 29 // R_inst: sub 0010100101111101 rs =  4, rt = 11, imm = -16 
@1e8a
43 37 // R_inst: sub 0011011101000011 rs = 11, rt = 10, imm =  -2 
@1e8c
f5 11 // R_inst: sub 0001000111110101 rs =  8, rt = 15, imm =   1 
@1e8e
02 1b // R_inst: add 0001101100000010 rs = 13, rt =  8, imm = -11 
@1e90
a9 2a // R_inst: sub 0010101010101001 rs =  5, rt =  5, imm =   8 
@1e92
18 06 // R_inst: add 0000011000011000 rs =  3, rt =  0, imm =  14 
@1e94
d3 36 // R_inst: sub 0011011011010011 rs = 11, rt =  6, imm = -13 
@1e96
a4 0f // R_inst: add 0000111110100100 rs =  7, rt = 13, imm =  12 
@1e98
ae 0f // R_inst: add 0000111110101110 rs =  7, rt = 13, imm =  11 
@1e9a
57 22 // R_inst: sub 0010001001010111 rs =  1, rt =  2, imm =  11 
@1e9c
f5 37 // R_inst: sub 0011011111110101 rs = 11, rt = 15, imm =  13 
@1e9e
f9 11 // R_inst: sub 0001000111111001 rs =  8, rt = 15, imm =  14 
@1ea0
94 0c // R_inst: add 0000110010010100 rs =  6, rt =  4, imm =  15 
@1ea2
83 39 // R_inst: sub 0011100110000011 rs = 12, rt = 12, imm = -15 
@1ea4
7b 26 // R_inst: sub 0010011001111011 rs =  3, rt =  3, imm =  10 
@1ea6
69 2d // R_inst: sub 0010110101101001 rs =  6, rt = 11, imm = -16 
@1ea8
bb 23 // R_inst: sub 0010001110111011 rs =  1, rt = 13, imm =  -4 
@1eaa
5d 0c // R_inst: sub 0000110001011101 rs =  6, rt =  2, imm =  15 
@1eac
c4 05 // R_inst: add 0000010111000100 rs =  2, rt = 14, imm =   7 
@1eae
47 33 // R_inst: sub 0011001101000111 rs =  9, rt = 10, imm =   4 
@1eb0
9a 1c // R_inst: add 0001110010011010 rs = 14, rt =  4, imm =  -6 
@1eb2
9b 15 // R_inst: sub 0001010110011011 rs = 10, rt = 12, imm =  -7 
@1eb4
6e 09 // R_inst: add 0000100101101110 rs =  4, rt = 11, imm =  -1 
@1eb6
55 29 // R_inst: sub 0010100101010101 rs =  4, rt = 10, imm =   5 
@1eb8
a8 18 // R_inst: add 0001100010101000 rs = 12, rt =  5, imm =   9 
@1eba
49 2c // R_inst: sub 0010110001001001 rs =  6, rt =  2, imm =  -6 
@1ebc
4d 1b // R_inst: sub 0001101101001101 rs = 13, rt = 10, imm =   7 
@1ebe
3b 0b // R_inst: sub 0000101100111011 rs =  5, rt =  9, imm =  -4 
@1ec0
c9 3d // R_inst: sub 0011110111001001 rs = 14, rt = 14, imm =  15 
@1ec2
4e 8b // I_inst: beq 1000101101001110 rs =  5, rt = 10, imm =  14 
@1ec4
2e 06 // R_inst: add 0000011000101110 rs =  3, rt =  1, imm =   5 
@1ec6
03 16 // R_inst: sub 0001011000000011 rs = 11, rt =  0, imm =   5 
@1ec8
1d 23 // R_inst: sub 0010001100011101 rs =  1, rt =  8, imm =  -5 
@1eca
ce 03 // R_inst: add 0000001111001110 rs =  1, rt = 14, imm =  13 
@1ecc
1a 29 // R_inst: set 0010100100011010 rs =  4, rt =  8, imm =  -1 
@1ece
5b 51 // I_inst: load 0101000101011011 rs =  8, rt = 10, imm =  -5 
@1ed0
bb 50 // I_inst: load 0101000010111011 rs =  8, rt =  5, imm =  -5 
@1ed2
c2 be // J_inst: jump 1011111011000010 address = 01ec2 
@1ed4
f4 0e // R_inst: add 0000111011110100 rs =  7, rt =  7, imm =  12 
@1ed6
a3 37 // R_inst: sub 0011011110100011 rs = 11, rt = 13, imm =   9 
@1ed8
99 27 // R_inst: sub 0010011110011001 rs =  3, rt = 12, imm =  13 
@1eda
88 0d // R_inst: add 0000110110001000 rs =  6, rt = 12, imm =  -7 
@1edc
8a 0f // R_inst: add 0000111110001010 rs =  7, rt = 12, imm =   7 
@1ede
d9 3b // R_inst: sub 0011101111011001 rs = 13, rt = 14, imm =   8 
@1ee0
3d 33 // R_inst: sub 0011001100111101 rs =  9, rt =  9, imm =  -5 
@1ee2
48 3d // R_inst: set 0011110101001000 rs = 14, rt = 10, imm =  -3 
@1ee4
16 bf // J_inst: jump 1011111100010110 address = 01f16 
@1ee6
43 13 // R_inst: sub 0001001101000011 rs =  9, rt = 10, imm =   3 
@1ee8
9f 3a // R_inst: sub 0011101010011111 rs = 13, rt =  4, imm =  -8 
@1eea
c3 12 // R_inst: sub 0001001011000011 rs =  9, rt =  6, imm =   7 
@1eec
df 2d // R_inst: sub 0010110111011111 rs =  6, rt = 14, imm = -16 
@1eee
d4 06 // R_inst: add 0000011011010100 rs =  3, rt =  6, imm =  -2 
@1ef0
4d 04 // R_inst: sub 0000010001001101 rs =  2, rt =  2, imm =  12 
@1ef2
24 03 // R_inst: add 0000001100100100 rs =  1, rt =  9, imm = -14 
@1ef4
64 16 // R_inst: add 0001011001100100 rs = 11, rt =  3, imm =   0 
@1ef6
33 19 // R_inst: sub 0001100100110011 rs = 12, rt =  9, imm =   5 
@1ef8
2e 0b // R_inst: add 0000101100101110 rs =  5, rt =  9, imm = -13 
@1efa
7b 1d // R_inst: sub 0001110101111011 rs = 14, rt = 11, imm =  13 
@1efc
29 23 // R_inst: sub 0010001100101001 rs =  1, rt =  9, imm =  14 
@1efe
bb 2f // R_inst: sub 0010111110111011 rs =  7, rt = 13, imm =   7 
@1f00
38 0a // R_inst: add 0000101000111000 rs =  5, rt =  1, imm =   4 
@1f02
8b 16 // R_inst: sub 0001011010001011 rs = 11, rt =  4, imm = -12 
@1f04
4f 08 // R_inst: sub 0000100001001111 rs =  4, rt =  2, imm =  11 
@1f06
eb 18 // R_inst: sub 0001100011101011 rs = 12, rt =  7, imm =  -5 
@1f08
7a 11 // R_inst: add 0001000101111010 rs =  8, rt = 11, imm =   8 
@1f0a
54 1b // R_inst: add 0001101101010100 rs = 13, rt = 10, imm =   6 
@1f0c
8f 25 // R_inst: sub 0010010110001111 rs =  2, rt = 12, imm =  -1 
@1f0e
18 13 // R_inst: add 0001001100011000 rs =  9, rt =  8, imm =  -1 
@1f10
66 1d // R_inst: add 0001110101100110 rs = 14, rt = 11, imm =  -6 
@1f12
29 22 // R_inst: sub 0010001000101001 rs =  1, rt =  1, imm =  -2 
@1f14
d5 0e // R_inst: sub 0000111011010101 rs =  7, rt =  6, imm = -11 
@1f16
74 5e // I_inst: load 0101111001110100 rs = 15, rt =  3, imm = -12 
@1f18
f4 5e // I_inst: load 0101111011110100 rs = 15, rt =  7, imm = -12 
@1f1a
61 8e // I_inst: beq 1000111001100001 rs =  7, rt =  3, imm =   1 
@1f1c
b7 0d // R_inst: sub 0000110110110111 rs =  6, rt = 13, imm =  15 
@1f1e
6b 40 // I_inst: load 0100000001101011 rs =  0, rt =  3, imm =  11 
@1f20
81 50 // I_inst: load 0101000010000001 rs =  8, rt =  4, imm =   1 
@1f22
b9 52 // I_inst: load 0101001010111001 rs =  9, rt =  5, imm =  -7 
@1f24
99 52 // I_inst: load 0101001010011001 rs =  9, rt =  4, imm =  -7 
@1f26
a1 88 // I_inst: beq 1000100010100001 rs =  4, rt =  5, imm =   1 
@1f28
8b 33 // R_inst: sub 0011001110001011 rs =  9, rt = 12, imm =  11 
@1f2a
5a bf // J_inst: jump 1011111101011010 address = 01f5a 
@1f2c
47 0d // R_inst: sub 0000110101000111 rs =  6, rt = 10, imm = -10 
@1f2e
ab 1b // R_inst: sub 0001101110101011 rs = 13, rt = 13, imm =  -3 
@1f30
8a 14 // R_inst: add 0001010010001010 rs = 10, rt =  4, imm = -11 
@1f32
0e 1a // R_inst: add 0001101000001110 rs = 13, rt =  0, imm = -10 
@1f34
f5 28 // R_inst: sub 0010100011110101 rs =  4, rt =  7, imm =   3 
@1f36
5d 25 // R_inst: sub 0010010101011101 rs =  2, rt = 10, imm =   4 
@1f38
3f 1b // R_inst: sub 0001101100111111 rs = 13, rt =  9, imm =  12 
@1f3a
c5 01 // R_inst: sub 0000000111000101 rs =  0, rt = 14, imm =   9 
@1f3c
65 3d // R_inst: sub 0011110101100101 rs = 14, rt = 11, imm =   9 
@1f3e
7b 2a // R_inst: sub 0010101001111011 rs =  5, rt =  3, imm =  -6 
@1f40
a9 2b // R_inst: sub 0010101110101001 rs =  5, rt = 13, imm =   7 
@1f42
e3 38 // R_inst: sub 0011100011100011 rs = 12, rt =  7, imm =   4 
@1f44
68 1f // R_inst: add 0001111101101000 rs = 15, rt = 11, imm =   0 
@1f46
68 0c // R_inst: add 0000110001101000 rs =  6, rt =  3, imm = -10 
@1f48
ae 13 // R_inst: add 0001001110101110 rs =  9, rt = 13, imm =  -3 
@1f4a
1f 1d // R_inst: sub 0001110100011111 rs = 14, rt =  8, imm =  -5 
@1f4c
ea 1d // R_inst: add 0001110111101010 rs = 14, rt = 15, imm = -10 
@1f4e
ee 06 // R_inst: add 0000011011101110 rs =  3, rt =  7, imm =  -1 
@1f50
3f 22 // R_inst: sub 0010001000111111 rs =  1, rt =  1, imm =  12 
@1f52
d1 1c // R_inst: sub 0001110011010001 rs = 14, rt =  6, imm =   5 
@1f54
87 1c // R_inst: sub 0001110010000111 rs = 14, rt =  4, imm = -15 
@1f56
0d 0e // R_inst: sub 0000111000001101 rs =  7, rt =  0, imm =   3 
@1f58
ea 1e // R_inst: add 0001111011101010 rs = 15, rt =  7, imm =   2 
@1f5a
68 bf // J_inst: jump 1011111101101000 address = 01f68 
@1f5c
b1 2e // R_inst: sub 0010111010110001 rs =  7, rt =  5, imm =  -2 
@1f5e
0e 14 // R_inst: add 0001010000001110 rs = 10, rt =  0, imm =   1 
@1f60
78 0b // R_inst: add 0000101101111000 rs =  5, rt = 11, imm =  14 
@1f62
85 32 // R_inst: sub 0011001010000101 rs =  9, rt =  4, imm =  -1 
@1f64
2b 28 // R_inst: sub 0010100000101011 rs =  4, rt =  1, imm =  13 
@1f66
79 24 // R_inst: sub 0010010001111001 rs =  2, rt =  3, imm =  15 
@1f68
7f 5f // I_inst: load 0101111101111111 rs = 15, rt = 11, imm =  -1 
@1f6a
2e 8d // I_inst: beq 1000110100101110 rs =  6, rt =  9, imm =  14 
@1f6c
8a 39 // R_inst: set 0011100110001010 rs = 12, rt = 12, imm = -10 
@1f6e
b2 0f // R_inst: add 0000111110110010 rs =  7, rt = 13, imm =   6 
@1f70
70 20 // R_inst: set 0010000001110000 rs =  0, rt =  3, imm = -16 
@1f72
43 1d // R_inst: sub 0001110101000011 rs = 14, rt = 10, imm =   3 
@1f74
55 23 // R_inst: sub 0010001101010101 rs =  1, rt = 10, imm = -12 
@1f76
d7 06 // R_inst: sub 0000011011010111 rs =  3, rt =  6, imm =  11 
@1f78
25 43 // I_inst: load 0100001100100101 rs =  1, rt =  9, imm =   5 
@1f7a
c5 42 // I_inst: load 0100001011000101 rs =  1, rt =  6, imm =   5 
@1f7c
6a bf // J_inst: jump 1011111101101010 address = 01f6a 
@1f7e
d5 10 // R_inst: sub 0001000011010101 rs =  8, rt =  6, imm =  -7 
@1f80
28 08 // R_inst: add 0000100000101000 rs =  4, rt =  1, imm = -11 
@1f82
70 17 // R_inst: add 0001011101110000 rs = 11, rt = 11, imm =  14 
@1f84
72 11 // R_inst: add 0001000101110010 rs =  8, rt = 11, imm =   6 
@1f86
b7 15 // R_inst: sub 0001010110110111 rs = 10, rt = 13, imm = -15 
@1f88
eb 4a // I_inst: load 0100101011101011 rs =  5, rt =  7, imm =  11 
@1f8a
9a bf // J_inst: jump 1011111110011010 address = 01f9a 
@1f8c
a0 bf // J_inst: jump 1011111110100000 address = 01fa0 
@1f8e
83 35 // R_inst: sub 0011010110000011 rs = 10, rt = 12, imm = -15 
@1f90
e3 0a // R_inst: sub 0000101011100011 rs =  5, rt =  7, imm =  14 
@1f92
82 0d // R_inst: add 0000110110000010 rs =  6, rt = 12, imm =   5 
@1f94
2d 09 // R_inst: sub 0000100100101101 rs =  4, rt =  9, imm =  -4 
@1f96
d4 0e // R_inst: add 0000111011010100 rs =  7, rt =  6, imm =  -1 
@1f98
75 0c // R_inst: sub 0000110001110101 rs =  6, rt =  3, imm =  -7 
@1f9a
5f 58 // I_inst: load 0101100001011111 rs = 12, rt =  2, imm =  -1 
@1f9c
9f 58 // I_inst: load 0101100010011111 rs = 12, rt =  4, imm =  -1 
@1f9e
56 88 // I_inst: beq 1000100001010110 rs =  4, rt =  2, imm = -10 
@1fa0
d0 5f // I_inst: load 0101111111010000 rs = 15, rt = 14, imm = -16 
@1fa2
f0 5e // I_inst: load 0101111011110000 rs = 15, rt =  7, imm = -16 
@1fa4
ce 8f // I_inst: beq 1000111111001110 rs =  7, rt = 14, imm =  14 
@1fa6
4f 2e // R_inst: sub 0010111001001111 rs =  7, rt =  2, imm = -16 
@1fa8
63 31 // R_inst: sub 0011000101100011 rs =  8, rt = 11, imm =  -3 
@1faa
6f 37 // R_inst: sub 0011011101101111 rs = 11, rt = 11, imm =   4 
@1fac
57 23 // R_inst: sub 0010001101010111 rs =  1, rt = 10, imm =   6 
@1fae
47 2e // R_inst: sub 0010111001000111 rs =  7, rt =  2, imm =   6 
@1fb0
f2 1e // R_inst: add 0001111011110010 rs = 15, rt =  7, imm = -16 
@1fb2
3a 1f // R_inst: add 0001111100111010 rs = 15, rt =  9, imm =   2 
@1fb4
b2 06 // R_inst: add 0000011010110010 rs =  3, rt =  5, imm =   8 
@1fb6
89 3f // R_inst: sub 0011111110001001 rs = 15, rt = 12, imm =  -3 
@1fb8
22 15 // R_inst: add 0001010100100010 rs = 10, rt =  9, imm =  12 
@1fba
10 0e // R_inst: add 0000111000010000 rs =  7, rt =  0, imm =  15 
@1fbc
f3 07 // R_inst: sub 0000011111110011 rs =  3, rt = 15, imm =  12 
@1fbe
b9 28 // R_inst: sub 0010100010111001 rs =  4, rt =  5, imm =  -2 
@1fc0
31 1e // R_inst: sub 0001111000110001 rs = 15, rt =  1, imm =  -8 
@1fc2
d7 0b // R_inst: sub 0000101111010111 rs =  5, rt = 14, imm =  -1 
@1fc4
e9 24 // R_inst: sub 0010010011101001 rs =  2, rt =  7, imm = -10 
@1fc6
5a 0b // R_inst: add 0000101101011010 rs =  5, rt = 10, imm =  -2 
@1fc8
67 18 // R_inst: sub 0001100001100111 rs = 12, rt =  3, imm =  15 
@1fca
6d 09 // R_inst: sub 0000100101101101 rs =  4, rt = 11, imm =   2 
@1fcc
65 0f // R_inst: sub 0000111101100101 rs =  7, rt = 11, imm =  -3 
@1fce
9b 37 // R_inst: sub 0011011110011011 rs = 11, rt = 12, imm = -16 
@1fd0
a5 1f // R_inst: sub 0001111110100101 rs = 15, rt = 13, imm =  -4 
@1fd2
22 00 // R_inst: add 0000000000100010 rs =  0, rt =  1, imm =  -1 
@1fd4
da 0f // R_inst: add 0000111111011010 rs =  7, rt = 14, imm = -16 
@1fd6
73 1e // R_inst: sub 0001111001110011 rs = 15, rt =  3, imm =   1 
@1fd8
57 14 // R_inst: sub 0001010001010111 rs = 10, rt =  2, imm = -10 
@1fda
46 17 // R_inst: add 0001011101000110 rs = 11, rt = 10, imm =  14 
@1fdc
e2 00 // R_inst: add 0000000011100010 rs =  0, rt =  7, imm =  12 
@1fde
ae 1e // R_inst: add 0001111010101110 rs = 15, rt =  5, imm =  13 
@1fe0
ae 0f // R_inst: add 0000111110101110 rs =  7, rt = 13, imm = -16 
@1fe2
68 07 // R_inst: add 0000011101101000 rs =  3, rt = 11, imm =  14 
@1fe4
48 06 // R_inst: add 0000011001001000 rs =  3, rt =  2, imm =   0 
@1fe6
b8 0e // R_inst: add 0000111010111000 rs =  7, rt =  5, imm =  -7 
@1fe8
8d 3c // R_inst: sub 0011110010001101 rs = 14, rt =  4, imm =  12 
@1fea
52 03 // R_inst: add 0000001101010010 rs =  1, rt = 10, imm = -10 
@1fec
48 1e // R_inst: add 0001111001001000 rs = 15, rt =  2, imm = -13 
@1fee
f6 15 // R_inst: add 0001010111110110 rs = 10, rt = 15, imm =  -6 
@1ff0
83 38 // R_inst: sub 0011100010000011 rs = 12, rt =  4, imm =  -8 
@1ff2
24 03 // R_inst: add 0000001100100100 rs =  1, rt =  9, imm =   3 
@1ff4
25 0e // R_inst: sub 0000111000100101 rs =  7, rt =  1, imm =   4 
@1ff6
95 3d // R_inst: sub 0011110110010101 rs = 14, rt = 12, imm =  13 
@1ff8
42 1b // R_inst: add 0001101101000010 rs = 13, rt = 10, imm =   1 
@1ffa
27 06 // R_inst: sub 0000011000100111 rs =  3, rt =  1, imm =   2 
@1ffc
13 15 // R_inst: sub 0001010100010011 rs = 10, rt =  8, imm =   9 
@1ffe
71 3d // R_inst: sub 0011110101110001 rs = 14, rt = 11, imm = -15 
